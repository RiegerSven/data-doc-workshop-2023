[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data documentation with R and Quarto",
    "section": "",
    "text": "1 Preperation\nThis Quarto book is designed to provide an introduction into data documentation with R and Quarto and serves as the accompanying script for the workshop. For an overview about the workshop agenda see the Introduction section.\nThe book was last rendered on April 04, 2023.\nPlease prepare yourself by following the steps below:\nIf you encounter any problems, please send us an email."
  },
  {
    "objectID": "index.html#software-install",
    "href": "index.html#software-install",
    "title": "Data documentation with R and Quarto",
    "section": "\n1.1 Software installation",
    "text": "1.1 Software installation\nPlease install the following software and make sure that you are download the latest (released!) version of each program:\n\nR (v4.2.3, R Core Team, 2023): https://cran.r-project.org/bin/windows/base/\nRStudio (v2023.3.0.386, Posit team, 2023): https://posit.co/downloads/\nQuarto (v1.3, Allaire, 2022): https://quarto.org/docs/get-started/"
  },
  {
    "objectID": "index.html#pkg-install",
    "href": "index.html#pkg-install",
    "title": "Data documentation with R and Quarto",
    "section": "\n1.2 Package installation",
    "text": "1.2 Package installation\n\nR is an integrated suite of software facilities for data manipulation, calculation and graphical display (see https://www.r-project.org).\n\nR is–among other things–great, because there is a large collection of packages. During the workshop, we will use the following R packages:\n\nShow/hide codepkgList &lt;- c(\"rmarkdown\",\n             \"knitr\", # tables\n             \"kableExtra\", # tables\n             \"tibble\", # data frame\n             \"data.table\", # rbindlist function\n             \"haven\", # read data\n             \"lavaan\", # generate data\n             \"dplyr\", # prepare data\n             \"moments\", # skewness/kurtosis\n             \"car\", # recoding\n             \"psych\", # descriptive statistics\n             \"ggplot2\") # plots\n\n\n\nrmarkdown (v2.21, Allaire et al., 2023)\n\nknitr (v1.42, Xie, 2023)\n\nkableExtra (v1.3.4, Zhu, 2021)\n\ntibble (v3.2.1, Müller & Wickham, 2023)\n\ndata.table (v1.14.8, Dowle & Srinivasan, 2023)\n\nhaven (v2.5.1, Wickham et al., 2022)\n\nlavaan (v0.6.15, Rosseel et al., 2023)\n\ndplyr (v1.1.1, Wickham, François, et al., 2023)\n\nmoments (v0.14.1, Komsta & Novomestky, 2022)\n\ncar (v3.1.1, Fox et al., 2022)\n\npsych (v2.3.3, Revelle, 2023)\n\nggplot2 (v3.4.1, Wickham, Chang, et al., 2023)\n\n\nYou can install them (check the versions!) with the following code:\n\nShow/hide codelapply(pkgList,\n       function(x) \n         if(!x %in% rownames(installed.packages())) install.packages(x))\n\n\n\n\n\n\n\n\nInformation About the R Session\n\n\n\n\n\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=German_Germany.utf8     LC_CTYPE=German_Germany.utf8      \n[3] LC_MONETARY=German_Germany.utf8    LC_NUMERIC=C                      \n[5] LC_TIME=English_United States.1252\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.5.4 compiler_4.2.3    fastmap_1.1.0     cli_3.6.1        \n [5] tools_4.2.3       htmltools_0.5.4   rstudioapi_0.14   yaml_2.3.7       \n [9] rmarkdown_2.21    knitr_1.42        jsonlite_1.8.4    xfun_0.36        \n[13] digest_0.6.29     rlang_1.1.0       evaluate_0.19    \n\n\nNote that we often did not load the packages, but use the function via :: (e.g., psych::describe())."
  },
  {
    "objectID": "index.html#gen-dat",
    "href": "index.html#gen-dat",
    "title": "Data documentation with R and Quarto",
    "section": "\n1.3 Data set",
    "text": "1.3 Data set\nFinally, we will use an (simulated) example data set. To get it, execute the following code:\n\nShow/hide codePopMod &lt;- \"\neta1 =~ .8*msc1 + .8*msc2 + -.8*msc3 + -.8*msc4\neta1 ~~ 1*eta1\neta1 ~ 0*1\n\nmsc3 ~~ .2*msc4\n\nmsc1 | -1.5*t1 + 0*t2 + 1.5*t3\nmsc2 | -1.5*t1 + 0*t2 + 1.5*t3\nmsc3 | 1.5*t1 + 0*t2 + -1.5*t3\nmsc4 | 1.5*t1 + 0*t2 + -1.5*t3\n\nage ~ 10*1\nage ~~ 2.5*age\n\nsex | 0*t1\nsex ~*~ .5*sex\n\neta1 ~~ age + sex\n\"\n\nexDat &lt;- lavaan::simulateData(model = PopMod,\n                              sample.nobs = seq(50,250, by = 50),\n                              seed = 999)\n\n\nSome cosmetics, and “adding” missing data.\n\nShow/hide codeexDat$sex &lt;- exDat$sex-1\nexDat$edu &lt;- exDat$group-1\nexDat$group &lt;- NULL\n\npropMiss1 &lt;- .05\npropMiss2 &lt;- .1\n\nexDat$sex &lt;- ifelse (\n  rbinom(\n    nrow(exDat),\n    size = 1,\n    propMiss1) == 1,\n  NA,\n  exDat$sex\n  )\n\nexDat$age &lt;- ifelse (\n  rbinom(\n    nrow(exDat),\n    size = 1,\n    propMiss2) == 1,\n  NA,\n  exDat$age\n  )\n\nexDat$msc2 &lt;- ifelse (\n  rbinom(\n    nrow(exDat),\n    size = 1,\n    propMiss2) == 1,\n  NA,\n  exDat$msc2\n  )\n\n\nAdd a character.\n\nexDat$fLang &lt;- rep(c(\"german\", \"ger\", \"germn\",\n                     \"italian\",\n                     \"french\",\n                     NA,\n                     \" \",\n                     \"\"),\n                   c(650, 49, 1, 10, 10, 20, 5, 5))\n\nAdd outlier for the variable age.\n\nexDat[600, \"age\"] &lt;- 30\n\nAdd id variable.\n\nexDat$id &lt;- 1:nrow(exDat)\n\n\n\n\n\n\n\nSome descriptive statistics\n\n\n\n\n\n\n\n\nDescriptive statistics of the generated data \n\n\nvars\nn\nmean\nsd\nmedian\ntrimmed\nmad\nmin\nmax\nrange\nskew\nkurtosis\nse\n\n\n\nmsc1\n1\n750\n2.52\n0.74\n3.00\n2.52\n1.48\n1.00\n4\n3.00\n-0.02\n-0.31\n0.03\n\n\nmsc2\n2\n680\n2.54\n0.72\n3.00\n2.53\n1.48\n1.00\n4\n3.00\n-0.02\n-0.27\n0.03\n\n\nmsc3\n3\n750\n2.49\n0.75\n2.00\n2.49\n1.48\n1.00\n4\n3.00\n0.00\n-0.34\n0.03\n\n\nmsc4\n4\n750\n2.48\n0.75\n2.00\n2.48\n1.48\n1.00\n4\n3.00\n0.06\n-0.33\n0.03\n\n\nage\n5\n670\n10.03\n1.76\n10.03\n10.02\n1.46\n5.44\n30\n24.56\n2.11\n23.94\n0.07\n\n\nsex\n6\n711\n0.50\n0.50\n0.00\n0.50\n0.00\n0.00\n1\n1.00\n0.01\n-2.00\n0.02\n\n\nedu\n7\n750\n2.67\n1.25\n3.00\n2.79\n1.48\n0.00\n4\n4.00\n-0.59\n-0.73\n0.05\n\n\nfLang*\n8\n730\n4.89\n0.58\n5.00\n5.00\n0.00\n1.00\n7\n6.00\n-2.93\n19.28\n0.02\n\n\n\n\n\n\n\n\nCorrelation table of the generated data \n\n\nmsc1\nmsc2\nmsc3\nmsc4\nage\nsex\nedu\n\n\n\nmsc1\n1.00\n\n\n\n\n\n\n\n\nmsc2\n0.54\n1.00\n\n\n\n\n\n\n\nmsc3\n-0.59\n-0.55\n1.00\n\n\n\n\n\n\nmsc4\n-0.58\n-0.53\n0.72\n1.00\n\n\n\n\n\nage\n0.01\n0.04\n0.01\n0.00\n1.00\n\n\n\n\nsex\n0.05\n0.02\n-0.04\n-0.02\n-0.05\n1.00\n\n\n\nedu\n0.01\n-0.03\n0.00\n0.05\n-0.02\n-0.04\n1.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAllaire, J. (2022). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAllaire, J., Xie, Y., Dervieux, C., McPherson, J., Luraschi, J., Ushey, K., Atkins, A., Wickham, H., Cheng, J., Chang, W., & Iannone, R. (2023). Rmarkdown: Dynamic documents for r. https://CRAN.R-project.org/package=rmarkdown\n\n\nDowle, M., & Srinivasan, A. (2023). Data.table: Extension of ‘data.frame‘. https://CRAN.R-project.org/package=data.table\n\n\nFox, J., Weisberg, S., & Price, B. (2022). Car: Companion to applied regression. https://CRAN.R-project.org/package=car\n\n\nKomsta, L., & Novomestky, F. (2022). Moments: Moments, cumulants, skewness, kurtosis and related tests. https://CRAN.R-project.org/package=moments\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://CRAN.R-project.org/package=tibble\n\n\nPosit team. (2023). RStudio: Integrated development environment for r. Posit Software, PBC. http://www.posit.co/\n\n\nR Core Team. (2023). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRevelle, W. (2023). Psych: Procedures for psychological, psychometric, and personality research. https://personality-project.org/r/psych/ https://personality-project.org/r/psych-manual.pdf\n\n\nRosseel, Y., Jorgensen, T. D., & Rockwood, N. (2023). Lavaan: Latent variable analysis. https://lavaan.ugent.be\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., & Dunnington, D. (2023). ggplot2: Create elegant data visualisations using the grammar of graphics. https://CRAN.R-project.org/package=ggplot2\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://CRAN.R-project.org/package=dplyr\n\n\nWickham, H., Miller, E., & Smith, D. (2022). Haven: Import and export SPSS, stata and SAS files. https://CRAN.R-project.org/package=haven\n\n\nXie, Y. (2023). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/\n\n\nZhu, H. (2021). kableExtra: Construct complex table with kable and pipe syntax. https://CRAN.R-project.org/package=kableExtra"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Welcome to the workshop",
    "section": "",
    "text": "Welcome\n\nWho are we?\nWhy this workshop?\n\n\n\nSome words regarding data sets\n\nCosts\nResponsibility\n\n\n\nWhat awaits you in the workshop?\n\nInput\nExercises\n\n\n\nAgenda\n\nsee on the left, and thereafter, on the right!\n\n\n\nMaterial\n\nAll material can be found on the network drive L on https://github.com\n\nthe repository: https://github.com/RiegerSven/data-doc-workshop-2023\n(the website: https://riegersven.github.io/data-doc-workshop-2023/)"
  },
  {
    "objectID": "gen-info.html#what-is-data-documentation",
    "href": "gen-info.html#what-is-data-documentation",
    "title": "\n3  General information on data documentation\n",
    "section": "\n3.1 What is data documentation?",
    "text": "3.1 What is data documentation?\n\nData documentation is a central part of data management1 in general and is part of the DFG Guidelines for safeguarding good scientific research practice (code of conduct)\n\nGuideline 12: Documentation (for more see below)\n\n\n\n\n\n\n\n\n\nGuideline 12: Documentation\n\n\n\n\n\n\nResearchers document all information relevant to the production of a research result as clearly as is required by and is appropriate for the relevant subject area to allow the result to be reviewed and assessed. In general, this also includes documenting individual results that do not support the research hypothesis. The selection of results must be avoided. Where subject-specific recommendations exist for review and assessment, researchers create documentation in accordance with these guidelines. If the documentation does not satisfy these requirements, the constraints and the reasons for them are clearly explained. Documentation and research results must not be manipulated; they are protected as effectively as possible against manipulation.\n\nExplanations:\n\nAn important basis for enabling replication is to make available the information necessary to understand the research (including the research data used or generated, the methodological, evaluation and analytical steps taken, and, if relevant, the development of the hypothesis), to ensure that citations are clear, and, as far as possible, to enable third parties to access this information. Where research software is being developed, the source code is documented.\n\n\n\n\n\nData documentation is a continuous process and it should start at the beginning (see e.g., Figure 3.1) of each project that collects (any kind of) data\n\n\n\nFigure 3.1: Proposed institutional research data management workflow by Wissik & Ďurčo (2015)\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the following, we restrict the term data documentation to the documentation of a single data set."
  },
  {
    "objectID": "gen-info.html#who-uses-data-documentation",
    "href": "gen-info.html#who-uses-data-documentation",
    "title": "\n3  General information on data documentation\n",
    "section": "\n3.2 Who uses data documentation?",
    "text": "3.2 Who uses data documentation?\nEverybody who works with the data set(s). It serves as a guidance, especially for people who did not collect the data themselves."
  },
  {
    "objectID": "gen-info.html#how-is-data-documentation-structured",
    "href": "gen-info.html#how-is-data-documentation-structured",
    "title": "\n3  General information on data documentation\n",
    "section": "\n3.3 How is data documentation structured?",
    "text": "3.3 How is data documentation structured?\nData documentation include several parts:\n\nGeneral information on the data set and the usage of it\nDocumentation of the survey process\n\nInformation about the variables (e.g., demographic variables), (achievement) tests, items and scales\n\nScale level\nItem wording\nDescriptive Statistics (e.g., \\(N, M, SD,Min, Max,...\\); for more see below)\nCross-references to other studies\nSources\n\n\nBibliography\n\nAn example of a table of conents of a so-called “Skalenhandbuch” can be seen in Figure 3.2.\n\n\nFigure 3.2: Example of table of contents of a “Skalenhandbuch”"
  },
  {
    "objectID": "gen-info.html#procedure-of-data-documentation",
    "href": "gen-info.html#procedure-of-data-documentation",
    "title": "\n3  General information on data documentation\n",
    "section": "\n3.4 Procedure of data documentation",
    "text": "3.4 Procedure of data documentation\n\n\n\n\n\n\nTip: Data management (ger only)\n\n\n\n\n\nRecommendations for data management (e.g., planning, generation, preparation & analyses, and publications)\n\n\nFigure 3.3: Forschungsdatenmanagement in kleinen Forschungsprojekten\n\n\n\n\n\n\n3.4.1 Basis\nThe basis of data documentation are the:\n\ncodebooks & questionnaires\nthe (final) data sets\n\nTo get an overview, you should start with carefully reviewing these sources and think about a meaningful structure and order.\n\n\n\n\n\n\nTip: How to design codebooks?\n\n\n\n\n\nYou can find some information at the https://datawizkb.leibniz-psychology.org website.\n\n\n\n\n3.4.2 Order\n\n\nIt is advisable to group the variables according to their content. In the following example variable clusters are listed:\n\nSocio-demographic variables (e.g., age, sex, family background, income, household, …)\nTests (e.g., school achievement tests, tests on cognitive ability)\nPsycho-social variables (e.g., Self-concepts, motivation, personality)\n…\n\n\nAlso, related scales should be reported together within a respective variable cluster (e.g., math, English and German self-concept scales)\nDiscuss the concrete order of the variables with your supervisor\nNames of variables, items and scales must be identical across codebooks, questionaires, and data sets\n\n3.4.3 Template\n\n\n\n\n\n\nImportant\n\n\n\nYou should always use a template! You can find it/them on the network drive L, too.\n\n\nThere are two options:\n\nCalculate the required statistics and transfer the values into one of the millions word templates (not recommended)\n\nUse the Quarto template (recommended)\n\nfor now the template generates only html2 documents\n\n\n\n3.4.4 Functions\nThe following functions were written to make your job a little bit easier.\n\nIf you know what you are doing, feel free to change or adjust them.\nIf you need more or other functions, please write us an email.\n\n\n\n\n3.4.4.1 Table for variable overview (not finished)\n\nThe varOverview function translates the general information into a table and has the following arguments:\n\n\nname: Name of the variable\n\ntype: Input is a character: Either variable or scale\n\n\nitemword: Requires a named list as input. Should contain the names and wording of the items.\n\nquestionaire: Input is a character: Which questionnaire?\n\nprompt: Input is a character. Wording of the question,\n\nresponse: Input is a character. Response format.\n\ncross: Input is a character. Cross-reference to other studies.\n\nsource: Input is a character. Potential reference.\n\nnote: Input is a character. Room for additional notes.\n\n\nShow/hide functionvarOverview &lt;- function ( name,\n                          type = \"variable\",\n                          itemword = NULL,\n                          questionaire = NULL,\n                          prompt = NULL,\n                          response = NULL,\n                          cross = NULL,\n                          source = NULL,\n                          note = NULL) {\n  \n  if (type == \"variable\") {\n    namDes &lt;- \"Name of variable:\"\n  }\n  \n  if (type == \"scale\") {\n    namDes &lt;- \"Name of scale:\"\n  }\n  \n  if (type == \"scale\" & is.null(itemword) ) {\n    stop(\"please provide the itemwording of the items\")\n  } \n  \n  if(!is.null(itemword)) {\n    \n    if ( is.null(names(itemword)) ) {\n      stop(\"please provide a named list as input: e.g., list(item1 = c('I like apples.'\")\n      \n      \n    } else {\n      \n      itemLab &lt;- names(itemword)\n      itemword &lt;- unlist(itemword)\n      \n      }\n    \n    \n    \n  } else {\n    \n    itemLab &lt;- NULL\n    itemword &lt;- NULL\n    \n  }\n  \n  \n  if (!is.null(questionaire)) {\n    \n    questLab &lt;- \"Questionaire:\"\n    questionaire &lt;- paste0(questionaire, collapse = \"; \")\n    \n  } else {\n    \n    questLab &lt;- NULL\n    \n  }\n  \n  if (!is.null(prompt)) {\n    \n    promptLab &lt;- \"Prompt in Questionaire:\"\n    prompt &lt;- paste0(prompt, collapse = \":\")\n    \n  } else {\n    \n    promptLab &lt;- NULL\n    \n  }\n  \n  if (!is.null(response)) {\n    \n    responseLab &lt;- \"Response format:\"\n    response &lt;- paste0(response, collapse = \"; \")\n    \n  } else {\n    \n    responseLab &lt;- NULL\n    \n  }\n  \n  if (!is.null(cross)) {\n    \n    crossLab &lt;- \"Cross reference:\"\n    cross &lt;- paste0(cross, collapse = \"; \")\n    \n  } else {\n    \n    crossLab &lt;- NULL\n    \n  }\n  \n  if (!is.null(source)) {\n    \n    sourceLab &lt;- \"Source:\"\n    source &lt;- knitr::asis_output(paste0(source, collapse = \"; \"))\n    \n  } else {\n    \n    sourceLab &lt;- NULL\n    \n  }\n  \n  if (!is.null(note)) {\n    \n    #generalTitel &lt;- \"Note:\"\n    noteLab &lt;- \"Note:\"\n    note &lt;- paste0(note, collapse = \"; \")\n    \n  } else {\n    \n    #generalTitel &lt;- \"\"\n    noteLab &lt;- NULL\n    \n  }\n  \n  tempTab &lt;- data.frame(\n    \"Col1\" = c(namDes,\n               questLab,\n               promptLab,\n               responseLab,\n               crossLab,\n               sourceLab,\n               noteLab,\n               \"\",\n               itemLab),\n    \"Col2\" = c(name,\n               questionaire,\n               prompt,\n               response,\n               cross,\n               source,\n               note,\n               \"\",\n               itemword)\n    )\n  \n  kableExtra::kbl(tempTab,\n               col.names = NULL,\n               align = \"l\"\n               ,booktabs = TRUE\n               ) |&gt;\n    kableExtra::kable_styling(\n      full_width = TRUE,\n      bootstrap_options = c(\"hover\", \"responsive\")\n      , latex_options = \"HOLD_position\"\n      ) |&gt;\n    kableExtra::column_spec(column = 1, width = \"12em\")\n  \n}\n\n\nAn example execution.\n\nShow/hide codevarOverview(name = \"gender\",\n            prompt = \"The question in the questionaire...\",\n            response = c(\"0 = male\",\n                         \"1 = female\",\n                         \"2 = divers\"),\n            cross = c(\"A study\", \"Another study\"),\n            source = \"@Kunter2002\",\n            note = \"Here is room for some notes\")\n\n\n\n\nTable 3.1: Variable: gender\n\n\nName of variable:\ngender\n\n\nPrompt in Questionaire:\nThe question in the questionaire...\n\n\nResponse format:\n0 = male; 1 = female; 2 = divers\n\n\nCross reference:\nA study; Another study\n\n\nSource:\n@Kunter2002\n\n\nNote:\nHere is room for some notes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe reference is not rendered correctly. This is a known bug: see here: https://github.com/quarto-dev/quarto-cli/issues/3340 and will be hopefully solved in the next release.\n\n\n\n3.4.4.2 Continuous variables\nThe contVar function is based on the describe function from the psych package (Revelle, 2023) and has the following arguments:\n\n\nvariable: This should be a character or a character vector (name of variable)\n\ndata: The data frame\n\nwhich.stat: Which statistics should be calculated? Default is: N, Mean, SD, Min, Max. Because the function is based on the describe function from psych package, you can also request: trimmed mean, median, mad, skew, kurtosis, standard error.\n\ntable: logical. Default is TRUE. Then the output is printed as a table using the kbl function from the kableExtra package (Zhu, 2021). If set to false, the output is printed as a data.frame.\n\n\nShow/hide functioncontVar &lt;- function ( variable,\n                      data,\n                      which.stat = c(\"N\",\n                                     \"Mean\", \"SD\",\n                                     \"Min\", \"Max\"),\n                      table = TRUE) {\n\n  \n  \n  # calculate descriptives\n  tempDescr &lt;- as.data.frame(\n    psych::describe(\n      data[,variable]\n      )\n    )[tolower(which.stat)]\n  \n  tempDescr$varNam &lt;- variable\n  rownames(tempDescr) &lt;- NULL\n  \n  \n  # calculate missing in %\n  if ( length(variable) == 1 ) {\n    \n    missDF &lt;- as.data.frame(mean(is.na(data[,variable]))*100)\n    \n  } else {\n    \n    missDF &lt;- as.data.frame(colMeans(is.na(data[,variable]))*100)\n    \n  }\n  \n  colnames(missDF) &lt;- \"miss\"\n  \n  tempDescr$miss &lt;- paste0(\n    sprintf(missDF$miss,\n            fmt = '%#.1f'),\n    \"%\")\n  \n  \n  if ( table == TRUE ) {\n    \n    tempTab &lt;- kableExtra::kbl(\n      x = tempDescr[,c(\"varNam\",\n                       tolower(which.stat),\n                       \"miss\")],\n      col.names = c(\"Variable\", which.stat, \"Miss.\"),\n      row.names = FALSE,\n      digits = 2,\n      align = c(\"l\", rep(\"c\",length(which.stat)), \"c\")\n      ,booktabs = TRUE\n      #,format = \"html\"\n      ) |&gt;\n      kableExtra::kable_styling(\n        full_width = TRUE,\n        bootstrap_options = c(\"hover\", \"responsive\")\n        ,latex_options = \"HOLD_position\"\n        )\n    \n    tempOut &lt;- tempTab\n    tempOut\n    \n    } else {\n      \n    tempOut &lt;- tempDescr[,c(\"varNam\",\n                            tolower(which.stat),\n                            \"miss\")]\n    \n    return(tempOut)\n    \n  }\n  \n}\n\n\nAn example execution.\n\nShow/hide codevarOverview(name = \"age\",\n            type = \"variable\",\n            questionaire = \"Student\",\n            prompt = \"How old are you?\",\n            response = \"open\",\n            cross = \"not applicable\",\n            source = \"not applicable\",\n            note = \"\")\ncontVar(variable = \"age\", data = exDat)\n\n\nTable 3.2: Variable: age\n\n\n\n\n\n(a) Overview\n\n\nName of variable:\nage\n\n\nQuestionaire:\nStudent\n\n\nPrompt in Questionaire:\nHow old are you?\n\n\nResponse format:\nopen\n\n\nCross reference:\nnot applicable\n\n\nSource:\nnot applicable\n\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Calculated statistics\n\nVariable\nN\nMean\nSD\nMin\nMax\nMiss.\n\n\nage\n670\n10.03\n1.76\n5.44\n30\n10.7%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.4.4.3 Categorical variables\nThe catVar function is based on the table function from R (R Core Team, 2023) and has the following arguments:\n\n\nvariable: This should be a character or a character vector (name of variable)\n\ndata: The data frame\n\ntable: logical. Default is TRUE. Then the output is printed as a table using the kbl function from the kableExtra package (Zhu, 2021). If set to false, the output is printed as a data.frame.\n\n\nShow/hide functioncatVar &lt;- function ( variable,\n                     data,\n                     table = TRUE) {\n\n  \n  # calculate freq. as function\n  calcFreq &lt;- function ( variable, data) {\n  \n    # calc abs and rel freq.\n    tempFreq &lt;- data.frame( abs = table(data[,variable],\n                                        useNA = \"always\"))\n    \n    tempFreq$rel &lt;- table(data[,variable],\n                          useNA = \"always\")/length(data[,variable])*100\n    \n    colnames(tempFreq) &lt;- c(\"var\",\n                            \"Absolute\",\n                            \"Relative\")\n  \n    # calculate sum\n    tempFreq &lt;- rbind(tempFreq,\n                      data.frame(var = \"Sum\",\n                                 t(colSums(tempFreq[!is.na(tempFreq$var),-1])))\n                      )\n    \n  \n    # cosmetics\n    \n    tempFreq$Relative &lt;- paste0(\n      sprintf(tempFreq$Relative,\n              fmt = '%#.1f'),\n      \"%\")\n  \n    tempTab &lt;- as.data.frame(t(tempFreq[,-1]))\n    colnames(tempTab) &lt;- tempFreq[,1]\n    colnames(tempTab)[is.na(colnames(tempTab))] &lt;- \"Miss\"\n    \n    tempTab &lt;- as.data.frame(\n      t(sapply(colnames(tempTab),\n               function(x) paste0(tempTab[1,x],\n                                  \" (\",\n                                  tempTab[2,x], \")\"),\n               simplify = TRUE)\n        )\n      )\n      \n    return(tempTab)\n    }\n  \n  tempFreq &lt;- data.table::rbindlist(\n    sapply(variable,\n           function(x) \n             calcFreq(variable = x, data = data),\n           simplify = FALSE),\n    idcol = \"Variable\", use.names = T, fill = T)\n  \n  # get colnames to sort\n  colToSort &lt;- c(\"Variable\", colnames(tempFreq)[!colnames(tempFreq) %in% \n                                                  c(\"Variable\",\n                                                    \"Miss\",\n                                                    \"Sum\"\n                                                    #\"Sum (miss)\"\n                                                    )],\n                 \"Sum\",\n                 \"Miss\"\n                 #\"Sum (miss)\",\n                 )\n  \n  tempFreq &lt;- tempFreq[,..colToSort]\n  \n  \n  if ( table == TRUE ) {\n    \n    tempTab &lt;- kableExtra::kbl(\n      x = tempFreq,\n      align = \"c\"\n      ) |&gt;\n      kableExtra::kable_styling(\n        full_width = TRUE,\n        bootstrap_options = c(\"hover\", \"responsive\")\n        #,latex_options = \"HOLD_position\"\n        ) \n    \n    tempOut &lt;- tempTab\n    tempOut\n    \n    } else {\n    \n    tempOut &lt;- tempFreq[,..colToSort]\n      \n    return(tempOut)\n    \n  }\n  \n}\n\n\nAn example execution.\n\nShow/hide codevarOverview(name = \"edu\",\n            type = \"variable\",\n            questionaire = \"Parent\",\n            prompt = \"Welchen Schulabschluss haben Sie? Bitte geben Sie *nur* Ihren höchsten Abschluss an.\",\n            response = c(\n              \"0 = Kein Schulabschluss\",\n              \"1 = Abschluss einer Sonderschule/Foerderschule\",\n              \"2 = einer Polytechnischen Oberschule nach der 8. Klasse\", \n              \"3 = Hauptschulabschluss/ Volksschulabschluss\",\n              \"4 = ...\"),\n            cross = \"NEPS\",\n            source = \"@Kunter2002\",\n            note = \"\")\ncatVar(variable = c(\"edu\"),\n       data = exDat)\n\n\nTable 3.3: Variable: Education\n\n\n\n\n\n(a) Overview\n\n\nName of variable:\nedu\n\n\nQuestionaire:\nParent\n\n\nPrompt in Questionaire:\nWelchen Schulabschluss haben Sie? Bitte geben Sie *nur* Ihren höchsten Abschluss an.\n\n\nResponse format:\n0 = Kein Schulabschluss; 1 = Abschluss einer Sonderschule/Foerderschule; 2 = einer Polytechnischen Oberschule nach der 8. Klasse; 3 = Hauptschulabschluss/ Volksschulabschluss; 4 = ...\n\n\nCross reference:\nNEPS\n\n\nSource:\n@Kunter2002\n\n\nNote:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Calculated statistics\n\nVariable\n0\n1\n2\n3\n4\nSum\nMiss\n\n\nedu\n50 (6.7%)\n100 (13.3%)\n150 (20.0%)\n200 (26.7%)\n250 (33.3%)\n750 (100.0%)\n0 (0.0%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.4.4.4 Scale score\nThe scaleScore function is based on the alpha function from the psych package (Revelle, 2023) and has the following arguments:\n\n\nitems: This should be a character vector (name of items) or a named list\n\ndata: The data frame\n\nrecItems: Numeric vector of the reversed worded items.\n\nrecode: logical. Default is FALSE. If TRUE the items in recItems will be recoded.\n\nwhich.stat: Which statistics should be calculated? Default is: N, Mean, SD, Min, Max. Because the function is based on the describe function from psych package, you can also request: trimmed mean, median, mad, skew, kurtosis, standard error.\n\ntable: logical. Default is TRUE. Then the output is printed as a table using the kbl function from the kableExtra package (Zhu, 2021). If set to false, the scale score (and if requested the recoded items) are returned.\n\n\n\n\n\n\n\nImportant\n\n\n\nThe scale score is built based on only valid items (i.e., na.rm = FALSE argument of the rowSums function). This means if one item has missing value, no score is computed.\n\n\n\nShow/hide functionscaleScore &lt;- function ( items,\n                         scaleNameShort = NULL,\n                         recItems = NULL,\n                         recode = FALSE,\n                         data,\n                         which.stat = c(\"N\",\n                                        \"Mean\", \"SD\",\n                                        \"Min\", \"Max\"),\n                         table = TRUE) {\n  \n  # name check\n  \n  if (is.null(scaleNameShort)) {\n    stop(\"please provide the short name of the scale (variable name)\")\n  }\n  \n  \n  # recode check \n  \n  if (!is.null(recItems) & recode == FALSE) {\n    warning(\"Are the items already recoded?\\nIf not, you may use the recode argument.\")\n  }\n  \n  if (!is.null(names(items))) {\n    items &lt;- names(items)\n  }\n  \n  \n  # recode if necessary\n  if ( recode == T ) {\n    \n    data[,paste0(items[recItems],\"r\")] &lt;- sapply(\n      items[recItems],\n      function(x) {\n        tempRec &lt;- (max(data[,x]) + min(data[,x])) - data[,x]\n        return(tempRec)\n      }, simplify = FALSE)\n    \n    items[recItems] &lt;- paste0(items[recItems],\"r\")\n  }\n  \n  \n  # compute sumscore\n  data[,scaleNameShort] &lt;- rowSums(data[,items]) / length(items)\n  \n  # calculate descriptives\n  tempDescr &lt;- as.data.frame(\n    psych::describe(\n      data[,c(items,scaleNameShort)]\n      )\n    )[tolower(which.stat)]\n  \n  # calculate missing in %\n  missDF &lt;- as.data.frame(colMeans(is.na(data[,c(items,scaleNameShort)]))*100)\n  colnames(missDF) &lt;- \"miss\"\n  \n  missDF$miss &lt;- paste0(\n    sprintf(missDF$miss,\n            fmt = '%#.1f'),\n    \"%\")\n  \n  # calculate alpha et al\n  tempAlpha &lt;- psych::alpha(\n    data[,items]\n    )\n  \n  # extract r.cor & r.drop\n  rcordrop &lt;- tempAlpha$item.stats[,c(\"r.cor\", \"r.drop\")]\n  alpha &lt;- round(tempAlpha$total$raw_alpha,3)\n  \n  # merge dataframes\n  tempTab &lt;- merge(tempDescr, missDF, by = 0, sort = FALSE) \n  rownames(tempTab) &lt;- tempTab$Row.names\n  tempTab$Row.names &lt;- NULL\n  \n  tempTab &lt;- merge(tempTab, rcordrop, by = 0, all.x = T, sort = FALSE)\n  rownames(tempTab) &lt;- NULL\n  \n  # make tables\n  if ( table == TRUE ) {\n    \n    tempScaleTab &lt;- kableExtra::kbl(\n      x = tempTab,\n      col.names = c(\"Item\", which.stat, \"Missing\", \"$r_{it}$\", \"$r_{drop}$\"),\n      digits = 2,\n      align = c(\"l\", rep(\"c\",length(which.stat)), \"c\", \"c\", \"c\"),\n      booktabs = TRUE,\n      format = \"html\",\n      escape = FALSE\n      ) |&gt;\n      kableExtra::kable_styling(\n        full_width = TRUE,\n        bootstrap_options = c(\"hover\", \"responsive\")\n        #,latex_options = \"HOLD_position\"\n        ) |&gt;\n      kableExtra::footnote(general_title = \"Cronbachs $\\\\\\\\alpha$ = \",\n                           general = paste0(alpha),\n                           footnote_as_chunk = TRUE,\n                           threeparttable = TRUE) |&gt;\n      kableExtra::row_spec(row = nrow(tempTab),\n                           background = \"#d3d3d3\")\n    \n    tempOut &lt;- tempScaleTab\n    tempOut\n    \n    } else {\n      \n      tempOut &lt;- data[,c(items[recItems], scaleNameShort)]\n      print(tempTab)\n    \n    return(tempOut)\n    \n  }\n  \n}\n\n\nAn example execution.\n\nBefore executing the function, we create a named list. Item 3 and 4 are reversed worded items.\n\n\nmscItems &lt;- list(\"msc1\" = c(\"Ich bin gut in Mathematik.\"),\n                 \"msc2\" = c(\"Ich war in Mathematik immer gut.\"),\n                 \"msc3\" = c(\"Ich habe Verständnisschwierigkeiten bei allem, für das man Mathematik braucht.\"),\n                 \"msc4\" = c(\"Ich bin bei Aufgaben, die mathematisches Denken\nerfordern, nie gut.\"))\n\n\nThen we execute the two functions. because the items 3 and 4 are not recoded in the data set, we have to pass the information to the scaleScore function.\n\n\nShow/hide codevarOverview(name = \"Math Self-concept\",\n            type = \"scale\",\n            itemword = mscItems,\n            prompt = \"Wie sehr treffen die folgenden Aussagen auf Sie zu?\",\n            response = c(\"1 = trifft überhaupt nicht zu\",\n                        \"2 = trifft eher nicht zu\",\n                        \"3 = trifft eher zu\",\n                        \"4 = trifft völlig zu\"),\n           cross = \"TOSCA-R\",\n           source = \"\")\nscaleScore(items = names(mscItems),\n           scaleNameShort = \"msc\",\n           recItems = c(3,4),\n           recode = TRUE,\n           data = exDat,\n           table = T)\n\n\nTable 3.4: Variable Math Self-concept\n\n\n\n\n\n(a) Overview\n\n\nName of scale:\nMath Self-concept\n\n\nPrompt in Questionaire:\nWie sehr treffen die folgenden Aussagen auf Sie zu?\n\n\nResponse format:\n1 = trifft überhaupt nicht zu; 2 = trifft eher nicht zu; 3 = trifft eher zu; 4 = trifft völlig zu\n\n\nCross reference:\nTOSCA-R\n\n\nSource:\n\n\n\n\n\n\n\nmsc1\nIch bin gut in Mathematik.\n\n\nmsc2\nIch war in Mathematik immer gut.\n\n\nmsc3\nIch habe Verständnisschwierigkeiten bei allem, für das man Mathematik braucht.\n\n\nmsc4\nIch bin bei Aufgaben, die mathematisches Denken erfordern, nie gut.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(b) Calculated statistics\n\nItem\nN\nMean\nSD\nMin\nMax\nMissing\n$r_{it}$\n$r_{drop}$\n\n\n\nmsc1\n750\n2.52\n0.74\n1\n4\n0.0%\n0.72\n0.67\n\n\nmsc2\n680\n2.54\n0.72\n1\n4\n9.3%\n0.67\n0.62\n\n\nmsc3r\n750\n2.51\n0.75\n1\n4\n0.0%\n0.82\n0.74\n\n\nmsc4r\n750\n2.52\n0.75\n1\n4\n0.0%\n0.80\n0.73\n\n\nmsc\n680\n2.53\n0.61\n1\n4\n9.3%\nNA\nNA\n\n\n\n\nCronbachs $\\\\alpha$ =   0.851\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.4.4.5 Clean character variables\nThe cleanStr function is designed to clean strings and has the following arguments:\n\n\nstringToClean: This should be a character.\n\npattern: The pattern which should be replaced. Can be character vector.\n\nreplacement: The replacement. A character with length = 1.\n\nreplaceNA: logical. Should NAs be replaced?\n\nreplaceNAval: If replaceNA == TRUE. The replacement of NA values. Default is: \"Unknown\"\n\n\nas.fac: logical. Output of the function (character or factor) Default is FALSE.\n\nprint: logical.\n\n\nShow/hide functioncleanStr &lt;- function ( stringToClean, pattern = NULL, replacement = \"Unknown\",\n                       replaceNA = TRUE,\n                       replaceNAval = \"Unknown\",\n                       as.fac = FALSE,\n                       print = TRUE) {\n  \n  if ( length(replacement) &gt; 1 | length(replaceNAval) &gt; 1 ) {\n    \n    stop(\"Values can only be replaced by one value. length &gt; 1\")\n    \n  }\n  \n  if ( !is.character(stringToClean) ) {\n    \n    stop(\"input is no character\")\n    \n  } else {\n      \n    outStr &lt;- stringToClean\n    \n    }\n  \n  if ( replaceNA == TRUE ) {\n    outStr[is.na(outStr)] &lt;- replaceNAval\n    missMess &lt;- paste0(\"Missing values (NA) are replaced with: '\", replaceNAval, \"'\")\n  } else {\n    \n    missMess &lt;- NULL\n    \n  }\n  \n  outStr[outStr %in% pattern] &lt;- replacement\n  \n  if (print == TRUE ) {\n   \n    message(\"Input\\n\")\n    print( table(stringToClean, useNA = \"always\") )\n    message(\"Output\\n\")\n    print( table(outStr, useNA = \"always\") )\n    \n    message(\"\\nThis is what happened:\")\n    cat(\"The following pattern(s): \",\n        paste0(paste0(pattern, collapse = \", \"),\n        \"\\nwas/were replaced with: \",\n        replacement), \"\\n\\n\",\n        missMess)\n    \n    }\n  if ( as.fac == FALSE ) {\n    \n    return(outStr)\n    \n  } else {\n    \n    outFac &lt;- as.factor(outStr)\n    return(outFac)\n  }\n  \n}\n\n\nWhat the function does is shown in the Data cleaning part.\n\n\n\n\n\n\nR Core Team. (2023). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRevelle, W. (2023). Psych: Procedures for psychological, psychometric, and personality research. https://personality-project.org/r/psych/ https://personality-project.org/r/psych-manual.pdf\n\n\nWissik, T., & Ďurčo, M. (2015). Research data workflows: From research data lifecycle models to institutional solutions. http://www.ep.liu.se/ecp/123/008/ecp15123008.pdf\n\n\nZhu, H. (2021). kableExtra: Construct complex table with kable and pipe syntax. https://CRAN.R-project.org/package=kableExtra"
  },
  {
    "objectID": "gen-info.html#footnotes",
    "href": "gen-info.html#footnotes",
    "title": "\n3  General information on data documentation\n",
    "section": "",
    "text": "see also here: https://www.forschungsdaten-bildung.de/↩︎\nThis is (mainly) because there are some issues with the kableExtra package (Zhu, 2021) and latex implementation (i.e., format: pdf) in Quarto.↩︎"
  },
  {
    "objectID": "intro-r-rstudio.html#what-is-r-rstudio",
    "href": "intro-r-rstudio.html#what-is-r-rstudio",
    "title": "\n4  Introduction to R & RStudio\n",
    "section": "\n4.1 What is R & RStudio?",
    "text": "4.1 What is R & RStudio?\n\nR: R is a free software environment for statistical computing and graphics. It compiles and runs on a wide variety of UNIX platforms, Windows and MacOS (see https://www.r-project.org/).\nR Studio: Coding environment for R, built by Posit.\n\nSome advertisement from the Posit website:\n\nUsed by millions of people weekly, the RStudio integrated development environment (IDE) is a set of tools built to help you be more productive with R and Python. It includes a console, syntax-highlighting editor that supports direct code execution. It also features tools for plotting, viewing history, debugging and managing your workspace.\n\nOf course there are other IDEs (e.g., Visual Studio Code, but if you use R, RStudio is most likely the way to go."
  },
  {
    "objectID": "intro-r-rstudio.html#how-to-work-with-r-and-rstudio",
    "href": "intro-r-rstudio.html#how-to-work-with-r-and-rstudio",
    "title": "\n4  Introduction to R & RStudio\n",
    "section": "\n4.2 How to work with R and RStudio?",
    "text": "4.2 How to work with R and RStudio?\n\n\n\n\n\n\nExercise: Open RStudio!\n\n\n\n\n\nThis should look like this, maybe or probably with a different appearance (this is the Dracula theme). You can change this via Tools &gt; Global Options &gt; Appearance\n\n\n\n\nIn RStudio there are different panes1:\n\n4.2.1 Panes\n\n\nConsole\n\nHere you can access R\n\nE.g., ask R what is: 2 + 2\n\n\n\n\nSource/Script\n\nEditor to save scripts\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nYou should never work directly in the Console, but always use a R-script (e.g., script.R) or even better a Quarto document (e.g., script.qmd). It is important to understand and reproduce everything you did.\n\n\n\n\nEnvironment/History/…/Tutorial\n\nEnvironment: contains all objects that were created or loaded during an R session\nHistory:\n… e.g., the free and open source distributed version control system git\n\nTutorial: A tutorial to learn R with the learnr package (Aden-Buie et al., 2023)\n\n\n\n\nFiles/Plots/Packages/Help/Viewer\n\nFiles: is kind of the file manager\nPlots: shows the generated plots\nPackages: overview of the (loaded &) installed packages\nHelp: When you ask for help (e.g., regarding a specific function in R: ?mean)\nViewer: E.g., previewing rendered Quarto documents\n\n\n\n4.2.2 Projects\nIt is also reasonable to use the project option. This means, whenever you start a new project (e.g., a scale-manual), create an project: File &gt; New Project\n\n\n\n\n\n\nExercise: Create an project!\n\n\n\n\n\n\nChoose between:\n\n\nNew Directory (for today)\nExisting Directory\nVersion Control (this is recommended, but is beyond the scope of this workshop)\n\n\n\nChoose a project type (today a R project or Quarto project)\n\n\n\nProvide a short name, set the check mark Open in new session and click Create Project"
  },
  {
    "objectID": "intro-r-rstudio.html#short-introduction-to-the-r-programming-language",
    "href": "intro-r-rstudio.html#short-introduction-to-the-r-programming-language",
    "title": "\n4  Introduction to R & RStudio\n",
    "section": "\n4.3 Short introduction to the R programming language",
    "text": "4.3 Short introduction to the R programming language\nThis section gives a (very?) brief introduction to the R programming language.\n\n\n\n\n\n\nFor (more) comprehensive introductions…\n\n\n\n\n\n…or overviews of the language see (e.g.):\n\nR Manual on the CRAN website\nR for Data Science by Hadley Wickham and Garrett Grolemund\nHands-On Programming with R by Garrett Grolemund\nIntroduction to R by the IDRE Statistical Consulting Group\n…\n\n\n\n\n\nTo understand computations in R, two slogans are helpful:\n\nEverything that exists is an object.\n\nEverything that happens is a function call.\n\n\n– John Chambers (creator of the S programming language)\n\n\n\n4.3.1 Basics\nBefore working with R, there are a few basics you need to know:\n\n\n\n\nR is a case-sensitive programming language. This means that R distinguishes whether a word is written in upper or lower case\n\n\n\n\n\n\"name\" == \"Name\"\n\n[1] FALSE\n\n\n\n\n\n\n\n\nValues are assigned to objects using &lt;-\n\n\n\n\n\n\na &lt;- \"Hello world!\"\n\n\n\n\n\n\n\nArguments within functions are assigned using =\n\n\n\n\n\n\ndf &lt;- data.frame(\n  x = 1:4,\n  y = 3:6\n)\n\n\n\n\n\n\n\n\n\nExercise: Create a new R script\n\n\n\n\n\nFile &gt; New File &gt; R Script or alternatively use the shortcut Ctrl + Shift + N\n\nThen save the file File &gt; Save or File &gt; Save As. Shortcut: Ctrl + s\n\n\n\n\n4.3.2 Data Types\nThe basic data types2 in R are depicted in Table 4.1.\n\n\nTable 4.1: Basic data types in R\n\n\n\n\n\n\nType\nDescription\nValue (example)\n\n\n\nNumeric\nNumbers with decimal value or fraction\n3.7\n\n\nInteger\nCounting numbers and their additive inverses\n\n2, -115\n\n\n\nCharacter\naka string. Letters enclosed by quotes in the output.\n\n\"Hello World!\",\"4\"\n\n\n\nLogical \nboolean\n\nTRUE, FALSE\n\n\n\nFactor\nCategorial data\n- Level: characteristic value as seen by R\n- Label: designation of the characteristic attributes\n\n0, 1male,female\n\n\n\nSpecial\n\n\nMissing values: unknown cell value\n\nImpossible values: not a number\n\nEmpty values: known empty cell value\n\n\nNANaNNULL\n\n\n\n\n\n\n\n\n\n\n\nExercise: Use the class function to check the data type of an object!\n\n\n\n\n\n\nx &lt;- 10\nclass(x)\n\n[1] \"numeric\"\n\ny &lt;- \"Hello World\"\nclass(y)\n\n[1] \"character\"\n\n\n\n\n\n\n\n4.3.3 Data Structures\nR has a couple of different data structures3 which are briefly described in the following subsections.\n\n4.3.3.1 Vector\n\n\n\none-dimensional array\n\nsame data type\ne.g., c(45, 6, -83, 23, 61)\n\n\n\n\n\n\n\n\n\n\n\nTips for handling vectors\n\n\n\n\n\nCreate a vector with the c function\n\nv &lt;- c(45, 6, -83, 23, 61)\nv\n\n[1]  45   6 -83  23  61\n\n\nOr a named vector…\n\nvNam &lt;- c(a = 45, b = 6, c = -83, d = 23, e = 61)\nvNam\n\n  a   b   c   d   e \n 45   6 -83  23  61 \n\n\nCount the amount of items contained in vector\n\nlength(v)\n\n[1] 5\n\n\nVector indexing (by position)\n\nv[1]\n\n[1] 45\n\nv[-3]\n\n[1] 45  6 23 61\n\n\nSlicing vectors\n\nv[3:5]\n\n[1] -83  23  61\n\n\nGenerate regular sequences using seq function\n\nseq(from = 0,\n    to = 20,\n    by = 2)\n\n [1]  0  2  4  6  8 10 12 14 16 18 20\n\n\n\n\n\n\n\n\n4.3.3.2 Matrix\n\n\n\ntwo-dimensional\n\nsame data type\nexample see on the right\n\n\n\n\n\n\n\n\n\n\n\nTips for handling matrices\n\n\n\n\n\nThe matrix function creates a matrix from the given set of values\n\nm &lt;- matrix(data = c(1, 2, 3, 45, 36, 52),\n            nrow = 2,\n            ncol = 3,\n            byrow = TRUE)\nm\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]   45   36   52\n\n\nSlicing works also on matrices: m[row , column]\n\nm[, 1:2]\n\n     [,1] [,2]\n[1,]    1    2\n[2,]   45   36\n\n\n\n\n\n\n\n\n4.3.3.3 List\n\n\n\ncan contain elements of various data types\noften ordered collection of values\none-indexed (indexing starts with 1)\ne.g., list(\"hi\", 2, NULL)\n\n\n\n\n\n\n\n\n\n\n\nTips for handling lists\n\n\n\n\n\nCreate lists (with different elements, i.e., numbers and letters) with the list function\n\nl1 &lt;- list(1:5)\nl2 &lt;- list(letters[1:5])\nl3 &lt;- list(LETTERS[1:5])\n\nCreate a nested list…\n\nl4 &lt;- list(l1, l2, l3)\n\n…or a named (nested) list\n\nl4Nam &lt;- list(\"Numbers\" = l1,\n              \"SmallLetters\" = l2,\n              \"CaptialLetters\" = l3)\n\nAccess list or nested list elements\n\nl4[2]\n\n[[1]]\n[[1]][[1]]\n[1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\nl4[[2]][3]\n\n[[1]]\nNULL\n\n\nUnlist the list to get vector which contains all the atomic components\n\nunlist(l1)\n\n[1] 1 2 3 4 5\n\nunlist(l4)\n\n [1] \"1\" \"2\" \"3\" \"4\" \"5\" \"a\" \"b\" \"c\" \"d\" \"e\" \"A\" \"B\" \"C\" \"D\" \"E\"\n\n\nCount amount of items contained in list\n\nlength(l4)\n\n[1] 3\n\nlength(unlist(l4))\n\n[1] 15\n\n\n\n\n\n\n\n\n4.3.3.4 Data frame\n\n\n\nvarious columns\ndifferent data types\nvariables = columns\nobservations = rows\nexample see on the right\n\n\n\n\n\n\n\n\n\n\n\nTips for handling dataFrames\n\n\n\n\n\n\ndf &lt;- data.frame(\n  id = 1:4,\n  age = c(12, 13, 12, 14),\n  sex = c(1, 1, 2, 2)\n)\ndf\n\n  id age sex\n1  1  12   1\n2  2  13   1\n3  3  12   2\n4  4  14   2\n\n\nNumber of observations\n\nnrow(df)\n\n[1] 4\n\n\nShow dimension (rows, columns) of dataframe\n\ndim(df)\n\n[1] 4 3\n\n\nColumn names\n\ncolnames(df)\n\n[1] \"id\"  \"age\" \"sex\"\n\n\nShow the first two rows of the dataframe\n\nhead(df, 2)\n\n  id age sex\n1  1  12   1\n2  2  13   1\n\n\nStructure of dataframe object\n\nstr(df)\n\n'data.frame':   4 obs. of  3 variables:\n $ id : int  1 2 3 4\n $ age: num  12 13 12 14\n $ sex: num  1 1 2 2\n\n\nSome descriptive statistics using the summary function (for more see Section Descriptive statistics and item analysis\n\nsummary(df)\n\n       id            age             sex     \n Min.   :1.00   Min.   :12.00   Min.   :1.0  \n 1st Qu.:1.75   1st Qu.:12.00   1st Qu.:1.0  \n Median :2.50   Median :12.50   Median :1.5  \n Mean   :2.50   Mean   :12.75   Mean   :1.5  \n 3rd Qu.:3.25   3rd Qu.:13.25   3rd Qu.:2.0  \n Max.   :4.00   Max.   :14.00   Max.   :2.0"
  },
  {
    "objectID": "intro-r-rstudio.html#baseR-tidyverse",
    "href": "intro-r-rstudio.html#baseR-tidyverse",
    "title": "\n4  Introduction to R & RStudio\n",
    "section": "\n4.4 Base R vs. & tidyverse",
    "text": "4.4 Base R vs. & tidyverse\n\n\nBesides the functionality of base R (R Core Team, 2023), there is the so-called tidyverse (Wickham, 2023) within R. The tidyverse is a collection of R packages (see Figure 4.1) that “share an underlying design philosophy, grammar, and data structures” and are (specifically) designed for data science (see https://www.tidyverse.org/).\n\n\n\n\n\nFigure 4.1: tidyverse package collection\n\n\n\n\nWithin the tidyverse package collection, the dplyr package (Wickham et al., 2023) provides a set of convenient functions for manipulating data. Together with the pipe operator %&gt;% from the magrittr package (Bache & Wickham, 2022)), it is an extremely powerful approach to manipulate data in a clear and comprehensible way. The native4 R pipe |&gt; was introduced with R v4.1.0.\n\n\n\n\n\n\nWhat does the pipe operator |&gt;?\n\n\n\n\n\nThe tidyverse style guide suggests using the pipe operator “to emphasize a sequence of actions”. The pipe operator can be understood as “take the object and then” pass it to the next function. In the following, the use of the base R pipe operator is shown:\n\n\nTake the data frame exDat and then\n\nSelect the variables: msc1 and msc2 and then\n\nCalculate descriptive statistics using the describe function from the psych package (Revelle, 2023) and then\n\nCreate a table with the kable function from the knitr package (Xie, 2023)\n\n\n\nexDat |&gt; \n  dplyr::select(c(msc1, msc2)) |&gt;\n  psych::describe(fast=TRUE) |&gt; \n  knitr::kable(digits = 2) \n\n\n\n\nvars\nn\nmean\nsd\nmin\nmax\nrange\nse\n\n\n\nmsc1\n1\n750\n2.52\n0.74\n1\n4\n3\n0.03\n\n\nmsc2\n2\n680\n2.54\n0.72\n1\n4\n3\n0.03\n\n\n\n\n\nIn contrast, when we use a nested approach the code would look like this:\n\nknitr::kable(psych::describe(exDat,fast=TRUE),digits = 2) \n\n…or maybe a little bit more clear:\n\nknitr::kable(\n  psych::describe(exDat,\n                  fast=TRUE),\n  digits = 2) \n\nNevertheless, when there are many functions, it gets kind of messy and difficult to comprehend. For more information on how to use pipes, see Chapter 4 of the guide.\n\n\n\n\n\n\n\n\n\nAden-Buie, G., Schloerke, B., Allaire, J., & Rossell Hayes, A. (2023). Learnr: Interactive tutorials for r. https://CRAN.R-project.org/package=learnr\n\n\nBache, S. M., & Wickham, H. (2022). Magrittr: A forward-pipe operator for r. https://CRAN.R-project.org/package=magrittr\n\n\nR Core Team. (2023). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRevelle, W. (2023). Psych: Procedures for psychological, psychometric, and personality research. https://personality-project.org/r/psych/ https://personality-project.org/r/psych-manual.pdf\n\n\nWickham, H. (2023). Tidyverse: Easily install and load the tidyverse. https://CRAN.R-project.org/package=tidyverse\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://CRAN.R-project.org/package=dplyr\n\n\nXie, Y. (2023). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/"
  },
  {
    "objectID": "intro-r-rstudio.html#footnotes",
    "href": "intro-r-rstudio.html#footnotes",
    "title": "\n4  Introduction to R & RStudio\n",
    "section": "",
    "text": "You can customize them: Tools &gt; Global Options &gt; Pane Layout↩︎\nWe omitted the complex type.↩︎\nWe omitted arrays.↩︎\nfor the difference between |&gt; and %&gt;% see https://ivelasq.rbind.io/blog/understanding-the-r-pipe/↩︎"
  },
  {
    "objectID": "intro-quarto.html#what-is-quarto",
    "href": "intro-quarto.html#what-is-quarto",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "\n5.1 What is Quarto?",
    "text": "5.1 What is Quarto?\n\n\n\n\nBut, what is Pandoc? Pandoc is a universal document converter. It converts files from one markup format into another (e.g., markdown → HTML).\nIn short, with Quarto you can create different types of (reproducible) documents1 including:\n\nHTML\nPDF\nMS Word\nMarkdown\n\nThe focus of this workshop is on HTML (and PDF) documents. For an overview about all formats see here."
  },
  {
    "objectID": "intro-quarto.html#how-to-work-with-quarto",
    "href": "intro-quarto.html#how-to-work-with-quarto",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "\n5.2 How to work with Quarto?",
    "text": "5.2 How to work with Quarto?\n\nIt is basically the same2 as working in regular a R-script.\n\nOpen a new file: File &gt; New File &gt; Quarto Document...\n\n\n\n\n\n\n\n\n\n\nExercise: Create your first Quarto document!\n\n\n\n\n\n\nProvide a title (& author name)\n\n\n\nSave the document with a reasonable name and use the Render button\n\n\n\n\n\n\nA quarto document roughly consists of two parts:\n\nThe YAML header\n\nThe Body\n\n\n\nThe website quarto.org is a great resource to learn it (e.g., follow the guide). It is a daily companion and covers the topics in much greater detail than this page."
  },
  {
    "objectID": "intro-quarto.html#yaml-header",
    "href": "intro-quarto.html#yaml-header",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "\n5.3 The YAML header",
    "text": "5.3 The YAML header\nThe YAML3 header is enclosed by three dashes (---):\n---\ntitle: \"my-first-quarto-document\"\nformat: html\n---\n\n5.3.1 Overview of YAML syntax\nThe basic syntax of YAML uses so-called key-value pairs in the format key: value. This is extremely powerful, because you can generate great documents like this Quarto book without knowing much about HTML, LATEX or programming in general.\nSome useful key-value pairs:\nsubtitle: \"my subtitle\"\nauthor:\n  - \"John Doe\"\n  - \"Jane Roe\"\n  - \"Norah Jones\"\ndate: today\ntoc: true\ntoc-title: \"Inhaltsverzeichnis\"\nnumber-sections: true\n\n\n\n\n\n\nExercise: Identify useful key-value pairs\n\n\n\n\n\n\nFor the next 5 minutes or so, check out https://quarto.org and identify potential useful key: value pairs. Note: There are different YAML options for the formats:\n\nHTML\nPDF\n\n\nAdd them to your YAML header.\n\n\n\n\n\n5.3.2 Citing\nWith Quarto it is possible to automatically generate citations and bibliographies in many different ways.\nThe key: value pair to include citations in Quarto documents is:\nbibliography: r-refs.bib\nHere we use a so-called BibLaTex (.bib) file. These files can be generated with the most reference management software programs4 (e.g., Citavi, EndNote, zotero, …).\n\n\n\n\n\n\nRandom tip on maintenance of literature management\n\n\n\n\n\nIt is highly recommended to maintain your retrieved citations. This means, whenever you download a single (!) reference by means of the doi (Digital Object Identifier), check whether the reference information is correct. This saves a lot of time in the long run.\n\n\n\nA reference in the .bib-file looks like this:\n@Manual{R-base,\n  title = {R: A Language and Environment for Statistical Computing},\n  author = {{R Core Team}},\n  organization = {R Foundation for Statistical Computing},\n  address = {Vienna, Austria},\n  year = {2022},\n  url = {https://www.R-project.org/},\n}\n\n\n\n\n\n\nExercise: Create a .bib file for the R references\n\n\n\n\n\n\nCheck the path with the base::getwd function (should be the same folder as the Quarto document, otherwise you have to provide the path in the YAML bibliography argument).\n\n\ngetwd()\n\n\nSave (some of the) R packages in a character vector.\n\n\npkgList &lt;- c(\"knitr\", # tables\n             \"kableExtra\", # tables\n             \"lavaan\", # generate data\n             \"car\", # recoding\n             \"psych\") # descriptive\n\n\nUse the write_bib function from the kntir package (Xie, 2023).\n\n\nknitr::write_bib(x = pkgList,\n                 file = \"r-refs.bib\")\n\n\n\n\nTo change the citation style (e.g., APA, Chicago Manual of Style), we use the csl key5:\ncsl: apa.csl\nThe apa.csl file can be found on github.\nThe citation syntax (How to cite the references in the text?) is briefly explained in the The Body subsection Citation syntax.\n\n5.3.3 Execution/Output options\nThere are many different options to customize the output of the (executed code).The options can be specified:\n\nglobally (see in the following)\nper code block (see the section on Chunk options)\n\nIn the following example, we set echo: false and warning: false.\nexecute:\n  echo: false\n  warning: false\nThis means that no code and no warnings are shown, except you state it otherwise in a specific code block.\nFor more (chunk) options see https://quarto.org/docs/computations/execution-options.html."
  },
  {
    "objectID": "intro-quarto.html#quarto-body",
    "href": "intro-quarto.html#quarto-body",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "\n5.4 The body",
    "text": "5.4 The body\nAs explained in the section What is Quarto?:\n\nQuarto is based on Pandoc and uses its variation of markdown as its underlying document syntax (see https://quarto.org)\n\nThis means we can use Markdown syntax6 (together with the information in the YAML header) to generate the different types of documents (e.g., HTML, PDF, …).\n\n\n\n\n\n\nExercise: Work through the Markdown language section and the three subsections…\n\n\n\n\n\n\nText formatting\nHeadings\nLists\n\nThe information is very dense, so do not expect to remember everything.\n\n\n\n\n5.4.1 Markdown language\nThere are plenty of different guides to get a quick overview about the language (see e.g., markdownguide, or Quarto-website). The following code snippets are copied and sometimes slightly adjusted from https://quarto.org.\n\n5.4.1.1 Text formatting\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n*italics* and **bold**\n\nitalics and bold\n\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code\n\n\n\n5.4.1.2 Headings\nTo create headings, add one (or more) # in front of the heading.\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n\n\nThis goes up to level 6 (i.e., ######) which probably is not recommended to use though.\n\n5.4.1.3 Lists\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n\n\nunordered list\n\nsub-item 1\n\nsub-item 2\n\nsub-sub-item 1\n\n\n\n\n\n\n\n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n\nordered list\n\nitem 2\n\n\nsub-item 1\n\nsub-sub-item 1\n\n\n\n\n\n\n\n\nMore example can be found on https://quarto.org/docs/authoring/markdown-basics.html#lists.\n\n5.4.2 Cross-referencing\nTo make a figure, table, equation, …, or section/heading referenceable, it is necessary to provide unique identifier. Identifiers must start with their type (e.g., #fig-, #tbl-, #eq-), except for headers (see in the following example):\nWhen we want to cross-reference the Images section, we have to provide unique identifier that is enclosed by braces {} (here: #include-images) after the heading:\n## Images {#include-images} \nAn example on how to reference figures is shown in the Images section.\nFor more on cross-referencing (e.g., how to make sub-figures) see again https://quarto.org/docs/authoring/cross-references.html.\n\n5.4.3 Images\nOne way to include images is as follows:\n![Here goes the caption](/path-to-file/myImage.png){#fig-myImage}\nThe caption [Here goes the caption] and label {#fig-myImage} make this figure referenceable. To reference it, use the following syntax:\nSee @fig-myImage for a graphical representation.\nIt renders to:\nSee Figure 5.1 for a graphical representation.\n\n\nFigure 5.1: Here goes the caption\n\n\n\n\n\n\n\n\nTip. There are a few other options to include images…\n\n\n\n\n\nOne of them is the include_graphics function from the knitr package (Xie, 2023):\n\n```{r}\n#| label: fig-demo-include\n#| eval: false\n#| code-fold: false\n\nknitr::include_graphics(\"path-to-file\")\n```\n\nIt is referenceable via the label: fig-demo-include. For now ignore the other so-called chunk options (i.e., eval, code-fold). These are explained in the Chunk options section.\nFor more (e.g., HTML way &lt;img&gt; &lt;/img&gt; or &lt;iframe&gt;&lt;/iframe&gt;) see again https://quarto.org/docs/authoring/figures.html.\n\n\n\n\n5.4.4 Citation syntax\nRecall a reference in the .bib-file looks like this:\n@Manual{R-base,\n  title = {R: A Language and Environment for Statistical Computing},\n  author = {{R Core Team}},\n  organization = {R Foundation for Statistical Computing},\n  address = {Vienna, Austria},\n  year = {2022},\n  url = {https://www.R-project.org/},\n}\nTo cite the R program, use @ before the so-called BibLaTex key R-base. Three example follow:\n\n\n[@R-base] renders as: (R Core Team, 2023)\n\n\n@R-base renders as: R Core Team (2023)\n\n\n[-@R-base] renders as: (2023)\n\n\nMultiple citations are separated by semicolons:\n\n\n[@R-base; @R-knitr] renders as: (R Core Team, 2023; Xie, 2023)\n\n\nFor more information on the citation syntax see the Pandoc Citations documentation.\n\n5.4.5 There is a lot more!\n\nTechnical writing (e.g., Equations): Use $ delimiters for inline math and $$ delimiters for display math (see https://quarto.org)\n\nLinks:\n\n\n[This is a link to google.de](www.google.de) which appears as This is a link to google.de\n\n\n&lt;https://quarto.org&gt; which appears as https://quarto.org\n\n\n\nDiagrams (e.g., Mermaid,Graphviz)\nVideos\n…"
  },
  {
    "objectID": "intro-quarto.html#computations",
    "href": "intro-quarto.html#computations",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "\n5.5 Computations",
    "text": "5.5 Computations\n\n\n\n\n\n\nNote\n\n\n\nWhen using R, Quarto uses the Knitr engine7 to execute R code.\n\n\n\n5.5.1 R code blocks (or chunks)\nWithin a Quarto document source code8 can be displayed by using ``` at the start and the end of the code.\nThe starting ``` are followed by braces around the programming language (e.g., ```{python})\nR code is included by using braces around the letter r (i.e., ```{r}; the Windows shortcut is Ctrl+Shift+I)\nThis looks like this:\n\n```{r}\n#| label: fig-example-ggplot\n#| fig-cap: \"My first ggplot\"\n#| results: hold\n\nlibrary(ggplot2)\n\nggplot(data = diamonds,\n       aes(y = carat, x = price, color = cut)) +\n  geom_point() +\n  labs(y = \"Carat\", x = \"Price\", color = \"Cut\") +\n  theme_classic()\n```\n\n\n\nFigure 5.2: My first ggplot\n\n\n\n\n\n\n\n\n\n\nExercise: Create your first R code block.\n\n\n\n\n\n\n\n5.5.2 Chunk options9\n\nWhat are chunk options? Chunk options customize the output of the code blocks. In Quarto it is recommended10 to include the chunk options as special comments (i.e., |#) at the top of the chunk.\nIn the following example, we set output: false…\n\n```{r}\n#| label: my-first-chunk\n#| output: false\n\nprint(\"hello world!\")\n```\n\n… and hence, no output is shown.\nThe most common chunk options are:\n\n\n\n\n\n\n\nChunk option\nDescription\nValue\n\n\n\necho\nInclude the source code in output\ntrue/false/fenced\n\n\neval\nEvaluate the code chunk. If false the code of the chunk will not be executed, but depending on the echo value be displayed or not.\ntrue/false\n\n\ninclude\nInclude source code &(!) results in the output.\ntrue/false\n\n\nresults\nShould results be displayed in the output or not (false)? If yes how (markup vs. asis)?\n\nmarkup/asis/hold/ hide/false\n\n\n\nwarnings\nInclude warnings in output.\ntrue/false\n\n\n\n5.5.3 Rendering\nThere are a couple of ways to render a Quarto document:\n\nClicking the Render Button or using the keyboard shortcut (windows): Ctrl+Shift+K11\n\nUsing the terminal\n\nquarto render script.qmd --to html\nquarto render script.qmd --to pdf\n…\n\n\nUsing the quarto_render function from the quarto (Allaire, 2022) package\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen rendering a Quarto document, the R code chunks are executed (except you stated: eval: false).\n\n\n\n\n\n\n\n\nAllaire, J. (2022). Quarto: R interface to quarto markdown publishing system. https://github.com/quarto-dev/quarto-r\n\n\nAllaire, J., Xie, Y., Dervieux, C., McPherson, J., Luraschi, J., Ushey, K., Atkins, A., Wickham, H., Cheng, J., Chang, W., & Iannone, R. (2023). Rmarkdown: Dynamic documents for r. https://CRAN.R-project.org/package=rmarkdown\n\n\nR Core Team. (2023). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nXie, Y. (2023). Knitr: A general-purpose package for dynamic report generation in r. https://yihui.org/knitr/"
  },
  {
    "objectID": "intro-quarto.html#footnotes",
    "href": "intro-quarto.html#footnotes",
    "title": "\n5  A not so short introduction to Quarto\n",
    "section": "",
    "text": "Note: It is also possible to generate, presentations (e.g., powerpoint, beamer), websites, books and even interactive components.↩︎\nNevertheless, it (probably) will take some time to get familiar with it↩︎\nYAML is an acronym for Yet Another Markup Language see https://en.wikipedia.org/wiki/YAML↩︎\nIf you do not use one, it is time now.↩︎\nCSL is the abbreviation for Citation Style Language (for more see https://en.wikipedia.org/wiki/Citation_Style_Language↩︎\nIt is also possible to use Latex or HTML syntax. However, you most likely run into problems when rendering into the respective other type.↩︎\nQuarto also supports the Jupyter engine.↩︎\nQuarto/Pandoc supports displaying (!) many different programming languages (see here)↩︎\nsee also here: https://yihui.org/knitr/options/↩︎\nThe rmarkdown syntax is different (e.g., {r my-label, echo = FALSE}), but it also works in Quarto.↩︎\nFor Mac it is: Cmd+Shift+K↩︎"
  },
  {
    "objectID": "imp-data.html#import-or-export-data-sets",
    "href": "imp-data.html#import-or-export-data-sets",
    "title": "\n6  Import data\n",
    "section": "\n6.1 Import (or export) data sets",
    "text": "6.1 Import (or export) data sets\nIn R data sets are usually stored as data.frame objects (see also the section Data Structures). There are other object types for data sets such as tibble from the tibble package (Müller & Wickham, 2023) or data.table from the data.table package (Dowle & Srinivasan, 2023) which are more efficient, especially when it comes to (very) large data sets (see e.g., Chapter 10 of R for Data Science and the vignette of the data.table package).\n\n6.1.1 Data frames\nData sets can come in many different file formats. For example, .txt, .csv files, or .sav (SPSS), dta (Stata), .sas7bdat (SAS) files.\nTo import e.g., .csv or .txt files, R offers a couple of functions that deal with these formats:\n\n\nutils::read.table: Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file.\n\n\nutils::read.csv or utils::read.csv21\n\n\nutils::read.delim or utils::read.delim2\n\n\n\nbase::readLines: Read some or all text lines from a connection.\n…\n\nWhen it comes to other (software specific) formats, you need additional packages e.g., foreign (R Core Team, 2022) or haven (Wickham et al., 2022). In the following, we first export the exDat data set to a .sav file using the write.foreign function from the foreign package.\nTo import the SPSS data sets (.sav file), we may use the read.spss function from the foreign package (R Core Team, 2022). There are a couple of default arguments which you (likely) want to change:\n\n\nuse.value.labels: logical: convert variables with value labels into R factors with those levels? (default is TRUE switch to FALSE)\n\nto.data.framelogical: return a data frame? (default is FALSE switch to TRUE)\n\nuse.missings: logical: should information on user-defined missing values be used to set the corresponding values to NA?\n\n\nexDatImpforeign &lt;- foreign::read.spss(\"file-to-path-with-.sav-file\",\n                                      use.value.labels = FALSE,\n                                      to.data.frame = TRUE,\n                                      use.missings = TRUE)\n\n\n\n\n\n\n\nExporting dataframes\n\n\n\n\n\nTo export data to a file, you can use the base::write function(s):\n\nutils::write.table\n\nutils::write.csv or utils::write.csv2\n\n…\n\nAgain, when it comes to software-specific file formats you need additional packages such as foreign (R Core Team, 2022) or haven (Wickham et al., 2022):\n\nhaven::write_sav\nforeign::write.foreign\n…\n\nIn the following, the use of the write.foreign function is displayed:\n\ngetwd()\ncodefile &lt;- tempfile()\n\nforeign::write.foreign(exDat,\n                       \"exDat.sav\",\n                       codefile = codefile,\n                       package = c(\"SPSS\"))\n\nunlink(codefile)\n\nNote that there are a couple of further steps necessary to get a working .sav file. We recommend using the haven (Wickham et al., 2022) package (see below), at least when it comes to exporting data sets.\n\n\n\n\n6.1.2 Tibbles\nThe tibble package is part of the tidyverse2 (Wickham, 2023).\nFirst, check the class of the example data set exDat.\n\nclass(exDat)\n\n[1] \"data.frame\"\n\n\nThe as_tibble function from the tibble package (Müller & Wickham, 2023) turns an existing object (a data frame or matrix) into tibble which is a data.frame variant (with nice defaults) and class tbl_df (see ?tibble::as_tibble).\n\nexDatTib &lt;- tibble::as_tibble(exDat)\nclass(exDatTib)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nThe write_sav function from the haven package (Wickham et al., 2022) can also be used to export data sets. Before exporting the data, you may want to check your working directory with the getwd() function.\n\ngetwd()\nhaven::write_sav(exDat, \"exDat.sav\")\n\nTo import the data set, we use the read_sav function from the haven package.\n\nexDatImpTest &lt;- haven::read_sav(\"exDat.sav\")\n\nNote that the read_sav returns a tibble, data.frame variant (with nice defaults).\nFor more see https://tibble.tidyverse.org/ and Chapter 10 of R for Data Science.\n\n\n\n\n\n\nDowle, M., & Srinivasan, A. (2023). Data.table: Extension of ‘data.frame‘. https://CRAN.R-project.org/package=data.table\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data frames. https://CRAN.R-project.org/package=tibble\n\n\nR Core Team. (2022). Foreign: Read data stored by minitab, s, SAS, SPSS, stata, systat, weka, dBase, ... https://svn.r-project.org/R-packages/trunk/foreign/\n\n\nWickham, H. (2023). Tidyverse: Easily install and load the tidyverse. https://CRAN.R-project.org/package=tidyverse\n\n\nWickham, H., Miller, E., & Smith, D. (2022). Haven: Import and export SPSS, stata and SAS files. https://CRAN.R-project.org/package=haven"
  },
  {
    "objectID": "imp-data.html#footnotes",
    "href": "imp-data.html#footnotes",
    "title": "\n6  Import data\n",
    "section": "",
    "text": "see also here: https://stackoverflow.com/questions/22970091/difference-between-read-csv-and-read-csv2-in-r↩︎\nfor more see the section on Base R vs. & tidyverse.↩︎"
  },
  {
    "objectID": "data-cleaning.html#why-data-cleaning",
    "href": "data-cleaning.html#why-data-cleaning",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.1 Why data cleaning?",
    "text": "7.1 Why data cleaning?\nThe validity  of results of statistical data analyses depends on the quality of the data which in turn depends on several factors such as:\n\nsampling (number of cases, representativeness, etc.)\n\nresearch design\n\nquality of the survey instrument\n\noperationalization\n…\ndata cleaning & data preparation"
  },
  {
    "objectID": "data-cleaning.html#what-is-data-cleaning",
    "href": "data-cleaning.html#what-is-data-cleaning",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.2 What is data cleaning?",
    "text": "7.2 What is data cleaning?\nData cleaning (or data cleansing) is the process of identifying and correcting errors, inconsistencies, and inaccuracies in the data. It is always the first step after data entry or data transfer from external sources.\nThe steps of data cleaning vary depending on the type and quality of data. The following steps can be seen as a general outline:\n\nUnderstand the structure of the data (set) → Codebook should help\n\nRemove duplicate observations\n\n\nHandling missing data\n\n\nPlausibility checks (aka data validation)"
  },
  {
    "objectID": "data-cleaning.html#how-to-clean-data",
    "href": "data-cleaning.html#how-to-clean-data",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.3 How to clean data?",
    "text": "7.3 How to clean data?\nDepending on how much data cleaning is needed, it is recommended to clean data in a sequential way (We like it neat!). This means after we succeed with one step of data cleaning, we save the respective R- or Quarto script and the data set with an appropriate description (see Figure 7.1).\n\n\nFigure 7.1: Example of sequential way of working with data\n\n\nThe sequential procedure is also exemplified in the next section Remove duplicate observations.\n\n\n\n\n\n\nImportant\n\n\n\nWhen cleaning a data set, you should NEVER(!) replace the raw data with processed data (i.e., overwrite the raw data file). The manipulated data should be assigned to a new object and thereafter MUST BE saved as a new file!\nThe raw data should also be a read-only file (i.e., right click on the file &gt; Properties &gt; Attributes &gt; Read-only).\n\n\nBecause it is also crucial to document the data cleaning process (i.e., to reconstruct all steps), we also recommend to use Quarto documents because of the increased readability."
  },
  {
    "objectID": "data-cleaning.html#rem-duplicate",
    "href": "data-cleaning.html#rem-duplicate",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.4 Remove duplicate observations",
    "text": "7.4 Remove duplicate observations\nDuplicate observations are identified via the id and variable values (i.e., response patterns). In Table 7.1 there are 3 different scenarios depicted that are problematic.\n\n\nTable 7.1: Overview of duplicate observations scenarios\n\n\n\n\n\n\n\n\nScenario\n\nAction\n\n\n\n\n\n\nSame id variable value, and same variable values (response pattern)\n→\ndelete one observation\n\n\n\n\n\nSame id variable value, but different variable values (response pattern)\n→\ncheck data (i.e., questionnaires)\n\n\n\n\n\nDifferent id variable values, but same variable values (response pattern)\n→\ncomplicated, it is possible, but check data (i.e., questionnaires, especially open fields)\n\n\n\n\n\n\n\n\n\n\nTip: Think carefully about the identification variables!\n\n\n\n\n\nIdentification (ID) variables are eminent when working on projects that contain several sources (e.g., different questionnaires), or span across multiple years (e.g., longitudinal studies) and must be planned before the data collection.\nID variables should be …\n\nuniquely identifying → no duplicates\nfully identifying → all observations have an ID variable value\nconstant throughout the duration of projects → observations do not have different IDs in a other datasets\nanonymous\n\nFor more see here: https://dimewiki.worldbank.org/ID_Variable_Properties\n\n\n\nThe procedure is as follows:\n\nImport data → we use the data set from below: exDatID\nFind duplicate observations\nExclude real (!) duplicates (but consult your supervisors!)\nSave data set to a new file\n\n\n\n\n\n\n\nGenerate some duplicate observations.\n\n\n\n\n\n!! Do not do this with real data !! !! Do not do this with real data !! !! Do not do this with real data !!\nThe example data set exDat does not contain any duplicate observations. Hence, we have to create them. This is done with the rbind function (i.e., adding the first five rows [1:5] of the exDat data set to the exDat data set).\n\nexDatID &lt;- tibble::as_tibble( rbind(exDat,exDat[1:5,]) )\nexDatID[c(751, 752),\"id\"] &lt;- c(751, 752)\nexDatID[6,\"id\"] &lt;- 7\n#exDatID$comment &lt;- c(\"Hi\", \"Hello\", \"apple\", \"avocado\", \"bye\",\n  #                   rep(\"no\", 745),\n #                    \"Hi\", \"Hello\", \"apple\", \"avocado\", \"bye\")\n\nnrow(exDatID)\n\n[1] 755\n\n\n!! Do not do this with real data !! !! Do not do this with real data !! !! Do not do this with real data !!\nFor the exercise below, write the exDatID data set to your project folder.\n\ngetwd()\nwrite.csv2(x = exDatID,\n           file = \"exDatID.csv\",\n           row.names = FALSE)\n\n\n\n\nHow to find and remove duplicate observations via the id and variable values? In the following there is a base R and a dplyr (Wickham, François, et al., 2023) solution shown. Both approaches use the duplicated() function which requires a vector, a data frame or an array as input x. The output is logical vector (TRUE/FALSE) of the same length as x.\n\n\n\n\n\n\nExercise: Remove the duplicate observations from the exDatId data set!\n\n\n\n\n\n\nOpen a new R- or Quarto-script (i.e., File &gt; New File) and provide an meaningful name.\nImport the exDatID.csv data set (which was generated above)\n\n\nexDatID &lt;- read.csv2(file = \"exDatID.csv\",\n          header = TRUE)\n\n\nGo through the following steps. Choose either between the base R or the dplyr approach.\nSave the cleaned data set (i.e., without the duplicates) with a meaningful name that also matches the name of the script.\n\n\ngetwd()\nwrite.csv2(x = exDatCleanID,\n           file = \"exDat-cleaned-ID.csv\",\n           row.names = FALSE)\n\n\n\n:::\n\n\n::: {.panel-tabset}\n### Base R\n\n1. Identify the duplicate `id` values: Use the `ifelse` function to transform the returned logical vector of the `duplicated` function to a `character` variable and then it as a new variable^[How to add a new variable is explained in more detail in the section on [Data transformation](data-transform.qmd#build-var).] (here: `dupID`) to the data set. \n  \n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\" code-line-numbers=\"false\"}\nexDatID$dupID &lt;- ifelse ( duplicated(exDatID$id), \"dup\",\" \")\n#table(exDatID$dupID)\n\n\n\n\nIdentify with the which function which id values are duplicated.\n\n\nwhichID &lt;- exDatID[which(exDatID$dupID == \"dup\"), \"id\"]\nwhichID\n\n# A tibble: 4 × 1\n     id\n  &lt;int&gt;\n1     7\n2     3\n3     4\n4     5\n\n\n\nSelect only the the rows with duplicated id values (unlist the tbl_df object: whichID is necessary).\n\n\ndupIDs &lt;- exDatID[exDatID$id %in% unlist(whichID),]\n\n\nShow the (ordered) data set.\n\n\ndupIDs[order(dupIDs$id),]\n\n# A tibble: 8 × 10\n   msc1  msc2  msc3  msc4   age   sex   edu fLang     id dupID\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;int&gt; &lt;chr&gt;\n1     2     2     3     3 12.8      0     0 german     3 \" \"  \n2     2     2     3     3 12.8      0     0 german     3 \"dup\"\n3     2     2     3     2 10.6      0     0 german     4 \" \"  \n4     2     2     3     2 10.6      0     0 german     4 \"dup\"\n5     3     2     2     2  9.89     1     0 german     5 \" \"  \n6     3     2     2     2  9.89     1     0 german     5 \"dup\"\n7     3     3     3     2 10.4      0     0 german     7 \" \"  \n8     4     4     1     2 10.9      1     0 german     7 \"dup\"\n\n\nWhat do we see? 4 duplicated id values: 3, 4, 5, 7 were identified, but only 3, 4, and 5 are real duplicate observations. In a real data set, this would be probably a input error during data entry. Hence, it would be necessary to check the questionnaires. We know that it was a mistake, because we created the error (see above). Thus, we can reverse it without further ado. But be careful that you select the right observation.\n\nShow/hide codeexDatID[exDatID$id == 7 & exDatID$dupID != \"dup\",\"id\"] &lt;- 6\nexDatID[exDatID$id == 7,\"dupID\"] &lt;- \" \"\n\n\nThe observations with the id values 3, 4, and 5 can be deleted. Therefore, we can use the subset function that requires the input x which can be matrices, data frames or vectors (including lists). In the subsetargument you can state logical expression indicating elements or rows to keep (here: != dup).\n\nexDatID &lt;- subset(x = exDatID,\n                  subset = dupID != \"dup\")\nnrow(exDatID)\n\n[1] 752\n\n\nNote that there are still 2 duplicate observations left. Nevertheless, we can delete the variable dupID and clean our environment with the rm function:\n\nexDatID$dupID &lt;- NULL\nrm(whichID, dupIDs)\n\nWhat to do with the other 2 duplicate observation? We need to repeat the procedure. This time we do not examine the id values (i.e., actually we exclude this variable), but the response pattern.\n\nuniqueRows &lt;- exDatID[duplicated(exDatID[, -which(names(exDatID) == \"id\")]),\"id\"]\n\nexDatID[exDatID$id %in% unlist(uniqueRows),]\n\n# A tibble: 12 × 9\n    msc1  msc2  msc3  msc4   age   sex   edu fLang     id\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;int&gt;\n 1     2     3     2     2 NA        0     1 german   150\n 2     1    NA     4     4 NA        1     2 german   282\n 3     3     3     2     2 NA        0     3 german   381\n 4     3     3     2     2 NA        1     3 german   397\n 5     3     3     2     2 NA        0     3 german   438\n 6     3     3     2     2 NA        1     3 german   476\n 7     2     2     3     3 NA        1     3 german   494\n 8     3     3     3     3 NA        1     4 german   579\n 9     2     3     2     2 NA        1     4 ger      668\n10     3     2     2     2 NA        0     4 ger      690\n11     2     3     2     2  9.82     0     0 german   751\n12     3     2     1     1  8.98     1     0 german   752\n\n\n\n\n\n7.4.1 dplyr package\nFiltering can be done using the dplyr::filter() function in combination with duplicated().\n\nexDatID |&gt; \n  dplyr::mutate(dupID = ifelse(duplicated(id), \"dup\", \" \")) |&gt;\n  dplyr::filter(dupID == \"dup\")\n\n# A tibble: 0 × 11\n# … with 11 variables: msc1 &lt;dbl&gt;, msc2 &lt;dbl&gt;, msc3 &lt;dbl&gt;, msc4 &lt;dbl&gt;,\n#   age &lt;dbl&gt;, sex &lt;dbl&gt;, edu &lt;dbl&gt;, fLang &lt;chr&gt;, id &lt;int&gt;, dupResp &lt;chr&gt;,\n#   dupID &lt;chr&gt;\n\n\nHowever, dplyr provides a function dplyr::distinct() which can be used to keep only unique rows.\n\ndplyr::distinct(exDatID)\n\n# A tibble: 752 × 10\n    msc1  msc2  msc3  msc4   age   sex   edu fLang     id dupResp\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;int&gt; &lt;chr&gt;  \n 1     2     3     2     2  9.82     0     0 german     1 \" \"    \n 2     3     2     1     1  8.98     1     0 german     2 \" \"    \n 3     2     2     3     3 12.8      0     0 german     3 \" \"    \n 4     2     2     3     2 10.6      0     0 german     4 \" \"    \n 5     3     2     2     2  9.89     1     0 german     5 \" \"    \n 6     3     3     3     2 10.4      0     0 german     6 \" \"    \n 7     4     4     1     2 10.9      1     0 german     7 \" \"    \n 8     3     3     2     1  7.98     1     0 german     8 \" \"    \n 9     3     3     2     1 10.7     NA     0 german     9 \" \"    \n10     3     3     2     2  9.11     0     0 german    10 \" \"    \n# … with 742 more rows\n\n\n:::"
  },
  {
    "objectID": "data-cleaning.html#handle-missing",
    "href": "data-cleaning.html#handle-missing",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.5 Handling missing data",
    "text": "7.5 Handling missing data\nMissing data is a common problem in most behavioral science research (Enders, 2010, 2023; Schafer & Graham, 2002). Especially, in questionnaire surveys it is unavoidable that values are missing because a field of the questionnaire was not filled in or a person dropped out of the study. Therefore, it is essential to examine the data with regard to missing data. By missing values, we refer to cells that could have a value, but whose value is not available (see section on Data Types in the Introduction to R & RStudio part).\nThe procedure encompasses 3 2 steps:\n\nDefine missing values\n\nExamine missing values\n\n(Omit missing values → usually not recommended)\n\n\n7.5.1 Define missing values\nIn other statistical software programs (e.g., SPSS) or in study planning, missing values are often defined as numeric values (e.g., -9, -88 or -99)1 or as empty characters/strings (i.e., \"\" or \" \"). In R, missing values are represented by the symbol NA (not available). This means, the first step is to ensure that all missing values are declared as NA in the data set.\n\n\n\n\n\n\nAssign -99 values\n\n\n\n\n\n!! Do not do this with real data !! !! Do not do this with real data !! !! Do not do this with real data !!\nThe example data set exDat does also not contain any missing values that are not NA values. Hence, we have to create them. With the following code, we assign the values -99 to the first 5 rows of the variable age and -88 to the first 4 rows of the variables sex and edu (and store it in a new data set exDatMis).\n\nexDatMis &lt;- exDat\nexDatMis[1:5, \"age\"] &lt;- -99\nexDatMis[1:4,c(\"sex\", \"edu\")] &lt;- -88\nhead(exDatMis, 6)\n\n  msc1 msc2 msc3 msc4       age sex edu  fLang id\n1    2    3    2    2 -99.00000 -88 -88 german  1\n2    3    2    1    1 -99.00000 -88 -88 german  2\n3    2    2    3    3 -99.00000 -88 -88 german  3\n4    2    2    3    2 -99.00000 -88 -88 german  4\n5    3    2    2    2 -99.00000   1   0 german  5\n6    3    3    3    2  10.44685   0   0 german  6\n\n\n!! Do not do this with real data !! !! Do not do this with real data !! !! Do not do this with real data !!\n\n\n\nTo demonstrate the effect, we calculate the mean of the variable age in the exDat and exDatMis data set:\n\nmean(exDat$age, na.rm = T)\nmean(exDatMis$age, na.rm = T)\n\n\n\n[1] 10.03468\n\n\n[1] 9.218226\n\n\n\n\nTo set the numeric values of -99 or -88 to NA, we may use one of the following two approaches:\n\n\nBase R\ndplyr package\n\n\n\nFor a single variable:\n\nexDatMis$age[exDatMis$age == -99] &lt;- NA\n\nFor multiple variables:\n\ncolToNa &lt;- c(\"sex\", \"edu\")\nexDatMis[colToNa][exDatMis[colToNa] == -88] &lt;- NA\n\nFor the whole data set:\n\nexDatMis[exDatMis == -99] &lt;- NA\n\n\n\nThe na_if() function from the dplyr package (Wickham, François, et al., 2023) is designed to to convert a (specific) values to NA.\nFor a single variable:\n\nexDatMis$age &lt;- dplyr::na_if(exDatMis$age, -99)\n\nFor multiple variables:\n\ncolToNa &lt;- c(\"sex\", \"edu\")\nexDatMis &lt;- exDatMis |&gt;\n  dplyr::mutate(dplyr::across(colToNa, na_if, y = -88)) \n\nFor the whole data set:\n\nexDatMis &lt;- exDatMis |&gt;\n  dplyr::mutate(dplyr::across(colnames(exDatMis), na_if, y = -88))\n\nBut note that na_if() is meant for use with vectors rather than entire data frames.\n\n\n\n\n7.5.2 Examine missing values\nThe is.na function indicates which elements are missing. It requires an input x that can be e.g., a vector, data.frame or list. The values that are returned depend on the input. For example, when you pass a vector to the function, it returns a logical vector of the same length as its argument x, containing TRUE for those elements marked NA or, for numeric or complex vectors, NaN, and FALSE otherwise.\n\nis.na(\n  c(1, NA, \"hello\", NaN, \" \")\n  )\n\n[1] FALSE  TRUE FALSE FALSE FALSE\n\n\nIn the following, we show how the is.na function may be applied to variables within a data set. To count the missing values (or to be more specific the returned TRUE values), we use the sum and colSums functions.\n\n\n\n\n\n\nTip: summary() of a data.frame\n\n\n\n\n\nThe summary() function returns beside some descriptive statistics (e.g., minimum, maximum, mean, …), also the amount of NAs of each variable of the given data set.\n\nsummary(exDat)\n\n      msc1            msc2            msc3            msc4     \n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   :1.00  \n 1st Qu.:2.000   1st Qu.:2.000   1st Qu.:2.000   1st Qu.:2.00  \n Median :3.000   Median :3.000   Median :2.000   Median :2.00  \n Mean   :2.519   Mean   :2.544   Mean   :2.488   Mean   :2.48  \n 3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:3.00  \n Max.   :4.000   Max.   :4.000   Max.   :4.000   Max.   :4.00  \n                 NA's   :70                                    \n      age              sex              edu           fLang          \n Min.   : 5.440   Min.   :0.0000   Min.   :0.000   Length:750        \n 1st Qu.: 9.052   1st Qu.:0.0000   1st Qu.:2.000   Class :character  \n Median :10.030   Median :0.0000   Median :3.000   Mode  :character  \n Mean   :10.035   Mean   :0.4979   Mean   :2.667                     \n 3rd Qu.:11.018   3rd Qu.:1.0000   3rd Qu.:4.000                     \n Max.   :30.000   Max.   :1.0000   Max.   :4.000                     \n NA's   :80       NA's   :39                                         \n       id       \n Min.   :  1.0  \n 1st Qu.:188.2  \n Median :375.5  \n Mean   :375.5  \n 3rd Qu.:562.8  \n Max.   :750.0  \n                \n\n\n\n\n\n\n\nBase R\ndplyr package\n\n\n\nFor a single variable:\n\nsum(is.na(exDat$msc2))\n\n[1] 70\n\n\nFor multiple variables:\n\ncolSums(is.na(exDat[,c(\"msc2\", \"sex\", \"edu\")]))\n\nmsc2  sex  edu \n  70   39    0 \n\n\nFor the whole data set:\n\ncolSums(is.na(exDat))\n\n msc1  msc2  msc3  msc4   age   sex   edu fLang    id \n    0    70     0     0    80    39     0    20     0 \n\n\n\n\nFor a single variable:\n\nexDat |&gt;\n  dplyr::select(msc2) |&gt;\n  is.na() |&gt;\n  sum()\n\n[1] 70\n\n\nFor multiple variables:\n\nexDat |&gt;\n  dplyr::select(c(\"msc2\", \"sex\", \"edu\")) |&gt;\n  is.na() |&gt;\n  colSums()\n\nmsc2  sex  edu \n  70   39    0 \n\n\nFor the whole data set:\n\nexDat |&gt;\n  is.na() |&gt;\n  colSums()\n\n msc1  msc2  msc3  msc4   age   sex   edu fLang    id \n    0    70     0     0    80    39     0    20     0 \n\n\n\n\n\n\n\n\n\n\n\nExercise: Count the missing values!\n\n\n\n\n\n\n\n\n\n\n7.5.3 Omit missing values\nAlthough omitting or deleting missing values is a common practice, this is not recommended to deal with missing data and should–in most scenarios–be avoided altogether (Schafer & Graham, 2002). Two “state-of-the-art” missing data methods are maximum likelihood estimation (e.g., implemented in the lavaan package, see Rosseel et al., 2023) and multiple imputation (e.g., implemented in the mice package, see van Buuren & Groothuis-Oudshoorn, 2021; for good introductions to this topic, see Enders, 2010).\nNevertheless, if you would like to omit missing values anyway, there are several functions to do this in R. Also, it is important to note that ignoring or omitting missing values are often the default options in R.\nFor example, by negating the is.na function (i.e., !is.na), those rows that do not contain NAs on a variable or data set are kept.\n\n\nBase R\ndplyr package\n\n\n\nFor a single variable:\n\nexDat[!is.na(exDat$age), ]\n\n    msc1 msc2 msc3 msc4       age sex edu   fLang  id\n1      2    3    2    2  9.815538   0   0  german   1\n2      3    2    1    1  8.980194   1   0  german   2\n3      2    2    3    3 12.758157   0   0  german   3\n4      2    2    3    2 10.578846   0   0  german   4\n5      3    2    2    2  9.894364   1   0  german   5\n6      3    3    3    2 10.446850   0   0  german   6\n7      4    4    1    2 10.897605   1   0  german   7\n8      3    3    2    1  7.977382   1   0  german   8\n9      3    3    2    1 10.688379  NA   0  german   9\n10     3    3    2    2  9.105864   0   0  german  10\n11     2    1    3    3  8.540117   0   0  german  11\n12     2    2    3    3 11.841954   0   0  german  12\n13     2    2    3    4 11.647655   0   0  german  13\n14     2    3    3    3 11.745306   0   0  german  14\n15     2    3    3    3  9.970630   0   0  german  15\n16     3    3    2    1  8.186501  NA   0  german  16\n17     2    2    2    2  7.773473   1   0  german  17\n19     2    2    3    3  9.339448   0   0  german  19\n21     4    3    2    2  9.831947   0   0  german  21\n22     2    3    3    3  9.890266   1   0  german  22\n23     2    3    2    2 11.501609   0   0  german  23\n24     2   NA    3    2  9.341404   0   0  german  24\n25     3    3    2    2 11.540030   1   0  german  25\n26     2    3    3    3 10.098491   1   0  german  26\n27     4    3    2    2 10.851320   1   0  german  27\n28     3    2    2    2  6.735228   1   0  german  28\n29     3    4    2    2 10.690059   1   0  german  29\n30     3    2    2    3  9.746659   1   0  german  30\n31     2    1    4    4  8.983450   0   0  german  31\n32     2   NA    3    3 11.557894   0   0  german  32\n33     2    2    3    2  8.057455   1   0  german  33\n34     2    2    3    3 10.134752   0   0  german  34\n35     2    3    3    2  8.096160   0   0  german  35\n36     4    3    1    1  9.404151  NA   0  german  36\n37     3    3    3    3 12.156118   0   0  german  37\n38     2    2    3    2  9.600157   0   0  german  38\n39     2    3    3    3 11.591400   0   0  german  39\n40     3    4    2    2 10.691193   1   0  german  40\n41     3    3    3    2 12.622380   0   0  german  41\n42     3    2    2    2 10.043774   1   0  german  42\n43     4    3    2    2  8.452508   0   0  german  43\n44     4    3    2    2 12.029754   1   0  german  44\n45     3    2    3    3  8.213722   1   0  german  45\n46     2    3    2    3 11.654911   0   0  german  46\n47     4    3    1    1  9.086209   1   0  german  47\n48     3   NA    3    3  9.535470   1   0  german  48\n49     2    3    3    3  9.617718   0   0  german  49\n50     2    3    2    2 10.347768   1   0  german  50\n51     2    1    3    3 10.735626   0   1  german  51\n52     3    3    3    2 10.903281   1   1  german  52\n53     2   NA    3    3 10.265831   1   1  german  53\n54     2    3    4    3 10.824752   0   1  german  54\n55     3    3    3    3  9.282584   0   1  german  55\n57     2    3    3    3  8.747505   1   1  german  57\n58     2    2    3    4  8.992998   1   1  german  58\n59     2    2    3    3 12.632563   1   1  german  59\n60     2    2    3    3 11.015445   1   1  german  60\n61     3    3    2    2  9.529734   1   1  german  61\n62     4    3    1    1 11.569437   1   1  german  62\n63     4    3    2    2 11.626011   1   1  german  63\n64     2   NA    3    3 12.371110   0   1  german  64\n65     2    2    2    3  8.712209   1   1  german  65\n66     1    2    3    2 12.271368   0   1  german  66\n67     3    3    2    2 11.514336   1   1  german  67\n69     2    2    2    2 10.858827   1   1  german  69\n70     2    2    3    4 11.416986   0   1  german  70\n71     2   NA    1    2 10.722411   0   1  german  71\n72     2    3    3    3  9.417725   1   1  german  72\n73     4    3    1    2 10.788379   1   1  german  73\n74     2    3    2    2  7.527881   1   1  german  74\n75     2    2    3    3  7.697320   0   1  german  75\n76     3    4    3    2  9.723288   1   1  german  76\n77     2    2    3    3  8.457035  NA   1  german  77\n78     3    3    3    3  9.552697   1   1  german  78\n79     3    3    3    3 10.766935   1   1  german  79\n80     3   NA    2    2  8.086932   1   1  german  80\n81     2    3    2    2 10.027268   0   1  german  81\n82     4    3    2    2 11.108152   1   1  german  82\n83     3    3    2    2  9.364853   1   1  german  83\n84     2   NA    4    4  9.229549   0   1  german  84\n85     4    3    1    1  8.791437   0   1  german  85\n86     2    2    3    3 14.699514   1   1  german  86\n87     1    2    4    3  9.310963   0   1  german  87\n88     2   NA    2    2  7.862333   0   1  german  88\n89     3    4    1    2  9.164070   0   1  german  89\n90     3    2    3    2  9.904690   0   1  german  90\n91     1    2    3    3  9.949049   0   1  german  91\n92     1    2    3    2 10.874213   0   1  german  92\n93     2    3    3    3  9.589440   0   1  german  93\n94     2    2    3    3  8.396720   0   1  german  94\n95     1    2    3    3  8.633062   1   1  german  95\n96     3    4    2    2 10.174559   1   1  german  96\n98     4    3    2    2  6.022669   1   1  german  98\n99     3    3    2    2 10.701638   1   1  german  99\n101    2    3    3    3 11.536565   0   1  german 101\n103    2    2    3    3  7.082311   1   1  german 103\n104    3    3    2    3  7.990254   1   1  german 104\n105    2    2    3    3 13.223930   1   1  german 105\n106    2    3    2    3  8.847114   0   1  german 106\n107    2   NA    3    3 11.477532   0   1  german 107\n108    3    4    1    1  8.809008  NA   1  german 108\n109    2    2    3    2  8.917741   1   1  german 109\n110    2    2    3    4  9.059646   0   1  german 110\n112    2   NA    2    2  7.801995   1   1  german 112\n115    2    2    3    3  8.336241   0   1  german 115\n116    3    3    2    2 12.158201   1   1  german 116\n118    2    2    4    3 11.067872   1   1  german 118\n119    3   NA    2    2 11.700517   0   1  german 119\n120    3    2    3    2  9.562434   0   1  german 120\n121    3    3    3    2  8.977396   0   1  german 121\n122    3    2    3    2 10.162202   0   1  german 122\n123    3    3    3    2  9.885336   0   1  german 123\n124    3    2    3    3 12.560990   1   1  german 124\n125    2    2    4    4 11.087431   1   1  german 125\n126    3    3    4    3 10.371456   1   1  german 126\n127    3    4    1    2  9.319275   1   1  german 127\n128    2    2    2    3 11.008828   1   1  german 128\n129    1    2    3    2  9.656535   0   1  german 129\n130    1    2    3    4 10.032404   0   1  german 130\n131    2    2    3    3  6.974716   1   1  german 131\n132    3    2    2    3  9.168019   1   1  german 132\n133    2    1    3    4 10.658201   1   1  german 133\n134    3    2    2    2 10.723573   1   1  german 134\n135    1    2    4    3  9.564175   1   1  german 135\n136    2    3    3    2  9.440463   1   1  german 136\n137    1    2    3    4  8.574188   1   1  german 137\n138    2    2    3    3  8.336412   0   1  german 138\n139    3    2    2    2 11.316498   0   1  german 139\n140    4    3    2    2 10.089194   1   1  german 140\n141    3    3    2    2 11.326115   0   1  german 141\n142    2    3    2    2 10.544879   1   1  german 142\n143    4    3    2    2  8.278763   0   1  german 143\n144    3    3    2    2  9.165442   0   1  german 144\n145    3    4    2    2 14.840083   0   1  german 145\n146    4    4    1    1  9.177470   0   1  german 146\n147    2    3    1    1 10.392509   1   1  german 147\n148    3    3    2    3 10.074265   1   1  german 148\n149    2   NA    2    2 10.394414   0   1  german 149\n151    2    2    3    3 11.303224   0   2  german 151\n152    3    3    2    2  8.301101   0   2  german 152\n153    3    4    2    2 11.552966   1   2  german 153\n154    3    3    2    2 10.420355   1   2  german 154\n155    3    4    2    2 12.648300   1   2  german 155\n156    2    2    3    2  9.985757   1   2  german 156\n157    2    3    2    2 10.504636   0   2  german 157\n159    2    2    3    3  9.576623   0   2  german 159\n160    3    3    2    2 12.855773   1   2  german 160\n161    2    1    3    4 10.131071   0   2  german 161\n162    2    3    3    3 11.018442   1   2  german 162\n163    3    3    2    2 10.910317   1   2  german 163\n164    1   NA    3    4  9.682431   0   2  german 164\n165    3    2    3    3 10.402108   1   2  german 165\n166    2    2    3    2 11.020302   0   2  german 166\n167    2    2    3    3 10.862003   1   2  german 167\n168    3   NA    2    1 12.021632   0   2  german 168\n169    2   NA    2    3 11.145560   1   2  german 169\n170    3   NA    1    2 11.157485   1   2  german 170\n171    3    3    2    1 11.156488   1   2  german 171\n172    1    2    3    3 11.774043   0   2  german 172\n173    3    2    3    2  9.014673   0   2  german 173\n174    4    4    1    1  9.755259   1   2  german 174\n175    3    3    3    3  7.710862   0   2  german 175\n176    1    1    4    4 11.418964   1   2  german 176\n177    1    2    4    3 10.702477   0   2  german 177\n178    3    2    3    2 11.237905   1   2  german 178\n179    3    1    2    2  9.225546   0   2  german 179\n180    3    3    2    2  9.673228   0   2  german 180\n181    2    3    2    2  9.358897   0   2  german 181\n182    3    2    3    3  9.252146   1   2  german 182\n183    2    2    3    3  8.616693   0   2  german 183\n184    3    4    2    2 10.721936   0   2  german 184\n185    3    3    2    2 11.054393   0   2  german 185\n186    1    1    4    4  8.094315   1   2  german 186\n187    3    3    1    2  9.231779   0   2  german 187\n188    3    3    2    2  8.547865   1   2  german 188\n189    3    3    3    3 10.345779   0   2  german 189\n190    1    2    3    3 13.226910  NA   2  german 190\n191    2    2    3    4 10.411992   0   2  german 191\n192    3    3    2    3  8.971620   1   2  german 192\n193    1    2    4    4 10.898386   0   2  german 193\n194    2    2    3    3 10.625394   1   2  german 194\n195    2    2    3    4  6.357136   0   2  german 195\n196    1    2    3    3 12.102026   1   2  german 196\n198    2    3    3    3  6.586317   1   2  german 198\n199    3    3    3    2  9.050529   1   2  german 199\n200    2    2    3    3 12.723541   1   2  german 200\n201    2    2    3    3  9.753327  NA   2  german 201\n202    2    2    2    2 13.303115   1   2  german 202\n204    3    3    2    2 11.445677   0   2  german 204\n205    2    2    2    2  9.306572   0   2  german 205\n206    3    1    3    3  8.328087   0   2  german 206\n207    3    4    1    2 10.359319   0   2  german 207\n209    2    2    3    2  9.748836   1   2  german 209\n210    2    2    3    3 11.357677   0   2  german 210\n211    3    3    2    2  9.790493   1   2  german 211\n212    3    3    3    3  8.325024   0   2  german 212\n213    2    2    2    2  9.281008   1   2  german 213\n214    3    2    2    2 13.164568   0   2  german 214\n215    2    2    2    2  7.828867   0   2  german 215\n216    3    3    3    3 10.665805   0   2  german 216\n217    2    1    3    3 10.635206   1   2  german 217\n218    2   NA    3    2  7.969089   1   2  german 218\n219    2    2    2    3  8.923574   0   2  german 219\n220    2    2    2    2  7.883175  NA   2  german 220\n221    4   NA    2    1  8.577328   1   2  german 221\n222    2   NA    4    4  8.257213   1   2  german 222\n223    3    3    3    2 10.397873   1   2  german 223\n224    4    3    2    2 10.241358   1   2  german 224\n225    3    3    2    1  9.874614   1   2  german 225\n226    2    3    2    2  9.251216   0   2  german 226\n227    3    2    2    2 11.927287   0   2  german 227\n228    4    4    2    2 10.327432   0   2  german 228\n229    3    2    3    2  6.475004   0   2  german 229\n230    2    3    3    3 11.338842   0   2  german 230\n232    3    3    2    2  7.933710   0   2  german 232\n233    2    3    3    3 10.721250   1   2  german 233\n234    3    2    3    3  8.086553   0   2  german 234\n235    2    3    3    3 12.252961  NA   2  german 235\n236    3    3    2    2  9.883740  NA   2  german 236\n237    2    2    2    3 11.260712   0   2  german 237\n239    3   NA    2    2 13.991412   1   2  german 239\n240    2    3    2    3  9.606693   1   2  german 240\n241    2    2    2    2  9.965807   1   2  german 241\n242    3    3    2    2  6.665730  NA   2  german 242\n243    2    2    2    2 11.588374   1   2  german 243\n244    2    1    3    3 12.054486   0   2  german 244\n245    2    1    3    2  8.551229   1   2  german 245\n246    1    1    4    4 14.758472   1   2  german 246\n247    3    3    2    1 10.601619   1   2  german 247\n248    2    3    2    3  9.608768   1   2  german 248\n249    2    2    3    4 10.631563   0   2  german 249\n250    3    4    1    1  9.195155   0   2  german 250\n251    3    2    3    3 12.153778   1   2  german 251\n252    2    1    4    4 11.594112   1   2  german 252\n253    3    3    2    2 12.749052   0   2  german 253\n254    2    1    3    3 10.904641   1   2  german 254\n255    2    2    3    3  9.674235  NA   2  german 255\n256    3    3    1    1  9.382583   1   2  german 256\n257    2    2    4    3 10.075463   1   2  german 257\n260    3    3    2    2 10.003249   0   2  german 260\n261    2    2    3    3 10.357645   0   2  german 261\n262    1    2    3    3 11.427154   0   2  german 262\n263    1    2    4    3 11.141758   1   2  german 263\n264    2    2    3    3 11.717822   0   2  german 264\n265    3    3    2    1  8.591719   1   2  german 265\n266    4    3    2    2  7.199316   1   2  german 266\n267    2    2    3    3  8.511259  NA   2  german 267\n268    1   NA    4    4 13.183838   1   2  german 268\n269    3   NA    2    2  9.723661   0   2  german 269\n270    3    2    1    1  9.901684   1   2  german 270\n271    2    2    2    3 11.543191   1   2  german 271\n272    3    2    3    2  9.905296   0   2  german 272\n273    3    3    2    2 10.804370   0   2  german 273\n274    3    3    1    1  9.135004   1   2  german 274\n275    3   NA    2    2  9.937281   1   2  german 275\n276    2    2    4    4  8.449205  NA   2  german 276\n277    4    4    2    2 10.110370   1   2  german 277\n278    2    3    3    3  8.910521   1   2  german 278\n279    3    3    2    2 11.335096   0   2  german 279\n280    2    3    3    3 10.872968   1   2  german 280\n281    3    3    2    2  9.550622   0   2  german 281\n283    1   NA    3    4 12.176753   0   2  german 283\n284    2    2    2    2  9.628909   0   2  german 284\n285    2    2    3    3 13.948810   0   2  german 285\n286    2   NA    3    3 12.154323   1   2  german 286\n287    3    2    2    2  9.487855   1   2  german 287\n288    3    3    3    2 10.250928   0   2  german 288\n289    3    2    3    3 10.038493   0   2  german 289\n290    3    2    2    2  9.110477  NA   2  german 290\n291    3    3    2    3 11.294503   1   2  german 291\n292    2    2    3    3 12.974758   0   2  german 292\n293    3    3    2    2 10.285506   0   2  german 293\n294    3    2    3    3 10.156128   1   2  german 294\n295    3    4    3    3 10.477511   0   2  german 295\n296    2    2    3    4 11.463436   0   2  german 296\n297    2    3    2    2 10.958489   0   2  german 297\n298    3    2    2    2  8.164545   0   2  german 298\n299    2    3    3    3 10.140617   0   2  german 299\n300    3   NA    2    2  9.653269   1   2  german 300\n302    2    3    2    3  9.384978   1   3  german 302\n303    2    2    3    3  7.993749   1   3  german 303\n304    2    3    3    3  6.955896   1   3  german 304\n305    4    3    2    2 10.535078   0   3  german 305\n307    2    2    2    2  9.815517  NA   3  german 307\n308    4    4    1    1 10.504347   1   3  german 308\n309    2    3    2    2  9.939982   0   3  german 309\n310    3    3    3    3 10.389400   1   3  german 310\n311    2    2    3    3  9.448678   1   3  german 311\n312    2    4    1    2 10.221263   1   3  german 312\n313    2   NA    2    2  7.693476   0   3  german 313\n314    3    3    2    1 11.177018   1   3  german 314\n315    2    2    3    2  9.339305   0   3  german 315\n316    3    2    2    2  6.542470   1   3  german 316\n317    4    3    1    2  8.953333   1   3  german 317\n319    2    1    3    3  7.581036   0   3  german 319\n320    3    3    2    1  9.966598  NA   3  german 320\n321    3    2    3    3 10.881096   1   3  german 321\n322    2    2    4    3  9.503126   1   3  german 322\n323    3    3    2    2 10.542913   1   3  german 323\n324    2    1    4    3  7.226064   1   3  german 324\n326    3    3    1    2 10.473550   1   3  german 326\n328    3    3    2    2 10.490264   0   3  german 328\n329    3    3    2    1 11.740022   1   3  german 329\n330    3    3    2    2 11.473238   0   3  german 330\n331    3    3    2    3 12.689666  NA   3  german 331\n333    3    3    2    2  7.619042   0   3  german 333\n334    3    2    2    2  9.525225   1   3  german 334\n335    3    2    2    2  9.301695   1   3  german 335\n336    1    1    4    4 10.235494   1   3  german 336\n338    3    2    3    3 10.078303   0   3  german 338\n340    2    3    2    2  9.613427   0   3  german 340\n341    2    3    2    2 10.440469   1   3  german 341\n343    2    2    3    3  9.632019   0   3  german 343\n344    3   NA    2    1 11.285079   0   3  german 344\n345    3    4    2    2 12.780121  NA   3  german 345\n346    3    3    2    3 10.358045   0   3  german 346\n347    3    3    2    3  9.452587   0   3  german 347\n348    2    2    3    3 10.616298   0   3  german 348\n349    2    2    3    4 10.531881   1   3  german 349\n350    3    2    3    3 10.917065   0   3  german 350\n351    3    4    2    2  6.753558   1   3  german 351\n352    3    3    1    1  9.081102   1   3  german 352\n353    2    2    3    3  9.324282   0   3  german 353\n354    3    4    2    2  9.556236   1   3  german 354\n355    3    3    2    3  8.404846   1   3  german 355\n356    3    3    2    2  9.835171   1   3  german 356\n358    3    3    2    2  9.347660   1   3  german 358\n359    2   NA    3    3  7.015727   0   3  german 359\n360    3    3    2    2  8.146446   0   3  german 360\n361    3    3    1    2  7.774709   1   3  german 361\n362    3    3    2    2  6.083013   1   3  german 362\n363    2    3    3    3  8.618334   1   3  german 363\n364    2   NA    3    2 10.029465   0   3  german 364\n365    3   NA    2    1 10.539754   1   3  german 365\n366    2    3    3    3 11.498595   0   3  german 366\n368    3    4    2    2 11.885905   0   3  german 368\n369    2    1    3    3 10.151313   0   3  german 369\n370    2    3    2    3  8.703436   1   3  german 370\n371    1    2    3    4 11.715882   1   3  german 371\n372    2    2    3    3 10.497316  NA   3  german 372\n373    2    2    3    2  9.260014   0   3  german 373\n374    2    1    4    4 12.764876   0   3  german 374\n375    2    3    3    3 11.855908   0   3  german 375\n376    2    2    3    3 11.346669   1   3  german 376\n377    2    3    3    2 10.437059   0   3  german 377\n379    3   NA    2    2  8.338840   1   3  german 379\n380    3    2    2    3 11.449698   0   3  german 380\n382    2   NA    2    2 10.331462   0   3  german 382\n383    3    3    2    1 10.240093   1   3  german 383\n384    3    3    3    3 12.629684   0   3  german 384\n385    3    3    2    2 10.858224   0   3  german 385\n387    2    3    3    3 11.439490  NA   3  german 387\n388    3    3    2    2  8.881271   1   3  german 388\n389    3   NA    3    3 10.293081   1   3  german 389\n390    3    3    3    3 10.192251   0   3  german 390\n391    3    3    1    2 11.065900   0   3  german 391\n392    3    3    2    2 10.998406   1   3  german 392\n393    2    2    3    2  8.552346   1   3  german 393\n394    4    3    1    2  9.412805   0   3  german 394\n395    2    2    3    3  9.894383  NA   3  german 395\n398    3    2    3    3  9.242431   1   3  german 398\n399    2    2    3    3 10.957836  NA   3  german 399\n400    3    3    3    3 10.084902   1   3  german 400\n401    3    2    2    2 10.097882   0   3  german 401\n402    3    3    1    1 11.672478   0   3  german 402\n403    3    4    2    1 13.353267   0   3  german 403\n404    1    2    4    4 10.107733   0   3  german 404\n405    2    3    3    3 10.847647   0   3  german 405\n406    3    3    1    1  8.989002   1   3  german 406\n407    4    3    2    2  9.767775   0   3  german 407\n408    3    3    3    2  8.104969   1   3  german 408\n409    3    3    2    2 11.940227   0   3  german 409\n410    2    1    4    3  8.396467   1   3  german 410\n411    2   NA    2    3  9.219042   0   3  german 411\n412    2    2    2    3  9.927729   1   3  german 412\n413    3    3    2    2  9.120070   0   3  german 413\n414    3    2    2    2  9.359507   1   3  german 414\n415    3    2    3    3  7.340234   0   3  german 415\n416    3    3    2    2  8.565667   1   3  german 416\n417    3    2    2    3 11.829203   1   3  german 417\n418    2    2    2    2  9.444976   1   3  german 418\n419    1    1    4    4  8.163760   1   3  german 419\n420    1    2    2    3  7.971904   0   3  german 420\n422    2    2    3    2 10.435981   1   3  german 422\n423    1    2    3    3 11.167197   0   3  german 423\n424    4    3    2    2  9.076633   0   3  german 424\n425    3    3    2    2  9.734855   0   3  german 425\n426    3    3    1    1  9.520808   0   3  german 426\n427    2    2    2    2  8.750194   0   3  german 427\n428    2    2    3    3 10.203757   1   3  german 428\n429    3    3    2    2  8.855370   0   3  german 429\n430    3    2    3    2 13.023492   1   3  german 430\n433    2    2    3    4  8.328651   1   3  german 433\n434    3    2    3    2  9.358613   0   3  german 434\n435    4    3    2    2 11.184436   0   3  german 435\n436    2    2    4    3 10.608993  NA   3  german 436\n437    2   NA    3    3 12.301002   0   3  german 437\n439    4    4    1    1  9.609236   0   3  german 439\n440    2    3    2    2  9.303808   0   3  german 440\n441    3    3    2    2 10.739005   0   3  german 441\n443    2    3    3    3 10.028578   1   3  german 443\n444    4    4    2    2 10.703093   1   3  german 444\n446    3    2    3    3 10.775893   1   3  german 446\n447    2    2    3    3 10.714497   0   3  german 447\n448    3    2    2    2  9.476227   0   3  german 448\n449    4   NA    1    1  7.254288   1   3  german 449\n450    2    2    3    2  5.788306  NA   3  german 450\n451    3    3    2    2  9.860913   0   3  german 451\n452    3    4    1    2  9.406198   1   3  german 452\n453    3    3    2    2  7.358570   0   3  german 453\n454    3    4    2    2  9.143064   1   3  german 454\n455    3    4    2    2 11.833885   0   3  german 455\n456    2    2    4    3 10.510292   1   3  german 456\n457    4    3    2    2 11.219608   1   3  german 457\n458    2    2    3    3 13.257474   0   3  german 458\n459    2    2    3    4  7.569693   0   3  german 459\n460    2    2    4    3 11.684286   1   3  german 460\n461    1    2    4    4 10.056906  NA   3  german 461\n462    2    2    3    3  9.203611   1   3  german 462\n463    2    2    3    3 11.462454   1   3  german 463\n464    3    2    3    3  8.608740   1   3  german 464\n465    3    3    3    2  8.550825   0   3  german 465\n467    2   NA    3    3  9.467938   1   3  german 467\n468    3    3    2    2  9.638242   0   3  german 468\n469    4    3    2    2 11.559736   0   3  german 469\n470    2    3    2    2  9.289579   1   3  german 470\n471    2    2    4    3 10.660731   0   3  german 471\n472    1    2    4    4  8.653708   1   3  german 472\n473    3   NA    2    3 11.267748   0   3  german 473\n474    3   NA    2    2  6.386290   0   3  german 474\n475    2    2    2    2 10.394297   0   3  german 475\n477    2    1    3    3 11.588138   1   3  german 477\n478    3    2    3    3  9.701818   1   3  german 478\n479    2    2    3    3 10.131820   0   3  german 479\n480    3    2    2    3 11.851048   0   3  german 480\n481    2    2    3    3  8.094906   0   3  german 481\n482    2    3    2    3  6.522122   0   3  german 482\n483    2   NA    4    4  9.492688   1   3  german 483\n484    3    2    2    2  7.171610   1   3  german 484\n485    4    3    1    2 10.449040   1   3  german 485\n486    3    3    2    2  8.565564   1   3  german 486\n487    2    3    2    3  9.692163   0   3  german 487\n488    2    3    3    2 10.544790   0   3  german 488\n489    1    1    4    4  9.152848   1   3  german 489\n490    3   NA    2    3 11.417658   0   3  german 490\n491    2   NA    3    3 10.335521   1   3  german 491\n492    3    4    2    2 12.157326   1   3  german 492\n493    2    2    4    3  8.071642   1   3  german 493\n496    2    2    2    2  9.657121   1   3  german 496\n497    2    2    3    3  8.421820   1   3  german 497\n498    2    2    3    2 11.234864   0   3  german 498\n499    3    3    3    2 11.684493   1   3  german 499\n500    2   NA    3    3 10.551730   1   3  german 500\n501    3    2    3    3  9.518572   0   4  german 501\n503    3    2    2    2  9.394796   1   4  german 503\n504    3    2    2    2 10.871842   0   4  german 504\n505    3    3    1    1 11.807168   1   4  german 505\n507    2    3    3    3 11.295793   0   4  german 507\n508    3    2    3    3  9.704389   1   4  german 508\n509    3    3    2    1 12.982000   1   4  german 509\n510    3    2    2    3  8.051677   0   4  german 510\n511    2    3    3    3 10.134297   1   4  german 511\n512    2    3    2    2 10.915921   0   4  german 512\n513    4    3    2    3  9.464469  NA   4  german 513\n514    3    2    3    3  9.377179   1   4  german 514\n515    2   NA    3    3  6.628830   0   4  german 515\n516    2    2    3    3  9.799799   0   4  german 516\n517    2    2    3    3  9.352013   0   4  german 517\n518    3    2    3    3  7.578805   0   4  german 518\n519    2    3    3    2  8.955748   0   4  german 519\n520    3    3    1    2  7.345759   1   4  german 520\n521    2    3    3    2  9.038828   0   4  german 521\n522    3    2    3    3  6.462564   0   4  german 522\n523    3    3    2    2  8.710578   0   4  german 523\n524    2    2    3    3  8.078165   1   4  german 524\n525    3    3    3    3  9.308461   0   4  german 525\n526    2    3    3    2  9.621561   0   4  german 526\n527    2    3    2    2 10.468559   1   4  german 527\n528    2    2    4    3 12.527006   0   4  german 528\n529    1    1    4    4  9.713401   0   4  german 529\n530    2    3    2    3 12.449355   1   4  german 530\n531    4    3    1    2 10.171527   1   4  german 531\n532    2    2    4    3 11.592511   1   4  german 532\n533    2    2    3    3  9.746639   0   4  german 533\n534    2    2    2    3 11.539024   0   4  german 534\n535    3    4    1    1 12.662389   1   4  german 535\n536    3    3    2    2  8.558018   1   4  german 536\n537    3    4    1    2 12.490442   0   4  german 537\n538    3    4    2    2  8.849825   1   4  german 538\n540    2    2    2    3  9.856794   1   4  german 540\n542    2    3    2    3 10.455994   0   4  german 542\n543    3    3    1    2  8.953355   0   4  german 543\n544    3    3    2    2 10.233466   1   4  german 544\n545    2   NA    3    2 11.345757   0   4  german 545\n546    3    3    2    1 11.511366   0   4  german 546\n547    3    3    2    2  7.030045   0   4  german 547\n548    2    1    4    4 11.833564   0   4  german 548\n549    2   NA    4    3 10.347853   0   4  german 549\n550    2    3    2    2 10.669845   1   4  german 550\n551    3    3    3    2 11.945497   0   4  german 551\n552    3    3    1    1  7.631776   0   4  german 552\n553    2    2    3    3  7.929047   0   4  german 553\n554    2    3    2    2 10.655136   1   4  german 554\n555    4    4    1    1 11.651111   1   4  german 555\n556    3    3    2    2  9.499631   0   4  german 556\n557    2    3    2    3  9.869376   1   4  german 557\n558    3    3    1    2 10.573739   0   4  german 558\n559    2    2    3    4  6.777733   0   4  german 559\n560    3    3    2    1 10.292540   0   4  german 560\n561    3    2    3    2  8.420615   0   4  german 561\n564    3   NA    2    2 11.011815  NA   4  german 564\n565    3    3    2    2  9.567283   1   4  german 565\n566    3    2    2    2  9.700664   1   4  german 566\n567    2    2    4    3  9.035493   1   4  german 567\n568    2    2    3    3  6.920118   0   4  german 568\n569    3   NA    2    2 12.785713   0   4  german 569\n571    4    4    1    1 11.561428   0   4  german 571\n572    3    2    2    2 10.479614   1   4  german 572\n573    3    2    2    3 12.062231   0   4  german 573\n574    3    3    3    2 11.258923   1   4  german 574\n575    2    2    3    3  8.535113   1   4  german 575\n576    3    2    2    2 12.190370  NA   4  german 576\n577    3    3    2    2  9.513192   0   4  german 577\n581    1    2    3    3  7.840196   1   4  german 581\n583    2    3    3    3 11.716523   1   4  german 583\n584    2    2    3    3 10.115714   0   4  german 584\n585    2    1    2    3 10.487666   1   4  german 585\n586    3    3    2    2 10.129045   1   4  german 586\n587    4    3    2    2 10.213173   0   4  german 587\n588    1    1    3    3 12.114688   1   4  german 588\n589    2    2    3    3 11.655211   0   4  german 589\n590    1    2    4    4 10.474828   1   4  german 590\n591    2    3    3    2  9.222274   0   4  german 591\n592    3    3    3    3 10.053230   0   4  german 592\n593    2    1    3    3  8.360811  NA   4  german 593\n595    3    3    3    2 10.611019   0   4  german 595\n596    3    3    2    3 11.952722  NA   4  german 596\n598    2    3    3    3 12.403272   0   4  german 598\n600    4    3    1    1 30.000000   0   4  german 600\n601    3    4    2    2  9.675024  NA   4  german 601\n602    3    2    3    3  9.797451   0   4  german 602\n604    2    3    3    3  5.697734   1   4  german 604\n605    4    3    3    2 11.315240   0   4  german 605\n606    3    3    2    2  9.398728   0   4  german 606\n608    3    4    2    1  7.712797   0   4  german 608\n609    4    3    2    2 11.397924   1   4  german 609\n610    2   NA    3    3 10.497554   1   4  german 610\n611    2   NA    2    2  9.537385   0   4  german 611\n612    2    1    4    3  8.434417   1   4  german 612\n613    2    2    3    3  9.741397   1   4  german 613\n615    2   NA    2    2 10.524864   1   4  german 615\n616    3    3    2    2  8.498451   0   4  german 616\n617    1    2    3    3 10.447842   0   4  german 617\n618    3    3    3    3  6.916193   0   4  german 618\n619    3    2    3    3  7.967729   0   4  german 619\n620    2    2    3    3 10.971877   0   4  german 620\n621    1    2    3    3 10.036674   1   4  german 621\n622    4    4    1    2 11.171656   0   4  german 622\n623    2    2    3    3  9.809559   1   4  german 623\n624    3    2    2    2  8.970928   0   4  german 624\n625    2    2    4    4 10.715082   0   4  german 625\n626    3    3    3    2  7.928970   1   4  german 626\n627    2    3    3    3  6.909529   1   4  german 627\n628    2    3    3    2 10.799244   0   4  german 628\n629    3   NA    2    2  6.011167   0   4  german 629\n630    2    2    2    1 12.505498   0   4  german 630\n631    4    4    1    1  9.779263   1   4  german 631\n632    3    3    2    3  9.474470   0   4  german 632\n633    2    2    3    3 12.139497   0   4  german 633\n634    3    3    3    2 11.067315   0   4  german 634\n635    3    4    2    3  8.320202   0   4  german 635\n636    3    2    2    2  7.182648   1   4  german 636\n637    2    2    4    4 10.130177   0   4  german 637\n638    3    3    3    3 12.496180   0   4  german 638\n639    2    2    3    3 12.592766   0   4  german 639\n640    2    2    2    3  9.907003   0   4  german 640\n641    3    2    3    3 11.737818   1   4  german 641\n642    3    2    2    1  8.821091   0   4  german 642\n643    2    3    3    2  6.860783   0   4  german 643\n644    3    2    3    3 10.268927   1   4  german 644\n645    3    3    2    2 10.266885   1   4  german 645\n646    3    3    2    2  5.763412   0   4  german 646\n647    3    2    2    2  7.066767   1   4  german 647\n648    3    3    3    2  9.180560   0   4  german 648\n649    3    3    2    2 12.972046   1   4  german 649\n650    1   NA    2    3  8.906204   1   4  german 650\n651    3    3    2    2 11.411023   1   4     ger 651\n652    2    2    2    3 10.049973   0   4     ger 652\n653    2    2    3    2 11.337266   0   4     ger 653\n654    3    3    3    3 13.679508   0   4     ger 654\n655    2    3    3    3  8.168574   1   4     ger 655\n656    3    3    2    2 12.273152  NA   4     ger 656\n657    2    3    3    3  9.269406   0   4     ger 657\n659    3    3    2    2  8.932260   1   4     ger 659\n660    3    3    1    2  7.922082   0   4     ger 660\n661    2    2    3    3 11.825439   0   4     ger 661\n663    2    1    3    3 13.418967   0   4     ger 663\n664    3    2    3    3 12.795091   0   4     ger 664\n665    2    3    3    3  9.076854   0   4     ger 665\n666    2    2    2    2  9.791845   1   4     ger 666\n667    2    3    2    2  7.201118   0   4     ger 667\n669    3    3    3    3 11.357964   1   4     ger 669\n670    3    3    2    2 10.881354   0   4     ger 670\n671    2    1    3    3 10.379563   0   4     ger 671\n673    3   NA    2    2  9.222115  NA   4     ger 673\n674    3    3    3    2  8.146615   1   4     ger 674\n675    2    3    2    2  9.175585   0   4     ger 675\n676    2    2    4    4 12.131668   1   4     ger 676\n677    2   NA    2    2 10.870383   0   4     ger 677\n678    1    2    3    3 11.473233   1   4     ger 678\n679    3    3    2    3  9.506655   1   4     ger 679\n680    2    3    2    2 10.030170   0   4     ger 680\n681    3   NA    2    2 10.886894  NA   4     ger 681\n682    1    1    3    4 10.668823   0   4     ger 682\n683    2    3    3    3  9.386863   1   4     ger 683\n684    2    2    3    3  7.093356   1   4     ger 684\n685    2    2    3    3 12.640182   1   4     ger 685\n686    1    2    3    3  8.807493   1   4     ger 686\n687    3    3    3    3 14.291764   0   4     ger 687\n689    3    3    2    3  5.439760   0   4     ger 689\n691    2    2    3    3  8.718412   1   4     ger 691\n692    3    3    2    2  8.041810   1   4     ger 692\n694    3    2    3    3 10.982985   1   4     ger 694\n695    1    2    2    3 10.007353   0   4     ger 695\n696    3    2    2    2  8.467930   0   4     ger 696\n697    4    4    1    2 10.328330  NA   4     ger 697\n698    2    2    3    3 10.826550   1   4     ger 698\n699    3    2    2    2  9.543067   1   4     ger 699\n700    3    3    1    2 10.025428   1   4   germn 700\n701    2    3    3    3 10.668717   1   4 italian 701\n702    3    3    3    3 10.518729   1   4 italian 702\n703    3    3    2    2 10.808743   1   4 italian 703\n704    2    2    2    2  7.725368   1   4 italian 704\n705    3    3    2    3 10.498354   1   4 italian 705\n707    3    4    2    2 11.808316   1   4 italian 707\n708    2    2    4    4  9.354355   0   4 italian 708\n709    1    1    4    4  6.893923   0   4 italian 709\n710    2    3    2    3 10.715373   1   4 italian 710\n712    2    3    2    3 10.579138   1   4  french 712\n713    3    2    3    3  7.743470   1   4  french 713\n715    3    3    1    2 11.443266   1   4  french 715\n716    3    2    3    3 10.739886   0   4  french 716\n717    3    2    3    3  9.666964  NA   4  french 717\n719    4    3    2    2  9.963483   1   4  french 719\n720    3    3    3    3 12.146356   0   4  french 720\n722    1    1    4    4 12.437140   0   4    &lt;NA&gt; 722\n723    3    3    2    2  9.361663   0   4    &lt;NA&gt; 723\n725    4    3    2    2 10.954406   0   4    &lt;NA&gt; 725\n726    2    3    3    3  8.813882   1   4    &lt;NA&gt; 726\n727    2    2    3    3  8.399134   1   4    &lt;NA&gt; 727\n729    3   NA    2    2 10.716499   1   4    &lt;NA&gt; 729\n731    2   NA    3    3  9.827114   0   4    &lt;NA&gt; 731\n732    3    3    2    2 10.646740   1   4    &lt;NA&gt; 732\n733    2    4    2    1 10.350377   0   4    &lt;NA&gt; 733\n734    3    3    2    2 10.019486   1   4    &lt;NA&gt; 734\n735    3    2    2    2  9.739026   1   4    &lt;NA&gt; 735\n736    2    3    3    4  8.826410   0   4    &lt;NA&gt; 736\n737    2    2    3    3  8.191695   1   4    &lt;NA&gt; 737\n738    2    2    3    3  9.700108   0   4    &lt;NA&gt; 738\n739    2    2    3    3  8.267847   0   4    &lt;NA&gt; 739\n740    3    4    2    2  8.238960   1   4    &lt;NA&gt; 740\n741    3    4    2    3  8.657699   1   4         741\n742    2    2    3    3 12.724873   1   4         742\n743    1    1    3    3  9.056560   1   4         743\n744    2    1    3    3 10.776392   1   4         744\n745    3    2    2    3 11.332372   0   4         745\n746    3    3    2    2  9.605044   0   4         746\n747    3    3    2    2 12.553403   0   4         747\n748    3    3    3    2  8.607291   1   4         748\n750    3    3    3    2 12.253184   1   4         750\n\n\nFor the whole data set:\nThe na.omit function returns the object with incomplete cases removed.\n\nexDatnoNA &lt;- na.omit(exDat)\nexDatnoNA\n\n    msc1 msc2 msc3 msc4       age sex edu   fLang  id\n1      2    3    2    2  9.815538   0   0  german   1\n2      3    2    1    1  8.980194   1   0  german   2\n3      2    2    3    3 12.758157   0   0  german   3\n4      2    2    3    2 10.578846   0   0  german   4\n5      3    2    2    2  9.894364   1   0  german   5\n6      3    3    3    2 10.446850   0   0  german   6\n7      4    4    1    2 10.897605   1   0  german   7\n8      3    3    2    1  7.977382   1   0  german   8\n10     3    3    2    2  9.105864   0   0  german  10\n11     2    1    3    3  8.540117   0   0  german  11\n12     2    2    3    3 11.841954   0   0  german  12\n13     2    2    3    4 11.647655   0   0  german  13\n14     2    3    3    3 11.745306   0   0  german  14\n15     2    3    3    3  9.970630   0   0  german  15\n17     2    2    2    2  7.773473   1   0  german  17\n19     2    2    3    3  9.339448   0   0  german  19\n21     4    3    2    2  9.831947   0   0  german  21\n22     2    3    3    3  9.890266   1   0  german  22\n23     2    3    2    2 11.501609   0   0  german  23\n25     3    3    2    2 11.540030   1   0  german  25\n26     2    3    3    3 10.098491   1   0  german  26\n27     4    3    2    2 10.851320   1   0  german  27\n28     3    2    2    2  6.735228   1   0  german  28\n29     3    4    2    2 10.690059   1   0  german  29\n30     3    2    2    3  9.746659   1   0  german  30\n31     2    1    4    4  8.983450   0   0  german  31\n33     2    2    3    2  8.057455   1   0  german  33\n34     2    2    3    3 10.134752   0   0  german  34\n35     2    3    3    2  8.096160   0   0  german  35\n37     3    3    3    3 12.156118   0   0  german  37\n38     2    2    3    2  9.600157   0   0  german  38\n39     2    3    3    3 11.591400   0   0  german  39\n40     3    4    2    2 10.691193   1   0  german  40\n41     3    3    3    2 12.622380   0   0  german  41\n42     3    2    2    2 10.043774   1   0  german  42\n43     4    3    2    2  8.452508   0   0  german  43\n44     4    3    2    2 12.029754   1   0  german  44\n45     3    2    3    3  8.213722   1   0  german  45\n46     2    3    2    3 11.654911   0   0  german  46\n47     4    3    1    1  9.086209   1   0  german  47\n49     2    3    3    3  9.617718   0   0  german  49\n50     2    3    2    2 10.347768   1   0  german  50\n51     2    1    3    3 10.735626   0   1  german  51\n52     3    3    3    2 10.903281   1   1  german  52\n54     2    3    4    3 10.824752   0   1  german  54\n55     3    3    3    3  9.282584   0   1  german  55\n57     2    3    3    3  8.747505   1   1  german  57\n58     2    2    3    4  8.992998   1   1  german  58\n59     2    2    3    3 12.632563   1   1  german  59\n60     2    2    3    3 11.015445   1   1  german  60\n61     3    3    2    2  9.529734   1   1  german  61\n62     4    3    1    1 11.569437   1   1  german  62\n63     4    3    2    2 11.626011   1   1  german  63\n65     2    2    2    3  8.712209   1   1  german  65\n66     1    2    3    2 12.271368   0   1  german  66\n67     3    3    2    2 11.514336   1   1  german  67\n69     2    2    2    2 10.858827   1   1  german  69\n70     2    2    3    4 11.416986   0   1  german  70\n72     2    3    3    3  9.417725   1   1  german  72\n73     4    3    1    2 10.788379   1   1  german  73\n74     2    3    2    2  7.527881   1   1  german  74\n75     2    2    3    3  7.697320   0   1  german  75\n76     3    4    3    2  9.723288   1   1  german  76\n78     3    3    3    3  9.552697   1   1  german  78\n79     3    3    3    3 10.766935   1   1  german  79\n81     2    3    2    2 10.027268   0   1  german  81\n82     4    3    2    2 11.108152   1   1  german  82\n83     3    3    2    2  9.364853   1   1  german  83\n85     4    3    1    1  8.791437   0   1  german  85\n86     2    2    3    3 14.699514   1   1  german  86\n87     1    2    4    3  9.310963   0   1  german  87\n89     3    4    1    2  9.164070   0   1  german  89\n90     3    2    3    2  9.904690   0   1  german  90\n91     1    2    3    3  9.949049   0   1  german  91\n92     1    2    3    2 10.874213   0   1  german  92\n93     2    3    3    3  9.589440   0   1  german  93\n94     2    2    3    3  8.396720   0   1  german  94\n95     1    2    3    3  8.633062   1   1  german  95\n96     3    4    2    2 10.174559   1   1  german  96\n98     4    3    2    2  6.022669   1   1  german  98\n99     3    3    2    2 10.701638   1   1  german  99\n101    2    3    3    3 11.536565   0   1  german 101\n103    2    2    3    3  7.082311   1   1  german 103\n104    3    3    2    3  7.990254   1   1  german 104\n105    2    2    3    3 13.223930   1   1  german 105\n106    2    3    2    3  8.847114   0   1  german 106\n109    2    2    3    2  8.917741   1   1  german 109\n110    2    2    3    4  9.059646   0   1  german 110\n115    2    2    3    3  8.336241   0   1  german 115\n116    3    3    2    2 12.158201   1   1  german 116\n118    2    2    4    3 11.067872   1   1  german 118\n120    3    2    3    2  9.562434   0   1  german 120\n121    3    3    3    2  8.977396   0   1  german 121\n122    3    2    3    2 10.162202   0   1  german 122\n123    3    3    3    2  9.885336   0   1  german 123\n124    3    2    3    3 12.560990   1   1  german 124\n125    2    2    4    4 11.087431   1   1  german 125\n126    3    3    4    3 10.371456   1   1  german 126\n127    3    4    1    2  9.319275   1   1  german 127\n128    2    2    2    3 11.008828   1   1  german 128\n129    1    2    3    2  9.656535   0   1  german 129\n130    1    2    3    4 10.032404   0   1  german 130\n131    2    2    3    3  6.974716   1   1  german 131\n132    3    2    2    3  9.168019   1   1  german 132\n133    2    1    3    4 10.658201   1   1  german 133\n134    3    2    2    2 10.723573   1   1  german 134\n135    1    2    4    3  9.564175   1   1  german 135\n136    2    3    3    2  9.440463   1   1  german 136\n137    1    2    3    4  8.574188   1   1  german 137\n138    2    2    3    3  8.336412   0   1  german 138\n139    3    2    2    2 11.316498   0   1  german 139\n140    4    3    2    2 10.089194   1   1  german 140\n141    3    3    2    2 11.326115   0   1  german 141\n142    2    3    2    2 10.544879   1   1  german 142\n143    4    3    2    2  8.278763   0   1  german 143\n144    3    3    2    2  9.165442   0   1  german 144\n145    3    4    2    2 14.840083   0   1  german 145\n146    4    4    1    1  9.177470   0   1  german 146\n147    2    3    1    1 10.392509   1   1  german 147\n148    3    3    2    3 10.074265   1   1  german 148\n151    2    2    3    3 11.303224   0   2  german 151\n152    3    3    2    2  8.301101   0   2  german 152\n153    3    4    2    2 11.552966   1   2  german 153\n154    3    3    2    2 10.420355   1   2  german 154\n155    3    4    2    2 12.648300   1   2  german 155\n156    2    2    3    2  9.985757   1   2  german 156\n157    2    3    2    2 10.504636   0   2  german 157\n159    2    2    3    3  9.576623   0   2  german 159\n160    3    3    2    2 12.855773   1   2  german 160\n161    2    1    3    4 10.131071   0   2  german 161\n162    2    3    3    3 11.018442   1   2  german 162\n163    3    3    2    2 10.910317   1   2  german 163\n165    3    2    3    3 10.402108   1   2  german 165\n166    2    2    3    2 11.020302   0   2  german 166\n167    2    2    3    3 10.862003   1   2  german 167\n171    3    3    2    1 11.156488   1   2  german 171\n172    1    2    3    3 11.774043   0   2  german 172\n173    3    2    3    2  9.014673   0   2  german 173\n174    4    4    1    1  9.755259   1   2  german 174\n175    3    3    3    3  7.710862   0   2  german 175\n176    1    1    4    4 11.418964   1   2  german 176\n177    1    2    4    3 10.702477   0   2  german 177\n178    3    2    3    2 11.237905   1   2  german 178\n179    3    1    2    2  9.225546   0   2  german 179\n180    3    3    2    2  9.673228   0   2  german 180\n181    2    3    2    2  9.358897   0   2  german 181\n182    3    2    3    3  9.252146   1   2  german 182\n183    2    2    3    3  8.616693   0   2  german 183\n184    3    4    2    2 10.721936   0   2  german 184\n185    3    3    2    2 11.054393   0   2  german 185\n186    1    1    4    4  8.094315   1   2  german 186\n187    3    3    1    2  9.231779   0   2  german 187\n188    3    3    2    2  8.547865   1   2  german 188\n189    3    3    3    3 10.345779   0   2  german 189\n191    2    2    3    4 10.411992   0   2  german 191\n192    3    3    2    3  8.971620   1   2  german 192\n193    1    2    4    4 10.898386   0   2  german 193\n194    2    2    3    3 10.625394   1   2  german 194\n195    2    2    3    4  6.357136   0   2  german 195\n196    1    2    3    3 12.102026   1   2  german 196\n198    2    3    3    3  6.586317   1   2  german 198\n199    3    3    3    2  9.050529   1   2  german 199\n200    2    2    3    3 12.723541   1   2  german 200\n202    2    2    2    2 13.303115   1   2  german 202\n204    3    3    2    2 11.445677   0   2  german 204\n205    2    2    2    2  9.306572   0   2  german 205\n206    3    1    3    3  8.328087   0   2  german 206\n207    3    4    1    2 10.359319   0   2  german 207\n209    2    2    3    2  9.748836   1   2  german 209\n210    2    2    3    3 11.357677   0   2  german 210\n211    3    3    2    2  9.790493   1   2  german 211\n212    3    3    3    3  8.325024   0   2  german 212\n213    2    2    2    2  9.281008   1   2  german 213\n214    3    2    2    2 13.164568   0   2  german 214\n215    2    2    2    2  7.828867   0   2  german 215\n216    3    3    3    3 10.665805   0   2  german 216\n217    2    1    3    3 10.635206   1   2  german 217\n219    2    2    2    3  8.923574   0   2  german 219\n223    3    3    3    2 10.397873   1   2  german 223\n224    4    3    2    2 10.241358   1   2  german 224\n225    3    3    2    1  9.874614   1   2  german 225\n226    2    3    2    2  9.251216   0   2  german 226\n227    3    2    2    2 11.927287   0   2  german 227\n228    4    4    2    2 10.327432   0   2  german 228\n229    3    2    3    2  6.475004   0   2  german 229\n230    2    3    3    3 11.338842   0   2  german 230\n232    3    3    2    2  7.933710   0   2  german 232\n233    2    3    3    3 10.721250   1   2  german 233\n234    3    2    3    3  8.086553   0   2  german 234\n237    2    2    2    3 11.260712   0   2  german 237\n240    2    3    2    3  9.606693   1   2  german 240\n241    2    2    2    2  9.965807   1   2  german 241\n243    2    2    2    2 11.588374   1   2  german 243\n244    2    1    3    3 12.054486   0   2  german 244\n245    2    1    3    2  8.551229   1   2  german 245\n246    1    1    4    4 14.758472   1   2  german 246\n247    3    3    2    1 10.601619   1   2  german 247\n248    2    3    2    3  9.608768   1   2  german 248\n249    2    2    3    4 10.631563   0   2  german 249\n250    3    4    1    1  9.195155   0   2  german 250\n251    3    2    3    3 12.153778   1   2  german 251\n252    2    1    4    4 11.594112   1   2  german 252\n253    3    3    2    2 12.749052   0   2  german 253\n254    2    1    3    3 10.904641   1   2  german 254\n256    3    3    1    1  9.382583   1   2  german 256\n257    2    2    4    3 10.075463   1   2  german 257\n260    3    3    2    2 10.003249   0   2  german 260\n261    2    2    3    3 10.357645   0   2  german 261\n262    1    2    3    3 11.427154   0   2  german 262\n263    1    2    4    3 11.141758   1   2  german 263\n264    2    2    3    3 11.717822   0   2  german 264\n265    3    3    2    1  8.591719   1   2  german 265\n266    4    3    2    2  7.199316   1   2  german 266\n270    3    2    1    1  9.901684   1   2  german 270\n271    2    2    2    3 11.543191   1   2  german 271\n272    3    2    3    2  9.905296   0   2  german 272\n273    3    3    2    2 10.804370   0   2  german 273\n274    3    3    1    1  9.135004   1   2  german 274\n277    4    4    2    2 10.110370   1   2  german 277\n278    2    3    3    3  8.910521   1   2  german 278\n279    3    3    2    2 11.335096   0   2  german 279\n280    2    3    3    3 10.872968   1   2  german 280\n281    3    3    2    2  9.550622   0   2  german 281\n284    2    2    2    2  9.628909   0   2  german 284\n285    2    2    3    3 13.948810   0   2  german 285\n287    3    2    2    2  9.487855   1   2  german 287\n288    3    3    3    2 10.250928   0   2  german 288\n289    3    2    3    3 10.038493   0   2  german 289\n291    3    3    2    3 11.294503   1   2  german 291\n292    2    2    3    3 12.974758   0   2  german 292\n293    3    3    2    2 10.285506   0   2  german 293\n294    3    2    3    3 10.156128   1   2  german 294\n295    3    4    3    3 10.477511   0   2  german 295\n296    2    2    3    4 11.463436   0   2  german 296\n297    2    3    2    2 10.958489   0   2  german 297\n298    3    2    2    2  8.164545   0   2  german 298\n299    2    3    3    3 10.140617   0   2  german 299\n302    2    3    2    3  9.384978   1   3  german 302\n303    2    2    3    3  7.993749   1   3  german 303\n304    2    3    3    3  6.955896   1   3  german 304\n305    4    3    2    2 10.535078   0   3  german 305\n308    4    4    1    1 10.504347   1   3  german 308\n309    2    3    2    2  9.939982   0   3  german 309\n310    3    3    3    3 10.389400   1   3  german 310\n311    2    2    3    3  9.448678   1   3  german 311\n312    2    4    1    2 10.221263   1   3  german 312\n314    3    3    2    1 11.177018   1   3  german 314\n315    2    2    3    2  9.339305   0   3  german 315\n316    3    2    2    2  6.542470   1   3  german 316\n317    4    3    1    2  8.953333   1   3  german 317\n319    2    1    3    3  7.581036   0   3  german 319\n321    3    2    3    3 10.881096   1   3  german 321\n322    2    2    4    3  9.503126   1   3  german 322\n323    3    3    2    2 10.542913   1   3  german 323\n324    2    1    4    3  7.226064   1   3  german 324\n326    3    3    1    2 10.473550   1   3  german 326\n328    3    3    2    2 10.490264   0   3  german 328\n329    3    3    2    1 11.740022   1   3  german 329\n330    3    3    2    2 11.473238   0   3  german 330\n333    3    3    2    2  7.619042   0   3  german 333\n334    3    2    2    2  9.525225   1   3  german 334\n335    3    2    2    2  9.301695   1   3  german 335\n336    1    1    4    4 10.235494   1   3  german 336\n338    3    2    3    3 10.078303   0   3  german 338\n340    2    3    2    2  9.613427   0   3  german 340\n341    2    3    2    2 10.440469   1   3  german 341\n343    2    2    3    3  9.632019   0   3  german 343\n346    3    3    2    3 10.358045   0   3  german 346\n347    3    3    2    3  9.452587   0   3  german 347\n348    2    2    3    3 10.616298   0   3  german 348\n349    2    2    3    4 10.531881   1   3  german 349\n350    3    2    3    3 10.917065   0   3  german 350\n351    3    4    2    2  6.753558   1   3  german 351\n352    3    3    1    1  9.081102   1   3  german 352\n353    2    2    3    3  9.324282   0   3  german 353\n354    3    4    2    2  9.556236   1   3  german 354\n355    3    3    2    3  8.404846   1   3  german 355\n356    3    3    2    2  9.835171   1   3  german 356\n358    3    3    2    2  9.347660   1   3  german 358\n360    3    3    2    2  8.146446   0   3  german 360\n361    3    3    1    2  7.774709   1   3  german 361\n362    3    3    2    2  6.083013   1   3  german 362\n363    2    3    3    3  8.618334   1   3  german 363\n366    2    3    3    3 11.498595   0   3  german 366\n368    3    4    2    2 11.885905   0   3  german 368\n369    2    1    3    3 10.151313   0   3  german 369\n370    2    3    2    3  8.703436   1   3  german 370\n371    1    2    3    4 11.715882   1   3  german 371\n373    2    2    3    2  9.260014   0   3  german 373\n374    2    1    4    4 12.764876   0   3  german 374\n375    2    3    3    3 11.855908   0   3  german 375\n376    2    2    3    3 11.346669   1   3  german 376\n377    2    3    3    2 10.437059   0   3  german 377\n380    3    2    2    3 11.449698   0   3  german 380\n383    3    3    2    1 10.240093   1   3  german 383\n384    3    3    3    3 12.629684   0   3  german 384\n385    3    3    2    2 10.858224   0   3  german 385\n388    3    3    2    2  8.881271   1   3  german 388\n390    3    3    3    3 10.192251   0   3  german 390\n391    3    3    1    2 11.065900   0   3  german 391\n392    3    3    2    2 10.998406   1   3  german 392\n393    2    2    3    2  8.552346   1   3  german 393\n394    4    3    1    2  9.412805   0   3  german 394\n398    3    2    3    3  9.242431   1   3  german 398\n400    3    3    3    3 10.084902   1   3  german 400\n401    3    2    2    2 10.097882   0   3  german 401\n402    3    3    1    1 11.672478   0   3  german 402\n403    3    4    2    1 13.353267   0   3  german 403\n404    1    2    4    4 10.107733   0   3  german 404\n405    2    3    3    3 10.847647   0   3  german 405\n406    3    3    1    1  8.989002   1   3  german 406\n407    4    3    2    2  9.767775   0   3  german 407\n408    3    3    3    2  8.104969   1   3  german 408\n409    3    3    2    2 11.940227   0   3  german 409\n410    2    1    4    3  8.396467   1   3  german 410\n412    2    2    2    3  9.927729   1   3  german 412\n413    3    3    2    2  9.120070   0   3  german 413\n414    3    2    2    2  9.359507   1   3  german 414\n415    3    2    3    3  7.340234   0   3  german 415\n416    3    3    2    2  8.565667   1   3  german 416\n417    3    2    2    3 11.829203   1   3  german 417\n418    2    2    2    2  9.444976   1   3  german 418\n419    1    1    4    4  8.163760   1   3  german 419\n420    1    2    2    3  7.971904   0   3  german 420\n422    2    2    3    2 10.435981   1   3  german 422\n423    1    2    3    3 11.167197   0   3  german 423\n424    4    3    2    2  9.076633   0   3  german 424\n425    3    3    2    2  9.734855   0   3  german 425\n426    3    3    1    1  9.520808   0   3  german 426\n427    2    2    2    2  8.750194   0   3  german 427\n428    2    2    3    3 10.203757   1   3  german 428\n429    3    3    2    2  8.855370   0   3  german 429\n430    3    2    3    2 13.023492   1   3  german 430\n433    2    2    3    4  8.328651   1   3  german 433\n434    3    2    3    2  9.358613   0   3  german 434\n435    4    3    2    2 11.184436   0   3  german 435\n439    4    4    1    1  9.609236   0   3  german 439\n440    2    3    2    2  9.303808   0   3  german 440\n441    3    3    2    2 10.739005   0   3  german 441\n443    2    3    3    3 10.028578   1   3  german 443\n444    4    4    2    2 10.703093   1   3  german 444\n446    3    2    3    3 10.775893   1   3  german 446\n447    2    2    3    3 10.714497   0   3  german 447\n448    3    2    2    2  9.476227   0   3  german 448\n451    3    3    2    2  9.860913   0   3  german 451\n452    3    4    1    2  9.406198   1   3  german 452\n453    3    3    2    2  7.358570   0   3  german 453\n454    3    4    2    2  9.143064   1   3  german 454\n455    3    4    2    2 11.833885   0   3  german 455\n456    2    2    4    3 10.510292   1   3  german 456\n457    4    3    2    2 11.219608   1   3  german 457\n458    2    2    3    3 13.257474   0   3  german 458\n459    2    2    3    4  7.569693   0   3  german 459\n460    2    2    4    3 11.684286   1   3  german 460\n462    2    2    3    3  9.203611   1   3  german 462\n463    2    2    3    3 11.462454   1   3  german 463\n464    3    2    3    3  8.608740   1   3  german 464\n465    3    3    3    2  8.550825   0   3  german 465\n468    3    3    2    2  9.638242   0   3  german 468\n469    4    3    2    2 11.559736   0   3  german 469\n470    2    3    2    2  9.289579   1   3  german 470\n471    2    2    4    3 10.660731   0   3  german 471\n472    1    2    4    4  8.653708   1   3  german 472\n475    2    2    2    2 10.394297   0   3  german 475\n477    2    1    3    3 11.588138   1   3  german 477\n478    3    2    3    3  9.701818   1   3  german 478\n479    2    2    3    3 10.131820   0   3  german 479\n480    3    2    2    3 11.851048   0   3  german 480\n481    2    2    3    3  8.094906   0   3  german 481\n482    2    3    2    3  6.522122   0   3  german 482\n484    3    2    2    2  7.171610   1   3  german 484\n485    4    3    1    2 10.449040   1   3  german 485\n486    3    3    2    2  8.565564   1   3  german 486\n487    2    3    2    3  9.692163   0   3  german 487\n488    2    3    3    2 10.544790   0   3  german 488\n489    1    1    4    4  9.152848   1   3  german 489\n492    3    4    2    2 12.157326   1   3  german 492\n493    2    2    4    3  8.071642   1   3  german 493\n496    2    2    2    2  9.657121   1   3  german 496\n497    2    2    3    3  8.421820   1   3  german 497\n498    2    2    3    2 11.234864   0   3  german 498\n499    3    3    3    2 11.684493   1   3  german 499\n501    3    2    3    3  9.518572   0   4  german 501\n503    3    2    2    2  9.394796   1   4  german 503\n504    3    2    2    2 10.871842   0   4  german 504\n505    3    3    1    1 11.807168   1   4  german 505\n507    2    3    3    3 11.295793   0   4  german 507\n508    3    2    3    3  9.704389   1   4  german 508\n509    3    3    2    1 12.982000   1   4  german 509\n510    3    2    2    3  8.051677   0   4  german 510\n511    2    3    3    3 10.134297   1   4  german 511\n512    2    3    2    2 10.915921   0   4  german 512\n514    3    2    3    3  9.377179   1   4  german 514\n516    2    2    3    3  9.799799   0   4  german 516\n517    2    2    3    3  9.352013   0   4  german 517\n518    3    2    3    3  7.578805   0   4  german 518\n519    2    3    3    2  8.955748   0   4  german 519\n520    3    3    1    2  7.345759   1   4  german 520\n521    2    3    3    2  9.038828   0   4  german 521\n522    3    2    3    3  6.462564   0   4  german 522\n523    3    3    2    2  8.710578   0   4  german 523\n524    2    2    3    3  8.078165   1   4  german 524\n525    3    3    3    3  9.308461   0   4  german 525\n526    2    3    3    2  9.621561   0   4  german 526\n527    2    3    2    2 10.468559   1   4  german 527\n528    2    2    4    3 12.527006   0   4  german 528\n529    1    1    4    4  9.713401   0   4  german 529\n530    2    3    2    3 12.449355   1   4  german 530\n531    4    3    1    2 10.171527   1   4  german 531\n532    2    2    4    3 11.592511   1   4  german 532\n533    2    2    3    3  9.746639   0   4  german 533\n534    2    2    2    3 11.539024   0   4  german 534\n535    3    4    1    1 12.662389   1   4  german 535\n536    3    3    2    2  8.558018   1   4  german 536\n537    3    4    1    2 12.490442   0   4  german 537\n538    3    4    2    2  8.849825   1   4  german 538\n540    2    2    2    3  9.856794   1   4  german 540\n542    2    3    2    3 10.455994   0   4  german 542\n543    3    3    1    2  8.953355   0   4  german 543\n544    3    3    2    2 10.233466   1   4  german 544\n546    3    3    2    1 11.511366   0   4  german 546\n547    3    3    2    2  7.030045   0   4  german 547\n548    2    1    4    4 11.833564   0   4  german 548\n550    2    3    2    2 10.669845   1   4  german 550\n551    3    3    3    2 11.945497   0   4  german 551\n552    3    3    1    1  7.631776   0   4  german 552\n553    2    2    3    3  7.929047   0   4  german 553\n554    2    3    2    2 10.655136   1   4  german 554\n555    4    4    1    1 11.651111   1   4  german 555\n556    3    3    2    2  9.499631   0   4  german 556\n557    2    3    2    3  9.869376   1   4  german 557\n558    3    3    1    2 10.573739   0   4  german 558\n559    2    2    3    4  6.777733   0   4  german 559\n560    3    3    2    1 10.292540   0   4  german 560\n561    3    2    3    2  8.420615   0   4  german 561\n565    3    3    2    2  9.567283   1   4  german 565\n566    3    2    2    2  9.700664   1   4  german 566\n567    2    2    4    3  9.035493   1   4  german 567\n568    2    2    3    3  6.920118   0   4  german 568\n571    4    4    1    1 11.561428   0   4  german 571\n572    3    2    2    2 10.479614   1   4  german 572\n573    3    2    2    3 12.062231   0   4  german 573\n574    3    3    3    2 11.258923   1   4  german 574\n575    2    2    3    3  8.535113   1   4  german 575\n577    3    3    2    2  9.513192   0   4  german 577\n581    1    2    3    3  7.840196   1   4  german 581\n583    2    3    3    3 11.716523   1   4  german 583\n584    2    2    3    3 10.115714   0   4  german 584\n585    2    1    2    3 10.487666   1   4  german 585\n586    3    3    2    2 10.129045   1   4  german 586\n587    4    3    2    2 10.213173   0   4  german 587\n588    1    1    3    3 12.114688   1   4  german 588\n589    2    2    3    3 11.655211   0   4  german 589\n590    1    2    4    4 10.474828   1   4  german 590\n591    2    3    3    2  9.222274   0   4  german 591\n592    3    3    3    3 10.053230   0   4  german 592\n595    3    3    3    2 10.611019   0   4  german 595\n598    2    3    3    3 12.403272   0   4  german 598\n600    4    3    1    1 30.000000   0   4  german 600\n602    3    2    3    3  9.797451   0   4  german 602\n604    2    3    3    3  5.697734   1   4  german 604\n605    4    3    3    2 11.315240   0   4  german 605\n606    3    3    2    2  9.398728   0   4  german 606\n608    3    4    2    1  7.712797   0   4  german 608\n609    4    3    2    2 11.397924   1   4  german 609\n612    2    1    4    3  8.434417   1   4  german 612\n613    2    2    3    3  9.741397   1   4  german 613\n616    3    3    2    2  8.498451   0   4  german 616\n617    1    2    3    3 10.447842   0   4  german 617\n618    3    3    3    3  6.916193   0   4  german 618\n619    3    2    3    3  7.967729   0   4  german 619\n620    2    2    3    3 10.971877   0   4  german 620\n621    1    2    3    3 10.036674   1   4  german 621\n622    4    4    1    2 11.171656   0   4  german 622\n623    2    2    3    3  9.809559   1   4  german 623\n624    3    2    2    2  8.970928   0   4  german 624\n625    2    2    4    4 10.715082   0   4  german 625\n626    3    3    3    2  7.928970   1   4  german 626\n627    2    3    3    3  6.909529   1   4  german 627\n628    2    3    3    2 10.799244   0   4  german 628\n630    2    2    2    1 12.505498   0   4  german 630\n631    4    4    1    1  9.779263   1   4  german 631\n632    3    3    2    3  9.474470   0   4  german 632\n633    2    2    3    3 12.139497   0   4  german 633\n634    3    3    3    2 11.067315   0   4  german 634\n635    3    4    2    3  8.320202   0   4  german 635\n636    3    2    2    2  7.182648   1   4  german 636\n637    2    2    4    4 10.130177   0   4  german 637\n638    3    3    3    3 12.496180   0   4  german 638\n639    2    2    3    3 12.592766   0   4  german 639\n640    2    2    2    3  9.907003   0   4  german 640\n641    3    2    3    3 11.737818   1   4  german 641\n642    3    2    2    1  8.821091   0   4  german 642\n643    2    3    3    2  6.860783   0   4  german 643\n644    3    2    3    3 10.268927   1   4  german 644\n645    3    3    2    2 10.266885   1   4  german 645\n646    3    3    2    2  5.763412   0   4  german 646\n647    3    2    2    2  7.066767   1   4  german 647\n648    3    3    3    2  9.180560   0   4  german 648\n649    3    3    2    2 12.972046   1   4  german 649\n651    3    3    2    2 11.411023   1   4     ger 651\n652    2    2    2    3 10.049973   0   4     ger 652\n653    2    2    3    2 11.337266   0   4     ger 653\n654    3    3    3    3 13.679508   0   4     ger 654\n655    2    3    3    3  8.168574   1   4     ger 655\n657    2    3    3    3  9.269406   0   4     ger 657\n659    3    3    2    2  8.932260   1   4     ger 659\n660    3    3    1    2  7.922082   0   4     ger 660\n661    2    2    3    3 11.825439   0   4     ger 661\n663    2    1    3    3 13.418967   0   4     ger 663\n664    3    2    3    3 12.795091   0   4     ger 664\n665    2    3    3    3  9.076854   0   4     ger 665\n666    2    2    2    2  9.791845   1   4     ger 666\n667    2    3    2    2  7.201118   0   4     ger 667\n669    3    3    3    3 11.357964   1   4     ger 669\n670    3    3    2    2 10.881354   0   4     ger 670\n671    2    1    3    3 10.379563   0   4     ger 671\n674    3    3    3    2  8.146615   1   4     ger 674\n675    2    3    2    2  9.175585   0   4     ger 675\n676    2    2    4    4 12.131668   1   4     ger 676\n678    1    2    3    3 11.473233   1   4     ger 678\n679    3    3    2    3  9.506655   1   4     ger 679\n680    2    3    2    2 10.030170   0   4     ger 680\n682    1    1    3    4 10.668823   0   4     ger 682\n683    2    3    3    3  9.386863   1   4     ger 683\n684    2    2    3    3  7.093356   1   4     ger 684\n685    2    2    3    3 12.640182   1   4     ger 685\n686    1    2    3    3  8.807493   1   4     ger 686\n687    3    3    3    3 14.291764   0   4     ger 687\n689    3    3    2    3  5.439760   0   4     ger 689\n691    2    2    3    3  8.718412   1   4     ger 691\n692    3    3    2    2  8.041810   1   4     ger 692\n694    3    2    3    3 10.982985   1   4     ger 694\n695    1    2    2    3 10.007353   0   4     ger 695\n696    3    2    2    2  8.467930   0   4     ger 696\n698    2    2    3    3 10.826550   1   4     ger 698\n699    3    2    2    2  9.543067   1   4     ger 699\n700    3    3    1    2 10.025428   1   4   germn 700\n701    2    3    3    3 10.668717   1   4 italian 701\n702    3    3    3    3 10.518729   1   4 italian 702\n703    3    3    2    2 10.808743   1   4 italian 703\n704    2    2    2    2  7.725368   1   4 italian 704\n705    3    3    2    3 10.498354   1   4 italian 705\n707    3    4    2    2 11.808316   1   4 italian 707\n708    2    2    4    4  9.354355   0   4 italian 708\n709    1    1    4    4  6.893923   0   4 italian 709\n710    2    3    2    3 10.715373   1   4 italian 710\n712    2    3    2    3 10.579138   1   4  french 712\n713    3    2    3    3  7.743470   1   4  french 713\n715    3    3    1    2 11.443266   1   4  french 715\n716    3    2    3    3 10.739886   0   4  french 716\n719    4    3    2    2  9.963483   1   4  french 719\n720    3    3    3    3 12.146356   0   4  french 720\n741    3    4    2    3  8.657699   1   4         741\n742    2    2    3    3 12.724873   1   4         742\n743    1    1    3    3  9.056560   1   4         743\n744    2    1    3    3 10.776392   1   4         744\n745    3    2    2    3 11.332372   0   4         745\n746    3    3    2    2  9.605044   0   4         746\n747    3    3    2    2 12.553403   0   4         747\n748    3    3    3    2  8.607291   1   4         748\n750    3    3    3    2 12.253184   1   4         750\n\n\n\n\nTo exclude observations that do have missing values, we may use the filter function from the dplyr package.\nFor a single variable:\n\nexDat |&gt;\n  dplyr::filter(!is.na(age))\n\n    msc1 msc2 msc3 msc4       age sex edu   fLang  id\n1      2    3    2    2  9.815538   0   0  german   1\n2      3    2    1    1  8.980194   1   0  german   2\n3      2    2    3    3 12.758157   0   0  german   3\n4      2    2    3    2 10.578846   0   0  german   4\n5      3    2    2    2  9.894364   1   0  german   5\n6      3    3    3    2 10.446850   0   0  german   6\n7      4    4    1    2 10.897605   1   0  german   7\n8      3    3    2    1  7.977382   1   0  german   8\n9      3    3    2    1 10.688379  NA   0  german   9\n10     3    3    2    2  9.105864   0   0  german  10\n11     2    1    3    3  8.540117   0   0  german  11\n12     2    2    3    3 11.841954   0   0  german  12\n13     2    2    3    4 11.647655   0   0  german  13\n14     2    3    3    3 11.745306   0   0  german  14\n15     2    3    3    3  9.970630   0   0  german  15\n16     3    3    2    1  8.186501  NA   0  german  16\n17     2    2    2    2  7.773473   1   0  german  17\n18     2    2    3    3  9.339448   0   0  german  19\n19     4    3    2    2  9.831947   0   0  german  21\n20     2    3    3    3  9.890266   1   0  german  22\n21     2    3    2    2 11.501609   0   0  german  23\n22     2   NA    3    2  9.341404   0   0  german  24\n23     3    3    2    2 11.540030   1   0  german  25\n24     2    3    3    3 10.098491   1   0  german  26\n25     4    3    2    2 10.851320   1   0  german  27\n26     3    2    2    2  6.735228   1   0  german  28\n27     3    4    2    2 10.690059   1   0  german  29\n28     3    2    2    3  9.746659   1   0  german  30\n29     2    1    4    4  8.983450   0   0  german  31\n30     2   NA    3    3 11.557894   0   0  german  32\n31     2    2    3    2  8.057455   1   0  german  33\n32     2    2    3    3 10.134752   0   0  german  34\n33     2    3    3    2  8.096160   0   0  german  35\n34     4    3    1    1  9.404151  NA   0  german  36\n35     3    3    3    3 12.156118   0   0  german  37\n36     2    2    3    2  9.600157   0   0  german  38\n37     2    3    3    3 11.591400   0   0  german  39\n38     3    4    2    2 10.691193   1   0  german  40\n39     3    3    3    2 12.622380   0   0  german  41\n40     3    2    2    2 10.043774   1   0  german  42\n41     4    3    2    2  8.452508   0   0  german  43\n42     4    3    2    2 12.029754   1   0  german  44\n43     3    2    3    3  8.213722   1   0  german  45\n44     2    3    2    3 11.654911   0   0  german  46\n45     4    3    1    1  9.086209   1   0  german  47\n46     3   NA    3    3  9.535470   1   0  german  48\n47     2    3    3    3  9.617718   0   0  german  49\n48     2    3    2    2 10.347768   1   0  german  50\n49     2    1    3    3 10.735626   0   1  german  51\n50     3    3    3    2 10.903281   1   1  german  52\n51     2   NA    3    3 10.265831   1   1  german  53\n52     2    3    4    3 10.824752   0   1  german  54\n53     3    3    3    3  9.282584   0   1  german  55\n54     2    3    3    3  8.747505   1   1  german  57\n55     2    2    3    4  8.992998   1   1  german  58\n56     2    2    3    3 12.632563   1   1  german  59\n57     2    2    3    3 11.015445   1   1  german  60\n58     3    3    2    2  9.529734   1   1  german  61\n59     4    3    1    1 11.569437   1   1  german  62\n60     4    3    2    2 11.626011   1   1  german  63\n61     2   NA    3    3 12.371110   0   1  german  64\n62     2    2    2    3  8.712209   1   1  german  65\n63     1    2    3    2 12.271368   0   1  german  66\n64     3    3    2    2 11.514336   1   1  german  67\n65     2    2    2    2 10.858827   1   1  german  69\n66     2    2    3    4 11.416986   0   1  german  70\n67     2   NA    1    2 10.722411   0   1  german  71\n68     2    3    3    3  9.417725   1   1  german  72\n69     4    3    1    2 10.788379   1   1  german  73\n70     2    3    2    2  7.527881   1   1  german  74\n71     2    2    3    3  7.697320   0   1  german  75\n72     3    4    3    2  9.723288   1   1  german  76\n73     2    2    3    3  8.457035  NA   1  german  77\n74     3    3    3    3  9.552697   1   1  german  78\n75     3    3    3    3 10.766935   1   1  german  79\n76     3   NA    2    2  8.086932   1   1  german  80\n77     2    3    2    2 10.027268   0   1  german  81\n78     4    3    2    2 11.108152   1   1  german  82\n79     3    3    2    2  9.364853   1   1  german  83\n80     2   NA    4    4  9.229549   0   1  german  84\n81     4    3    1    1  8.791437   0   1  german  85\n82     2    2    3    3 14.699514   1   1  german  86\n83     1    2    4    3  9.310963   0   1  german  87\n84     2   NA    2    2  7.862333   0   1  german  88\n85     3    4    1    2  9.164070   0   1  german  89\n86     3    2    3    2  9.904690   0   1  german  90\n87     1    2    3    3  9.949049   0   1  german  91\n88     1    2    3    2 10.874213   0   1  german  92\n89     2    3    3    3  9.589440   0   1  german  93\n90     2    2    3    3  8.396720   0   1  german  94\n91     1    2    3    3  8.633062   1   1  german  95\n92     3    4    2    2 10.174559   1   1  german  96\n93     4    3    2    2  6.022669   1   1  german  98\n94     3    3    2    2 10.701638   1   1  german  99\n95     2    3    3    3 11.536565   0   1  german 101\n96     2    2    3    3  7.082311   1   1  german 103\n97     3    3    2    3  7.990254   1   1  german 104\n98     2    2    3    3 13.223930   1   1  german 105\n99     2    3    2    3  8.847114   0   1  german 106\n100    2   NA    3    3 11.477532   0   1  german 107\n101    3    4    1    1  8.809008  NA   1  german 108\n102    2    2    3    2  8.917741   1   1  german 109\n103    2    2    3    4  9.059646   0   1  german 110\n104    2   NA    2    2  7.801995   1   1  german 112\n105    2    2    3    3  8.336241   0   1  german 115\n106    3    3    2    2 12.158201   1   1  german 116\n107    2    2    4    3 11.067872   1   1  german 118\n108    3   NA    2    2 11.700517   0   1  german 119\n109    3    2    3    2  9.562434   0   1  german 120\n110    3    3    3    2  8.977396   0   1  german 121\n111    3    2    3    2 10.162202   0   1  german 122\n112    3    3    3    2  9.885336   0   1  german 123\n113    3    2    3    3 12.560990   1   1  german 124\n114    2    2    4    4 11.087431   1   1  german 125\n115    3    3    4    3 10.371456   1   1  german 126\n116    3    4    1    2  9.319275   1   1  german 127\n117    2    2    2    3 11.008828   1   1  german 128\n118    1    2    3    2  9.656535   0   1  german 129\n119    1    2    3    4 10.032404   0   1  german 130\n120    2    2    3    3  6.974716   1   1  german 131\n121    3    2    2    3  9.168019   1   1  german 132\n122    2    1    3    4 10.658201   1   1  german 133\n123    3    2    2    2 10.723573   1   1  german 134\n124    1    2    4    3  9.564175   1   1  german 135\n125    2    3    3    2  9.440463   1   1  german 136\n126    1    2    3    4  8.574188   1   1  german 137\n127    2    2    3    3  8.336412   0   1  german 138\n128    3    2    2    2 11.316498   0   1  german 139\n129    4    3    2    2 10.089194   1   1  german 140\n130    3    3    2    2 11.326115   0   1  german 141\n131    2    3    2    2 10.544879   1   1  german 142\n132    4    3    2    2  8.278763   0   1  german 143\n133    3    3    2    2  9.165442   0   1  german 144\n134    3    4    2    2 14.840083   0   1  german 145\n135    4    4    1    1  9.177470   0   1  german 146\n136    2    3    1    1 10.392509   1   1  german 147\n137    3    3    2    3 10.074265   1   1  german 148\n138    2   NA    2    2 10.394414   0   1  german 149\n139    2    2    3    3 11.303224   0   2  german 151\n140    3    3    2    2  8.301101   0   2  german 152\n141    3    4    2    2 11.552966   1   2  german 153\n142    3    3    2    2 10.420355   1   2  german 154\n143    3    4    2    2 12.648300   1   2  german 155\n144    2    2    3    2  9.985757   1   2  german 156\n145    2    3    2    2 10.504636   0   2  german 157\n146    2    2    3    3  9.576623   0   2  german 159\n147    3    3    2    2 12.855773   1   2  german 160\n148    2    1    3    4 10.131071   0   2  german 161\n149    2    3    3    3 11.018442   1   2  german 162\n150    3    3    2    2 10.910317   1   2  german 163\n151    1   NA    3    4  9.682431   0   2  german 164\n152    3    2    3    3 10.402108   1   2  german 165\n153    2    2    3    2 11.020302   0   2  german 166\n154    2    2    3    3 10.862003   1   2  german 167\n155    3   NA    2    1 12.021632   0   2  german 168\n156    2   NA    2    3 11.145560   1   2  german 169\n157    3   NA    1    2 11.157485   1   2  german 170\n158    3    3    2    1 11.156488   1   2  german 171\n159    1    2    3    3 11.774043   0   2  german 172\n160    3    2    3    2  9.014673   0   2  german 173\n161    4    4    1    1  9.755259   1   2  german 174\n162    3    3    3    3  7.710862   0   2  german 175\n163    1    1    4    4 11.418964   1   2  german 176\n164    1    2    4    3 10.702477   0   2  german 177\n165    3    2    3    2 11.237905   1   2  german 178\n166    3    1    2    2  9.225546   0   2  german 179\n167    3    3    2    2  9.673228   0   2  german 180\n168    2    3    2    2  9.358897   0   2  german 181\n169    3    2    3    3  9.252146   1   2  german 182\n170    2    2    3    3  8.616693   0   2  german 183\n171    3    4    2    2 10.721936   0   2  german 184\n172    3    3    2    2 11.054393   0   2  german 185\n173    1    1    4    4  8.094315   1   2  german 186\n174    3    3    1    2  9.231779   0   2  german 187\n175    3    3    2    2  8.547865   1   2  german 188\n176    3    3    3    3 10.345779   0   2  german 189\n177    1    2    3    3 13.226910  NA   2  german 190\n178    2    2    3    4 10.411992   0   2  german 191\n179    3    3    2    3  8.971620   1   2  german 192\n180    1    2    4    4 10.898386   0   2  german 193\n181    2    2    3    3 10.625394   1   2  german 194\n182    2    2    3    4  6.357136   0   2  german 195\n183    1    2    3    3 12.102026   1   2  german 196\n184    2    3    3    3  6.586317   1   2  german 198\n185    3    3    3    2  9.050529   1   2  german 199\n186    2    2    3    3 12.723541   1   2  german 200\n187    2    2    3    3  9.753327  NA   2  german 201\n188    2    2    2    2 13.303115   1   2  german 202\n189    3    3    2    2 11.445677   0   2  german 204\n190    2    2    2    2  9.306572   0   2  german 205\n191    3    1    3    3  8.328087   0   2  german 206\n192    3    4    1    2 10.359319   0   2  german 207\n193    2    2    3    2  9.748836   1   2  german 209\n194    2    2    3    3 11.357677   0   2  german 210\n195    3    3    2    2  9.790493   1   2  german 211\n196    3    3    3    3  8.325024   0   2  german 212\n197    2    2    2    2  9.281008   1   2  german 213\n198    3    2    2    2 13.164568   0   2  german 214\n199    2    2    2    2  7.828867   0   2  german 215\n200    3    3    3    3 10.665805   0   2  german 216\n201    2    1    3    3 10.635206   1   2  german 217\n202    2   NA    3    2  7.969089   1   2  german 218\n203    2    2    2    3  8.923574   0   2  german 219\n204    2    2    2    2  7.883175  NA   2  german 220\n205    4   NA    2    1  8.577328   1   2  german 221\n206    2   NA    4    4  8.257213   1   2  german 222\n207    3    3    3    2 10.397873   1   2  german 223\n208    4    3    2    2 10.241358   1   2  german 224\n209    3    3    2    1  9.874614   1   2  german 225\n210    2    3    2    2  9.251216   0   2  german 226\n211    3    2    2    2 11.927287   0   2  german 227\n212    4    4    2    2 10.327432   0   2  german 228\n213    3    2    3    2  6.475004   0   2  german 229\n214    2    3    3    3 11.338842   0   2  german 230\n215    3    3    2    2  7.933710   0   2  german 232\n216    2    3    3    3 10.721250   1   2  german 233\n217    3    2    3    3  8.086553   0   2  german 234\n218    2    3    3    3 12.252961  NA   2  german 235\n219    3    3    2    2  9.883740  NA   2  german 236\n220    2    2    2    3 11.260712   0   2  german 237\n221    3   NA    2    2 13.991412   1   2  german 239\n222    2    3    2    3  9.606693   1   2  german 240\n223    2    2    2    2  9.965807   1   2  german 241\n224    3    3    2    2  6.665730  NA   2  german 242\n225    2    2    2    2 11.588374   1   2  german 243\n226    2    1    3    3 12.054486   0   2  german 244\n227    2    1    3    2  8.551229   1   2  german 245\n228    1    1    4    4 14.758472   1   2  german 246\n229    3    3    2    1 10.601619   1   2  german 247\n230    2    3    2    3  9.608768   1   2  german 248\n231    2    2    3    4 10.631563   0   2  german 249\n232    3    4    1    1  9.195155   0   2  german 250\n233    3    2    3    3 12.153778   1   2  german 251\n234    2    1    4    4 11.594112   1   2  german 252\n235    3    3    2    2 12.749052   0   2  german 253\n236    2    1    3    3 10.904641   1   2  german 254\n237    2    2    3    3  9.674235  NA   2  german 255\n238    3    3    1    1  9.382583   1   2  german 256\n239    2    2    4    3 10.075463   1   2  german 257\n240    3    3    2    2 10.003249   0   2  german 260\n241    2    2    3    3 10.357645   0   2  german 261\n242    1    2    3    3 11.427154   0   2  german 262\n243    1    2    4    3 11.141758   1   2  german 263\n244    2    2    3    3 11.717822   0   2  german 264\n245    3    3    2    1  8.591719   1   2  german 265\n246    4    3    2    2  7.199316   1   2  german 266\n247    2    2    3    3  8.511259  NA   2  german 267\n248    1   NA    4    4 13.183838   1   2  german 268\n249    3   NA    2    2  9.723661   0   2  german 269\n250    3    2    1    1  9.901684   1   2  german 270\n251    2    2    2    3 11.543191   1   2  german 271\n252    3    2    3    2  9.905296   0   2  german 272\n253    3    3    2    2 10.804370   0   2  german 273\n254    3    3    1    1  9.135004   1   2  german 274\n255    3   NA    2    2  9.937281   1   2  german 275\n256    2    2    4    4  8.449205  NA   2  german 276\n257    4    4    2    2 10.110370   1   2  german 277\n258    2    3    3    3  8.910521   1   2  german 278\n259    3    3    2    2 11.335096   0   2  german 279\n260    2    3    3    3 10.872968   1   2  german 280\n261    3    3    2    2  9.550622   0   2  german 281\n262    1   NA    3    4 12.176753   0   2  german 283\n263    2    2    2    2  9.628909   0   2  german 284\n264    2    2    3    3 13.948810   0   2  german 285\n265    2   NA    3    3 12.154323   1   2  german 286\n266    3    2    2    2  9.487855   1   2  german 287\n267    3    3    3    2 10.250928   0   2  german 288\n268    3    2    3    3 10.038493   0   2  german 289\n269    3    2    2    2  9.110477  NA   2  german 290\n270    3    3    2    3 11.294503   1   2  german 291\n271    2    2    3    3 12.974758   0   2  german 292\n272    3    3    2    2 10.285506   0   2  german 293\n273    3    2    3    3 10.156128   1   2  german 294\n274    3    4    3    3 10.477511   0   2  german 295\n275    2    2    3    4 11.463436   0   2  german 296\n276    2    3    2    2 10.958489   0   2  german 297\n277    3    2    2    2  8.164545   0   2  german 298\n278    2    3    3    3 10.140617   0   2  german 299\n279    3   NA    2    2  9.653269   1   2  german 300\n280    2    3    2    3  9.384978   1   3  german 302\n281    2    2    3    3  7.993749   1   3  german 303\n282    2    3    3    3  6.955896   1   3  german 304\n283    4    3    2    2 10.535078   0   3  german 305\n284    2    2    2    2  9.815517  NA   3  german 307\n285    4    4    1    1 10.504347   1   3  german 308\n286    2    3    2    2  9.939982   0   3  german 309\n287    3    3    3    3 10.389400   1   3  german 310\n288    2    2    3    3  9.448678   1   3  german 311\n289    2    4    1    2 10.221263   1   3  german 312\n290    2   NA    2    2  7.693476   0   3  german 313\n291    3    3    2    1 11.177018   1   3  german 314\n292    2    2    3    2  9.339305   0   3  german 315\n293    3    2    2    2  6.542470   1   3  german 316\n294    4    3    1    2  8.953333   1   3  german 317\n295    2    1    3    3  7.581036   0   3  german 319\n296    3    3    2    1  9.966598  NA   3  german 320\n297    3    2    3    3 10.881096   1   3  german 321\n298    2    2    4    3  9.503126   1   3  german 322\n299    3    3    2    2 10.542913   1   3  german 323\n300    2    1    4    3  7.226064   1   3  german 324\n301    3    3    1    2 10.473550   1   3  german 326\n302    3    3    2    2 10.490264   0   3  german 328\n303    3    3    2    1 11.740022   1   3  german 329\n304    3    3    2    2 11.473238   0   3  german 330\n305    3    3    2    3 12.689666  NA   3  german 331\n306    3    3    2    2  7.619042   0   3  german 333\n307    3    2    2    2  9.525225   1   3  german 334\n308    3    2    2    2  9.301695   1   3  german 335\n309    1    1    4    4 10.235494   1   3  german 336\n310    3    2    3    3 10.078303   0   3  german 338\n311    2    3    2    2  9.613427   0   3  german 340\n312    2    3    2    2 10.440469   1   3  german 341\n313    2    2    3    3  9.632019   0   3  german 343\n314    3   NA    2    1 11.285079   0   3  german 344\n315    3    4    2    2 12.780121  NA   3  german 345\n316    3    3    2    3 10.358045   0   3  german 346\n317    3    3    2    3  9.452587   0   3  german 347\n318    2    2    3    3 10.616298   0   3  german 348\n319    2    2    3    4 10.531881   1   3  german 349\n320    3    2    3    3 10.917065   0   3  german 350\n321    3    4    2    2  6.753558   1   3  german 351\n322    3    3    1    1  9.081102   1   3  german 352\n323    2    2    3    3  9.324282   0   3  german 353\n324    3    4    2    2  9.556236   1   3  german 354\n325    3    3    2    3  8.404846   1   3  german 355\n326    3    3    2    2  9.835171   1   3  german 356\n327    3    3    2    2  9.347660   1   3  german 358\n328    2   NA    3    3  7.015727   0   3  german 359\n329    3    3    2    2  8.146446   0   3  german 360\n330    3    3    1    2  7.774709   1   3  german 361\n331    3    3    2    2  6.083013   1   3  german 362\n332    2    3    3    3  8.618334   1   3  german 363\n333    2   NA    3    2 10.029465   0   3  german 364\n334    3   NA    2    1 10.539754   1   3  german 365\n335    2    3    3    3 11.498595   0   3  german 366\n336    3    4    2    2 11.885905   0   3  german 368\n337    2    1    3    3 10.151313   0   3  german 369\n338    2    3    2    3  8.703436   1   3  german 370\n339    1    2    3    4 11.715882   1   3  german 371\n340    2    2    3    3 10.497316  NA   3  german 372\n341    2    2    3    2  9.260014   0   3  german 373\n342    2    1    4    4 12.764876   0   3  german 374\n343    2    3    3    3 11.855908   0   3  german 375\n344    2    2    3    3 11.346669   1   3  german 376\n345    2    3    3    2 10.437059   0   3  german 377\n346    3   NA    2    2  8.338840   1   3  german 379\n347    3    2    2    3 11.449698   0   3  german 380\n348    2   NA    2    2 10.331462   0   3  german 382\n349    3    3    2    1 10.240093   1   3  german 383\n350    3    3    3    3 12.629684   0   3  german 384\n351    3    3    2    2 10.858224   0   3  german 385\n352    2    3    3    3 11.439490  NA   3  german 387\n353    3    3    2    2  8.881271   1   3  german 388\n354    3   NA    3    3 10.293081   1   3  german 389\n355    3    3    3    3 10.192251   0   3  german 390\n356    3    3    1    2 11.065900   0   3  german 391\n357    3    3    2    2 10.998406   1   3  german 392\n358    2    2    3    2  8.552346   1   3  german 393\n359    4    3    1    2  9.412805   0   3  german 394\n360    2    2    3    3  9.894383  NA   3  german 395\n361    3    2    3    3  9.242431   1   3  german 398\n362    2    2    3    3 10.957836  NA   3  german 399\n363    3    3    3    3 10.084902   1   3  german 400\n364    3    2    2    2 10.097882   0   3  german 401\n365    3    3    1    1 11.672478   0   3  german 402\n366    3    4    2    1 13.353267   0   3  german 403\n367    1    2    4    4 10.107733   0   3  german 404\n368    2    3    3    3 10.847647   0   3  german 405\n369    3    3    1    1  8.989002   1   3  german 406\n370    4    3    2    2  9.767775   0   3  german 407\n371    3    3    3    2  8.104969   1   3  german 408\n372    3    3    2    2 11.940227   0   3  german 409\n373    2    1    4    3  8.396467   1   3  german 410\n374    2   NA    2    3  9.219042   0   3  german 411\n375    2    2    2    3  9.927729   1   3  german 412\n376    3    3    2    2  9.120070   0   3  german 413\n377    3    2    2    2  9.359507   1   3  german 414\n378    3    2    3    3  7.340234   0   3  german 415\n379    3    3    2    2  8.565667   1   3  german 416\n380    3    2    2    3 11.829203   1   3  german 417\n381    2    2    2    2  9.444976   1   3  german 418\n382    1    1    4    4  8.163760   1   3  german 419\n383    1    2    2    3  7.971904   0   3  german 420\n384    2    2    3    2 10.435981   1   3  german 422\n385    1    2    3    3 11.167197   0   3  german 423\n386    4    3    2    2  9.076633   0   3  german 424\n387    3    3    2    2  9.734855   0   3  german 425\n388    3    3    1    1  9.520808   0   3  german 426\n389    2    2    2    2  8.750194   0   3  german 427\n390    2    2    3    3 10.203757   1   3  german 428\n391    3    3    2    2  8.855370   0   3  german 429\n392    3    2    3    2 13.023492   1   3  german 430\n393    2    2    3    4  8.328651   1   3  german 433\n394    3    2    3    2  9.358613   0   3  german 434\n395    4    3    2    2 11.184436   0   3  german 435\n396    2    2    4    3 10.608993  NA   3  german 436\n397    2   NA    3    3 12.301002   0   3  german 437\n398    4    4    1    1  9.609236   0   3  german 439\n399    2    3    2    2  9.303808   0   3  german 440\n400    3    3    2    2 10.739005   0   3  german 441\n401    2    3    3    3 10.028578   1   3  german 443\n402    4    4    2    2 10.703093   1   3  german 444\n403    3    2    3    3 10.775893   1   3  german 446\n404    2    2    3    3 10.714497   0   3  german 447\n405    3    2    2    2  9.476227   0   3  german 448\n406    4   NA    1    1  7.254288   1   3  german 449\n407    2    2    3    2  5.788306  NA   3  german 450\n408    3    3    2    2  9.860913   0   3  german 451\n409    3    4    1    2  9.406198   1   3  german 452\n410    3    3    2    2  7.358570   0   3  german 453\n411    3    4    2    2  9.143064   1   3  german 454\n412    3    4    2    2 11.833885   0   3  german 455\n413    2    2    4    3 10.510292   1   3  german 456\n414    4    3    2    2 11.219608   1   3  german 457\n415    2    2    3    3 13.257474   0   3  german 458\n416    2    2    3    4  7.569693   0   3  german 459\n417    2    2    4    3 11.684286   1   3  german 460\n418    1    2    4    4 10.056906  NA   3  german 461\n419    2    2    3    3  9.203611   1   3  german 462\n420    2    2    3    3 11.462454   1   3  german 463\n421    3    2    3    3  8.608740   1   3  german 464\n422    3    3    3    2  8.550825   0   3  german 465\n423    2   NA    3    3  9.467938   1   3  german 467\n424    3    3    2    2  9.638242   0   3  german 468\n425    4    3    2    2 11.559736   0   3  german 469\n426    2    3    2    2  9.289579   1   3  german 470\n427    2    2    4    3 10.660731   0   3  german 471\n428    1    2    4    4  8.653708   1   3  german 472\n429    3   NA    2    3 11.267748   0   3  german 473\n430    3   NA    2    2  6.386290   0   3  german 474\n431    2    2    2    2 10.394297   0   3  german 475\n432    2    1    3    3 11.588138   1   3  german 477\n433    3    2    3    3  9.701818   1   3  german 478\n434    2    2    3    3 10.131820   0   3  german 479\n435    3    2    2    3 11.851048   0   3  german 480\n436    2    2    3    3  8.094906   0   3  german 481\n437    2    3    2    3  6.522122   0   3  german 482\n438    2   NA    4    4  9.492688   1   3  german 483\n439    3    2    2    2  7.171610   1   3  german 484\n440    4    3    1    2 10.449040   1   3  german 485\n441    3    3    2    2  8.565564   1   3  german 486\n442    2    3    2    3  9.692163   0   3  german 487\n443    2    3    3    2 10.544790   0   3  german 488\n444    1    1    4    4  9.152848   1   3  german 489\n445    3   NA    2    3 11.417658   0   3  german 490\n446    2   NA    3    3 10.335521   1   3  german 491\n447    3    4    2    2 12.157326   1   3  german 492\n448    2    2    4    3  8.071642   1   3  german 493\n449    2    2    2    2  9.657121   1   3  german 496\n450    2    2    3    3  8.421820   1   3  german 497\n451    2    2    3    2 11.234864   0   3  german 498\n452    3    3    3    2 11.684493   1   3  german 499\n453    2   NA    3    3 10.551730   1   3  german 500\n454    3    2    3    3  9.518572   0   4  german 501\n455    3    2    2    2  9.394796   1   4  german 503\n456    3    2    2    2 10.871842   0   4  german 504\n457    3    3    1    1 11.807168   1   4  german 505\n458    2    3    3    3 11.295793   0   4  german 507\n459    3    2    3    3  9.704389   1   4  german 508\n460    3    3    2    1 12.982000   1   4  german 509\n461    3    2    2    3  8.051677   0   4  german 510\n462    2    3    3    3 10.134297   1   4  german 511\n463    2    3    2    2 10.915921   0   4  german 512\n464    4    3    2    3  9.464469  NA   4  german 513\n465    3    2    3    3  9.377179   1   4  german 514\n466    2   NA    3    3  6.628830   0   4  german 515\n467    2    2    3    3  9.799799   0   4  german 516\n468    2    2    3    3  9.352013   0   4  german 517\n469    3    2    3    3  7.578805   0   4  german 518\n470    2    3    3    2  8.955748   0   4  german 519\n471    3    3    1    2  7.345759   1   4  german 520\n472    2    3    3    2  9.038828   0   4  german 521\n473    3    2    3    3  6.462564   0   4  german 522\n474    3    3    2    2  8.710578   0   4  german 523\n475    2    2    3    3  8.078165   1   4  german 524\n476    3    3    3    3  9.308461   0   4  german 525\n477    2    3    3    2  9.621561   0   4  german 526\n478    2    3    2    2 10.468559   1   4  german 527\n479    2    2    4    3 12.527006   0   4  german 528\n480    1    1    4    4  9.713401   0   4  german 529\n481    2    3    2    3 12.449355   1   4  german 530\n482    4    3    1    2 10.171527   1   4  german 531\n483    2    2    4    3 11.592511   1   4  german 532\n484    2    2    3    3  9.746639   0   4  german 533\n485    2    2    2    3 11.539024   0   4  german 534\n486    3    4    1    1 12.662389   1   4  german 535\n487    3    3    2    2  8.558018   1   4  german 536\n488    3    4    1    2 12.490442   0   4  german 537\n489    3    4    2    2  8.849825   1   4  german 538\n490    2    2    2    3  9.856794   1   4  german 540\n491    2    3    2    3 10.455994   0   4  german 542\n492    3    3    1    2  8.953355   0   4  german 543\n493    3    3    2    2 10.233466   1   4  german 544\n494    2   NA    3    2 11.345757   0   4  german 545\n495    3    3    2    1 11.511366   0   4  german 546\n496    3    3    2    2  7.030045   0   4  german 547\n497    2    1    4    4 11.833564   0   4  german 548\n498    2   NA    4    3 10.347853   0   4  german 549\n499    2    3    2    2 10.669845   1   4  german 550\n500    3    3    3    2 11.945497   0   4  german 551\n501    3    3    1    1  7.631776   0   4  german 552\n502    2    2    3    3  7.929047   0   4  german 553\n503    2    3    2    2 10.655136   1   4  german 554\n504    4    4    1    1 11.651111   1   4  german 555\n505    3    3    2    2  9.499631   0   4  german 556\n506    2    3    2    3  9.869376   1   4  german 557\n507    3    3    1    2 10.573739   0   4  german 558\n508    2    2    3    4  6.777733   0   4  german 559\n509    3    3    2    1 10.292540   0   4  german 560\n510    3    2    3    2  8.420615   0   4  german 561\n511    3   NA    2    2 11.011815  NA   4  german 564\n512    3    3    2    2  9.567283   1   4  german 565\n513    3    2    2    2  9.700664   1   4  german 566\n514    2    2    4    3  9.035493   1   4  german 567\n515    2    2    3    3  6.920118   0   4  german 568\n516    3   NA    2    2 12.785713   0   4  german 569\n517    4    4    1    1 11.561428   0   4  german 571\n518    3    2    2    2 10.479614   1   4  german 572\n519    3    2    2    3 12.062231   0   4  german 573\n520    3    3    3    2 11.258923   1   4  german 574\n521    2    2    3    3  8.535113   1   4  german 575\n522    3    2    2    2 12.190370  NA   4  german 576\n523    3    3    2    2  9.513192   0   4  german 577\n524    1    2    3    3  7.840196   1   4  german 581\n525    2    3    3    3 11.716523   1   4  german 583\n526    2    2    3    3 10.115714   0   4  german 584\n527    2    1    2    3 10.487666   1   4  german 585\n528    3    3    2    2 10.129045   1   4  german 586\n529    4    3    2    2 10.213173   0   4  german 587\n530    1    1    3    3 12.114688   1   4  german 588\n531    2    2    3    3 11.655211   0   4  german 589\n532    1    2    4    4 10.474828   1   4  german 590\n533    2    3    3    2  9.222274   0   4  german 591\n534    3    3    3    3 10.053230   0   4  german 592\n535    2    1    3    3  8.360811  NA   4  german 593\n536    3    3    3    2 10.611019   0   4  german 595\n537    3    3    2    3 11.952722  NA   4  german 596\n538    2    3    3    3 12.403272   0   4  german 598\n539    4    3    1    1 30.000000   0   4  german 600\n540    3    4    2    2  9.675024  NA   4  german 601\n541    3    2    3    3  9.797451   0   4  german 602\n542    2    3    3    3  5.697734   1   4  german 604\n543    4    3    3    2 11.315240   0   4  german 605\n544    3    3    2    2  9.398728   0   4  german 606\n545    3    4    2    1  7.712797   0   4  german 608\n546    4    3    2    2 11.397924   1   4  german 609\n547    2   NA    3    3 10.497554   1   4  german 610\n548    2   NA    2    2  9.537385   0   4  german 611\n549    2    1    4    3  8.434417   1   4  german 612\n550    2    2    3    3  9.741397   1   4  german 613\n551    2   NA    2    2 10.524864   1   4  german 615\n552    3    3    2    2  8.498451   0   4  german 616\n553    1    2    3    3 10.447842   0   4  german 617\n554    3    3    3    3  6.916193   0   4  german 618\n555    3    2    3    3  7.967729   0   4  german 619\n556    2    2    3    3 10.971877   0   4  german 620\n557    1    2    3    3 10.036674   1   4  german 621\n558    4    4    1    2 11.171656   0   4  german 622\n559    2    2    3    3  9.809559   1   4  german 623\n560    3    2    2    2  8.970928   0   4  german 624\n561    2    2    4    4 10.715082   0   4  german 625\n562    3    3    3    2  7.928970   1   4  german 626\n563    2    3    3    3  6.909529   1   4  german 627\n564    2    3    3    2 10.799244   0   4  german 628\n565    3   NA    2    2  6.011167   0   4  german 629\n566    2    2    2    1 12.505498   0   4  german 630\n567    4    4    1    1  9.779263   1   4  german 631\n568    3    3    2    3  9.474470   0   4  german 632\n569    2    2    3    3 12.139497   0   4  german 633\n570    3    3    3    2 11.067315   0   4  german 634\n571    3    4    2    3  8.320202   0   4  german 635\n572    3    2    2    2  7.182648   1   4  german 636\n573    2    2    4    4 10.130177   0   4  german 637\n574    3    3    3    3 12.496180   0   4  german 638\n575    2    2    3    3 12.592766   0   4  german 639\n576    2    2    2    3  9.907003   0   4  german 640\n577    3    2    3    3 11.737818   1   4  german 641\n578    3    2    2    1  8.821091   0   4  german 642\n579    2    3    3    2  6.860783   0   4  german 643\n580    3    2    3    3 10.268927   1   4  german 644\n581    3    3    2    2 10.266885   1   4  german 645\n582    3    3    2    2  5.763412   0   4  german 646\n583    3    2    2    2  7.066767   1   4  german 647\n584    3    3    3    2  9.180560   0   4  german 648\n585    3    3    2    2 12.972046   1   4  german 649\n586    1   NA    2    3  8.906204   1   4  german 650\n587    3    3    2    2 11.411023   1   4     ger 651\n588    2    2    2    3 10.049973   0   4     ger 652\n589    2    2    3    2 11.337266   0   4     ger 653\n590    3    3    3    3 13.679508   0   4     ger 654\n591    2    3    3    3  8.168574   1   4     ger 655\n592    3    3    2    2 12.273152  NA   4     ger 656\n593    2    3    3    3  9.269406   0   4     ger 657\n594    3    3    2    2  8.932260   1   4     ger 659\n595    3    3    1    2  7.922082   0   4     ger 660\n596    2    2    3    3 11.825439   0   4     ger 661\n597    2    1    3    3 13.418967   0   4     ger 663\n598    3    2    3    3 12.795091   0   4     ger 664\n599    2    3    3    3  9.076854   0   4     ger 665\n600    2    2    2    2  9.791845   1   4     ger 666\n601    2    3    2    2  7.201118   0   4     ger 667\n602    3    3    3    3 11.357964   1   4     ger 669\n603    3    3    2    2 10.881354   0   4     ger 670\n604    2    1    3    3 10.379563   0   4     ger 671\n605    3   NA    2    2  9.222115  NA   4     ger 673\n606    3    3    3    2  8.146615   1   4     ger 674\n607    2    3    2    2  9.175585   0   4     ger 675\n608    2    2    4    4 12.131668   1   4     ger 676\n609    2   NA    2    2 10.870383   0   4     ger 677\n610    1    2    3    3 11.473233   1   4     ger 678\n611    3    3    2    3  9.506655   1   4     ger 679\n612    2    3    2    2 10.030170   0   4     ger 680\n613    3   NA    2    2 10.886894  NA   4     ger 681\n614    1    1    3    4 10.668823   0   4     ger 682\n615    2    3    3    3  9.386863   1   4     ger 683\n616    2    2    3    3  7.093356   1   4     ger 684\n617    2    2    3    3 12.640182   1   4     ger 685\n618    1    2    3    3  8.807493   1   4     ger 686\n619    3    3    3    3 14.291764   0   4     ger 687\n620    3    3    2    3  5.439760   0   4     ger 689\n621    2    2    3    3  8.718412   1   4     ger 691\n622    3    3    2    2  8.041810   1   4     ger 692\n623    3    2    3    3 10.982985   1   4     ger 694\n624    1    2    2    3 10.007353   0   4     ger 695\n625    3    2    2    2  8.467930   0   4     ger 696\n626    4    4    1    2 10.328330  NA   4     ger 697\n627    2    2    3    3 10.826550   1   4     ger 698\n628    3    2    2    2  9.543067   1   4     ger 699\n629    3    3    1    2 10.025428   1   4   germn 700\n630    2    3    3    3 10.668717   1   4 italian 701\n631    3    3    3    3 10.518729   1   4 italian 702\n632    3    3    2    2 10.808743   1   4 italian 703\n633    2    2    2    2  7.725368   1   4 italian 704\n634    3    3    2    3 10.498354   1   4 italian 705\n635    3    4    2    2 11.808316   1   4 italian 707\n636    2    2    4    4  9.354355   0   4 italian 708\n637    1    1    4    4  6.893923   0   4 italian 709\n638    2    3    2    3 10.715373   1   4 italian 710\n639    2    3    2    3 10.579138   1   4  french 712\n640    3    2    3    3  7.743470   1   4  french 713\n641    3    3    1    2 11.443266   1   4  french 715\n642    3    2    3    3 10.739886   0   4  french 716\n643    3    2    3    3  9.666964  NA   4  french 717\n644    4    3    2    2  9.963483   1   4  french 719\n645    3    3    3    3 12.146356   0   4  french 720\n646    1    1    4    4 12.437140   0   4    &lt;NA&gt; 722\n647    3    3    2    2  9.361663   0   4    &lt;NA&gt; 723\n648    4    3    2    2 10.954406   0   4    &lt;NA&gt; 725\n649    2    3    3    3  8.813882   1   4    &lt;NA&gt; 726\n650    2    2    3    3  8.399134   1   4    &lt;NA&gt; 727\n651    3   NA    2    2 10.716499   1   4    &lt;NA&gt; 729\n652    2   NA    3    3  9.827114   0   4    &lt;NA&gt; 731\n653    3    3    2    2 10.646740   1   4    &lt;NA&gt; 732\n654    2    4    2    1 10.350377   0   4    &lt;NA&gt; 733\n655    3    3    2    2 10.019486   1   4    &lt;NA&gt; 734\n656    3    2    2    2  9.739026   1   4    &lt;NA&gt; 735\n657    2    3    3    4  8.826410   0   4    &lt;NA&gt; 736\n658    2    2    3    3  8.191695   1   4    &lt;NA&gt; 737\n659    2    2    3    3  9.700108   0   4    &lt;NA&gt; 738\n660    2    2    3    3  8.267847   0   4    &lt;NA&gt; 739\n661    3    4    2    2  8.238960   1   4    &lt;NA&gt; 740\n662    3    4    2    3  8.657699   1   4         741\n663    2    2    3    3 12.724873   1   4         742\n664    1    1    3    3  9.056560   1   4         743\n665    2    1    3    3 10.776392   1   4         744\n666    3    2    2    3 11.332372   0   4         745\n667    3    3    2    2  9.605044   0   4         746\n668    3    3    2    2 12.553403   0   4         747\n669    3    3    3    2  8.607291   1   4         748\n670    3    3    3    2 12.253184   1   4         750\n\n\nFor the whole data set:\n\nexDatnoNA &lt;- exDat |&gt;\n  dplyr::filter() |&gt;\n  na.omit()\nexDatnoNA\n\n    msc1 msc2 msc3 msc4       age sex edu   fLang  id\n1      2    3    2    2  9.815538   0   0  german   1\n2      3    2    1    1  8.980194   1   0  german   2\n3      2    2    3    3 12.758157   0   0  german   3\n4      2    2    3    2 10.578846   0   0  german   4\n5      3    2    2    2  9.894364   1   0  german   5\n6      3    3    3    2 10.446850   0   0  german   6\n7      4    4    1    2 10.897605   1   0  german   7\n8      3    3    2    1  7.977382   1   0  german   8\n10     3    3    2    2  9.105864   0   0  german  10\n11     2    1    3    3  8.540117   0   0  german  11\n12     2    2    3    3 11.841954   0   0  german  12\n13     2    2    3    4 11.647655   0   0  german  13\n14     2    3    3    3 11.745306   0   0  german  14\n15     2    3    3    3  9.970630   0   0  german  15\n17     2    2    2    2  7.773473   1   0  german  17\n19     2    2    3    3  9.339448   0   0  german  19\n21     4    3    2    2  9.831947   0   0  german  21\n22     2    3    3    3  9.890266   1   0  german  22\n23     2    3    2    2 11.501609   0   0  german  23\n25     3    3    2    2 11.540030   1   0  german  25\n26     2    3    3    3 10.098491   1   0  german  26\n27     4    3    2    2 10.851320   1   0  german  27\n28     3    2    2    2  6.735228   1   0  german  28\n29     3    4    2    2 10.690059   1   0  german  29\n30     3    2    2    3  9.746659   1   0  german  30\n31     2    1    4    4  8.983450   0   0  german  31\n33     2    2    3    2  8.057455   1   0  german  33\n34     2    2    3    3 10.134752   0   0  german  34\n35     2    3    3    2  8.096160   0   0  german  35\n37     3    3    3    3 12.156118   0   0  german  37\n38     2    2    3    2  9.600157   0   0  german  38\n39     2    3    3    3 11.591400   0   0  german  39\n40     3    4    2    2 10.691193   1   0  german  40\n41     3    3    3    2 12.622380   0   0  german  41\n42     3    2    2    2 10.043774   1   0  german  42\n43     4    3    2    2  8.452508   0   0  german  43\n44     4    3    2    2 12.029754   1   0  german  44\n45     3    2    3    3  8.213722   1   0  german  45\n46     2    3    2    3 11.654911   0   0  german  46\n47     4    3    1    1  9.086209   1   0  german  47\n49     2    3    3    3  9.617718   0   0  german  49\n50     2    3    2    2 10.347768   1   0  german  50\n51     2    1    3    3 10.735626   0   1  german  51\n52     3    3    3    2 10.903281   1   1  german  52\n54     2    3    4    3 10.824752   0   1  german  54\n55     3    3    3    3  9.282584   0   1  german  55\n57     2    3    3    3  8.747505   1   1  german  57\n58     2    2    3    4  8.992998   1   1  german  58\n59     2    2    3    3 12.632563   1   1  german  59\n60     2    2    3    3 11.015445   1   1  german  60\n61     3    3    2    2  9.529734   1   1  german  61\n62     4    3    1    1 11.569437   1   1  german  62\n63     4    3    2    2 11.626011   1   1  german  63\n65     2    2    2    3  8.712209   1   1  german  65\n66     1    2    3    2 12.271368   0   1  german  66\n67     3    3    2    2 11.514336   1   1  german  67\n69     2    2    2    2 10.858827   1   1  german  69\n70     2    2    3    4 11.416986   0   1  german  70\n72     2    3    3    3  9.417725   1   1  german  72\n73     4    3    1    2 10.788379   1   1  german  73\n74     2    3    2    2  7.527881   1   1  german  74\n75     2    2    3    3  7.697320   0   1  german  75\n76     3    4    3    2  9.723288   1   1  german  76\n78     3    3    3    3  9.552697   1   1  german  78\n79     3    3    3    3 10.766935   1   1  german  79\n81     2    3    2    2 10.027268   0   1  german  81\n82     4    3    2    2 11.108152   1   1  german  82\n83     3    3    2    2  9.364853   1   1  german  83\n85     4    3    1    1  8.791437   0   1  german  85\n86     2    2    3    3 14.699514   1   1  german  86\n87     1    2    4    3  9.310963   0   1  german  87\n89     3    4    1    2  9.164070   0   1  german  89\n90     3    2    3    2  9.904690   0   1  german  90\n91     1    2    3    3  9.949049   0   1  german  91\n92     1    2    3    2 10.874213   0   1  german  92\n93     2    3    3    3  9.589440   0   1  german  93\n94     2    2    3    3  8.396720   0   1  german  94\n95     1    2    3    3  8.633062   1   1  german  95\n96     3    4    2    2 10.174559   1   1  german  96\n98     4    3    2    2  6.022669   1   1  german  98\n99     3    3    2    2 10.701638   1   1  german  99\n101    2    3    3    3 11.536565   0   1  german 101\n103    2    2    3    3  7.082311   1   1  german 103\n104    3    3    2    3  7.990254   1   1  german 104\n105    2    2    3    3 13.223930   1   1  german 105\n106    2    3    2    3  8.847114   0   1  german 106\n109    2    2    3    2  8.917741   1   1  german 109\n110    2    2    3    4  9.059646   0   1  german 110\n115    2    2    3    3  8.336241   0   1  german 115\n116    3    3    2    2 12.158201   1   1  german 116\n118    2    2    4    3 11.067872   1   1  german 118\n120    3    2    3    2  9.562434   0   1  german 120\n121    3    3    3    2  8.977396   0   1  german 121\n122    3    2    3    2 10.162202   0   1  german 122\n123    3    3    3    2  9.885336   0   1  german 123\n124    3    2    3    3 12.560990   1   1  german 124\n125    2    2    4    4 11.087431   1   1  german 125\n126    3    3    4    3 10.371456   1   1  german 126\n127    3    4    1    2  9.319275   1   1  german 127\n128    2    2    2    3 11.008828   1   1  german 128\n129    1    2    3    2  9.656535   0   1  german 129\n130    1    2    3    4 10.032404   0   1  german 130\n131    2    2    3    3  6.974716   1   1  german 131\n132    3    2    2    3  9.168019   1   1  german 132\n133    2    1    3    4 10.658201   1   1  german 133\n134    3    2    2    2 10.723573   1   1  german 134\n135    1    2    4    3  9.564175   1   1  german 135\n136    2    3    3    2  9.440463   1   1  german 136\n137    1    2    3    4  8.574188   1   1  german 137\n138    2    2    3    3  8.336412   0   1  german 138\n139    3    2    2    2 11.316498   0   1  german 139\n140    4    3    2    2 10.089194   1   1  german 140\n141    3    3    2    2 11.326115   0   1  german 141\n142    2    3    2    2 10.544879   1   1  german 142\n143    4    3    2    2  8.278763   0   1  german 143\n144    3    3    2    2  9.165442   0   1  german 144\n145    3    4    2    2 14.840083   0   1  german 145\n146    4    4    1    1  9.177470   0   1  german 146\n147    2    3    1    1 10.392509   1   1  german 147\n148    3    3    2    3 10.074265   1   1  german 148\n151    2    2    3    3 11.303224   0   2  german 151\n152    3    3    2    2  8.301101   0   2  german 152\n153    3    4    2    2 11.552966   1   2  german 153\n154    3    3    2    2 10.420355   1   2  german 154\n155    3    4    2    2 12.648300   1   2  german 155\n156    2    2    3    2  9.985757   1   2  german 156\n157    2    3    2    2 10.504636   0   2  german 157\n159    2    2    3    3  9.576623   0   2  german 159\n160    3    3    2    2 12.855773   1   2  german 160\n161    2    1    3    4 10.131071   0   2  german 161\n162    2    3    3    3 11.018442   1   2  german 162\n163    3    3    2    2 10.910317   1   2  german 163\n165    3    2    3    3 10.402108   1   2  german 165\n166    2    2    3    2 11.020302   0   2  german 166\n167    2    2    3    3 10.862003   1   2  german 167\n171    3    3    2    1 11.156488   1   2  german 171\n172    1    2    3    3 11.774043   0   2  german 172\n173    3    2    3    2  9.014673   0   2  german 173\n174    4    4    1    1  9.755259   1   2  german 174\n175    3    3    3    3  7.710862   0   2  german 175\n176    1    1    4    4 11.418964   1   2  german 176\n177    1    2    4    3 10.702477   0   2  german 177\n178    3    2    3    2 11.237905   1   2  german 178\n179    3    1    2    2  9.225546   0   2  german 179\n180    3    3    2    2  9.673228   0   2  german 180\n181    2    3    2    2  9.358897   0   2  german 181\n182    3    2    3    3  9.252146   1   2  german 182\n183    2    2    3    3  8.616693   0   2  german 183\n184    3    4    2    2 10.721936   0   2  german 184\n185    3    3    2    2 11.054393   0   2  german 185\n186    1    1    4    4  8.094315   1   2  german 186\n187    3    3    1    2  9.231779   0   2  german 187\n188    3    3    2    2  8.547865   1   2  german 188\n189    3    3    3    3 10.345779   0   2  german 189\n191    2    2    3    4 10.411992   0   2  german 191\n192    3    3    2    3  8.971620   1   2  german 192\n193    1    2    4    4 10.898386   0   2  german 193\n194    2    2    3    3 10.625394   1   2  german 194\n195    2    2    3    4  6.357136   0   2  german 195\n196    1    2    3    3 12.102026   1   2  german 196\n198    2    3    3    3  6.586317   1   2  german 198\n199    3    3    3    2  9.050529   1   2  german 199\n200    2    2    3    3 12.723541   1   2  german 200\n202    2    2    2    2 13.303115   1   2  german 202\n204    3    3    2    2 11.445677   0   2  german 204\n205    2    2    2    2  9.306572   0   2  german 205\n206    3    1    3    3  8.328087   0   2  german 206\n207    3    4    1    2 10.359319   0   2  german 207\n209    2    2    3    2  9.748836   1   2  german 209\n210    2    2    3    3 11.357677   0   2  german 210\n211    3    3    2    2  9.790493   1   2  german 211\n212    3    3    3    3  8.325024   0   2  german 212\n213    2    2    2    2  9.281008   1   2  german 213\n214    3    2    2    2 13.164568   0   2  german 214\n215    2    2    2    2  7.828867   0   2  german 215\n216    3    3    3    3 10.665805   0   2  german 216\n217    2    1    3    3 10.635206   1   2  german 217\n219    2    2    2    3  8.923574   0   2  german 219\n223    3    3    3    2 10.397873   1   2  german 223\n224    4    3    2    2 10.241358   1   2  german 224\n225    3    3    2    1  9.874614   1   2  german 225\n226    2    3    2    2  9.251216   0   2  german 226\n227    3    2    2    2 11.927287   0   2  german 227\n228    4    4    2    2 10.327432   0   2  german 228\n229    3    2    3    2  6.475004   0   2  german 229\n230    2    3    3    3 11.338842   0   2  german 230\n232    3    3    2    2  7.933710   0   2  german 232\n233    2    3    3    3 10.721250   1   2  german 233\n234    3    2    3    3  8.086553   0   2  german 234\n237    2    2    2    3 11.260712   0   2  german 237\n240    2    3    2    3  9.606693   1   2  german 240\n241    2    2    2    2  9.965807   1   2  german 241\n243    2    2    2    2 11.588374   1   2  german 243\n244    2    1    3    3 12.054486   0   2  german 244\n245    2    1    3    2  8.551229   1   2  german 245\n246    1    1    4    4 14.758472   1   2  german 246\n247    3    3    2    1 10.601619   1   2  german 247\n248    2    3    2    3  9.608768   1   2  german 248\n249    2    2    3    4 10.631563   0   2  german 249\n250    3    4    1    1  9.195155   0   2  german 250\n251    3    2    3    3 12.153778   1   2  german 251\n252    2    1    4    4 11.594112   1   2  german 252\n253    3    3    2    2 12.749052   0   2  german 253\n254    2    1    3    3 10.904641   1   2  german 254\n256    3    3    1    1  9.382583   1   2  german 256\n257    2    2    4    3 10.075463   1   2  german 257\n260    3    3    2    2 10.003249   0   2  german 260\n261    2    2    3    3 10.357645   0   2  german 261\n262    1    2    3    3 11.427154   0   2  german 262\n263    1    2    4    3 11.141758   1   2  german 263\n264    2    2    3    3 11.717822   0   2  german 264\n265    3    3    2    1  8.591719   1   2  german 265\n266    4    3    2    2  7.199316   1   2  german 266\n270    3    2    1    1  9.901684   1   2  german 270\n271    2    2    2    3 11.543191   1   2  german 271\n272    3    2    3    2  9.905296   0   2  german 272\n273    3    3    2    2 10.804370   0   2  german 273\n274    3    3    1    1  9.135004   1   2  german 274\n277    4    4    2    2 10.110370   1   2  german 277\n278    2    3    3    3  8.910521   1   2  german 278\n279    3    3    2    2 11.335096   0   2  german 279\n280    2    3    3    3 10.872968   1   2  german 280\n281    3    3    2    2  9.550622   0   2  german 281\n284    2    2    2    2  9.628909   0   2  german 284\n285    2    2    3    3 13.948810   0   2  german 285\n287    3    2    2    2  9.487855   1   2  german 287\n288    3    3    3    2 10.250928   0   2  german 288\n289    3    2    3    3 10.038493   0   2  german 289\n291    3    3    2    3 11.294503   1   2  german 291\n292    2    2    3    3 12.974758   0   2  german 292\n293    3    3    2    2 10.285506   0   2  german 293\n294    3    2    3    3 10.156128   1   2  german 294\n295    3    4    3    3 10.477511   0   2  german 295\n296    2    2    3    4 11.463436   0   2  german 296\n297    2    3    2    2 10.958489   0   2  german 297\n298    3    2    2    2  8.164545   0   2  german 298\n299    2    3    3    3 10.140617   0   2  german 299\n302    2    3    2    3  9.384978   1   3  german 302\n303    2    2    3    3  7.993749   1   3  german 303\n304    2    3    3    3  6.955896   1   3  german 304\n305    4    3    2    2 10.535078   0   3  german 305\n308    4    4    1    1 10.504347   1   3  german 308\n309    2    3    2    2  9.939982   0   3  german 309\n310    3    3    3    3 10.389400   1   3  german 310\n311    2    2    3    3  9.448678   1   3  german 311\n312    2    4    1    2 10.221263   1   3  german 312\n314    3    3    2    1 11.177018   1   3  german 314\n315    2    2    3    2  9.339305   0   3  german 315\n316    3    2    2    2  6.542470   1   3  german 316\n317    4    3    1    2  8.953333   1   3  german 317\n319    2    1    3    3  7.581036   0   3  german 319\n321    3    2    3    3 10.881096   1   3  german 321\n322    2    2    4    3  9.503126   1   3  german 322\n323    3    3    2    2 10.542913   1   3  german 323\n324    2    1    4    3  7.226064   1   3  german 324\n326    3    3    1    2 10.473550   1   3  german 326\n328    3    3    2    2 10.490264   0   3  german 328\n329    3    3    2    1 11.740022   1   3  german 329\n330    3    3    2    2 11.473238   0   3  german 330\n333    3    3    2    2  7.619042   0   3  german 333\n334    3    2    2    2  9.525225   1   3  german 334\n335    3    2    2    2  9.301695   1   3  german 335\n336    1    1    4    4 10.235494   1   3  german 336\n338    3    2    3    3 10.078303   0   3  german 338\n340    2    3    2    2  9.613427   0   3  german 340\n341    2    3    2    2 10.440469   1   3  german 341\n343    2    2    3    3  9.632019   0   3  german 343\n346    3    3    2    3 10.358045   0   3  german 346\n347    3    3    2    3  9.452587   0   3  german 347\n348    2    2    3    3 10.616298   0   3  german 348\n349    2    2    3    4 10.531881   1   3  german 349\n350    3    2    3    3 10.917065   0   3  german 350\n351    3    4    2    2  6.753558   1   3  german 351\n352    3    3    1    1  9.081102   1   3  german 352\n353    2    2    3    3  9.324282   0   3  german 353\n354    3    4    2    2  9.556236   1   3  german 354\n355    3    3    2    3  8.404846   1   3  german 355\n356    3    3    2    2  9.835171   1   3  german 356\n358    3    3    2    2  9.347660   1   3  german 358\n360    3    3    2    2  8.146446   0   3  german 360\n361    3    3    1    2  7.774709   1   3  german 361\n362    3    3    2    2  6.083013   1   3  german 362\n363    2    3    3    3  8.618334   1   3  german 363\n366    2    3    3    3 11.498595   0   3  german 366\n368    3    4    2    2 11.885905   0   3  german 368\n369    2    1    3    3 10.151313   0   3  german 369\n370    2    3    2    3  8.703436   1   3  german 370\n371    1    2    3    4 11.715882   1   3  german 371\n373    2    2    3    2  9.260014   0   3  german 373\n374    2    1    4    4 12.764876   0   3  german 374\n375    2    3    3    3 11.855908   0   3  german 375\n376    2    2    3    3 11.346669   1   3  german 376\n377    2    3    3    2 10.437059   0   3  german 377\n380    3    2    2    3 11.449698   0   3  german 380\n383    3    3    2    1 10.240093   1   3  german 383\n384    3    3    3    3 12.629684   0   3  german 384\n385    3    3    2    2 10.858224   0   3  german 385\n388    3    3    2    2  8.881271   1   3  german 388\n390    3    3    3    3 10.192251   0   3  german 390\n391    3    3    1    2 11.065900   0   3  german 391\n392    3    3    2    2 10.998406   1   3  german 392\n393    2    2    3    2  8.552346   1   3  german 393\n394    4    3    1    2  9.412805   0   3  german 394\n398    3    2    3    3  9.242431   1   3  german 398\n400    3    3    3    3 10.084902   1   3  german 400\n401    3    2    2    2 10.097882   0   3  german 401\n402    3    3    1    1 11.672478   0   3  german 402\n403    3    4    2    1 13.353267   0   3  german 403\n404    1    2    4    4 10.107733   0   3  german 404\n405    2    3    3    3 10.847647   0   3  german 405\n406    3    3    1    1  8.989002   1   3  german 406\n407    4    3    2    2  9.767775   0   3  german 407\n408    3    3    3    2  8.104969   1   3  german 408\n409    3    3    2    2 11.940227   0   3  german 409\n410    2    1    4    3  8.396467   1   3  german 410\n412    2    2    2    3  9.927729   1   3  german 412\n413    3    3    2    2  9.120070   0   3  german 413\n414    3    2    2    2  9.359507   1   3  german 414\n415    3    2    3    3  7.340234   0   3  german 415\n416    3    3    2    2  8.565667   1   3  german 416\n417    3    2    2    3 11.829203   1   3  german 417\n418    2    2    2    2  9.444976   1   3  german 418\n419    1    1    4    4  8.163760   1   3  german 419\n420    1    2    2    3  7.971904   0   3  german 420\n422    2    2    3    2 10.435981   1   3  german 422\n423    1    2    3    3 11.167197   0   3  german 423\n424    4    3    2    2  9.076633   0   3  german 424\n425    3    3    2    2  9.734855   0   3  german 425\n426    3    3    1    1  9.520808   0   3  german 426\n427    2    2    2    2  8.750194   0   3  german 427\n428    2    2    3    3 10.203757   1   3  german 428\n429    3    3    2    2  8.855370   0   3  german 429\n430    3    2    3    2 13.023492   1   3  german 430\n433    2    2    3    4  8.328651   1   3  german 433\n434    3    2    3    2  9.358613   0   3  german 434\n435    4    3    2    2 11.184436   0   3  german 435\n439    4    4    1    1  9.609236   0   3  german 439\n440    2    3    2    2  9.303808   0   3  german 440\n441    3    3    2    2 10.739005   0   3  german 441\n443    2    3    3    3 10.028578   1   3  german 443\n444    4    4    2    2 10.703093   1   3  german 444\n446    3    2    3    3 10.775893   1   3  german 446\n447    2    2    3    3 10.714497   0   3  german 447\n448    3    2    2    2  9.476227   0   3  german 448\n451    3    3    2    2  9.860913   0   3  german 451\n452    3    4    1    2  9.406198   1   3  german 452\n453    3    3    2    2  7.358570   0   3  german 453\n454    3    4    2    2  9.143064   1   3  german 454\n455    3    4    2    2 11.833885   0   3  german 455\n456    2    2    4    3 10.510292   1   3  german 456\n457    4    3    2    2 11.219608   1   3  german 457\n458    2    2    3    3 13.257474   0   3  german 458\n459    2    2    3    4  7.569693   0   3  german 459\n460    2    2    4    3 11.684286   1   3  german 460\n462    2    2    3    3  9.203611   1   3  german 462\n463    2    2    3    3 11.462454   1   3  german 463\n464    3    2    3    3  8.608740   1   3  german 464\n465    3    3    3    2  8.550825   0   3  german 465\n468    3    3    2    2  9.638242   0   3  german 468\n469    4    3    2    2 11.559736   0   3  german 469\n470    2    3    2    2  9.289579   1   3  german 470\n471    2    2    4    3 10.660731   0   3  german 471\n472    1    2    4    4  8.653708   1   3  german 472\n475    2    2    2    2 10.394297   0   3  german 475\n477    2    1    3    3 11.588138   1   3  german 477\n478    3    2    3    3  9.701818   1   3  german 478\n479    2    2    3    3 10.131820   0   3  german 479\n480    3    2    2    3 11.851048   0   3  german 480\n481    2    2    3    3  8.094906   0   3  german 481\n482    2    3    2    3  6.522122   0   3  german 482\n484    3    2    2    2  7.171610   1   3  german 484\n485    4    3    1    2 10.449040   1   3  german 485\n486    3    3    2    2  8.565564   1   3  german 486\n487    2    3    2    3  9.692163   0   3  german 487\n488    2    3    3    2 10.544790   0   3  german 488\n489    1    1    4    4  9.152848   1   3  german 489\n492    3    4    2    2 12.157326   1   3  german 492\n493    2    2    4    3  8.071642   1   3  german 493\n496    2    2    2    2  9.657121   1   3  german 496\n497    2    2    3    3  8.421820   1   3  german 497\n498    2    2    3    2 11.234864   0   3  german 498\n499    3    3    3    2 11.684493   1   3  german 499\n501    3    2    3    3  9.518572   0   4  german 501\n503    3    2    2    2  9.394796   1   4  german 503\n504    3    2    2    2 10.871842   0   4  german 504\n505    3    3    1    1 11.807168   1   4  german 505\n507    2    3    3    3 11.295793   0   4  german 507\n508    3    2    3    3  9.704389   1   4  german 508\n509    3    3    2    1 12.982000   1   4  german 509\n510    3    2    2    3  8.051677   0   4  german 510\n511    2    3    3    3 10.134297   1   4  german 511\n512    2    3    2    2 10.915921   0   4  german 512\n514    3    2    3    3  9.377179   1   4  german 514\n516    2    2    3    3  9.799799   0   4  german 516\n517    2    2    3    3  9.352013   0   4  german 517\n518    3    2    3    3  7.578805   0   4  german 518\n519    2    3    3    2  8.955748   0   4  german 519\n520    3    3    1    2  7.345759   1   4  german 520\n521    2    3    3    2  9.038828   0   4  german 521\n522    3    2    3    3  6.462564   0   4  german 522\n523    3    3    2    2  8.710578   0   4  german 523\n524    2    2    3    3  8.078165   1   4  german 524\n525    3    3    3    3  9.308461   0   4  german 525\n526    2    3    3    2  9.621561   0   4  german 526\n527    2    3    2    2 10.468559   1   4  german 527\n528    2    2    4    3 12.527006   0   4  german 528\n529    1    1    4    4  9.713401   0   4  german 529\n530    2    3    2    3 12.449355   1   4  german 530\n531    4    3    1    2 10.171527   1   4  german 531\n532    2    2    4    3 11.592511   1   4  german 532\n533    2    2    3    3  9.746639   0   4  german 533\n534    2    2    2    3 11.539024   0   4  german 534\n535    3    4    1    1 12.662389   1   4  german 535\n536    3    3    2    2  8.558018   1   4  german 536\n537    3    4    1    2 12.490442   0   4  german 537\n538    3    4    2    2  8.849825   1   4  german 538\n540    2    2    2    3  9.856794   1   4  german 540\n542    2    3    2    3 10.455994   0   4  german 542\n543    3    3    1    2  8.953355   0   4  german 543\n544    3    3    2    2 10.233466   1   4  german 544\n546    3    3    2    1 11.511366   0   4  german 546\n547    3    3    2    2  7.030045   0   4  german 547\n548    2    1    4    4 11.833564   0   4  german 548\n550    2    3    2    2 10.669845   1   4  german 550\n551    3    3    3    2 11.945497   0   4  german 551\n552    3    3    1    1  7.631776   0   4  german 552\n553    2    2    3    3  7.929047   0   4  german 553\n554    2    3    2    2 10.655136   1   4  german 554\n555    4    4    1    1 11.651111   1   4  german 555\n556    3    3    2    2  9.499631   0   4  german 556\n557    2    3    2    3  9.869376   1   4  german 557\n558    3    3    1    2 10.573739   0   4  german 558\n559    2    2    3    4  6.777733   0   4  german 559\n560    3    3    2    1 10.292540   0   4  german 560\n561    3    2    3    2  8.420615   0   4  german 561\n565    3    3    2    2  9.567283   1   4  german 565\n566    3    2    2    2  9.700664   1   4  german 566\n567    2    2    4    3  9.035493   1   4  german 567\n568    2    2    3    3  6.920118   0   4  german 568\n571    4    4    1    1 11.561428   0   4  german 571\n572    3    2    2    2 10.479614   1   4  german 572\n573    3    2    2    3 12.062231   0   4  german 573\n574    3    3    3    2 11.258923   1   4  german 574\n575    2    2    3    3  8.535113   1   4  german 575\n577    3    3    2    2  9.513192   0   4  german 577\n581    1    2    3    3  7.840196   1   4  german 581\n583    2    3    3    3 11.716523   1   4  german 583\n584    2    2    3    3 10.115714   0   4  german 584\n585    2    1    2    3 10.487666   1   4  german 585\n586    3    3    2    2 10.129045   1   4  german 586\n587    4    3    2    2 10.213173   0   4  german 587\n588    1    1    3    3 12.114688   1   4  german 588\n589    2    2    3    3 11.655211   0   4  german 589\n590    1    2    4    4 10.474828   1   4  german 590\n591    2    3    3    2  9.222274   0   4  german 591\n592    3    3    3    3 10.053230   0   4  german 592\n595    3    3    3    2 10.611019   0   4  german 595\n598    2    3    3    3 12.403272   0   4  german 598\n600    4    3    1    1 30.000000   0   4  german 600\n602    3    2    3    3  9.797451   0   4  german 602\n604    2    3    3    3  5.697734   1   4  german 604\n605    4    3    3    2 11.315240   0   4  german 605\n606    3    3    2    2  9.398728   0   4  german 606\n608    3    4    2    1  7.712797   0   4  german 608\n609    4    3    2    2 11.397924   1   4  german 609\n612    2    1    4    3  8.434417   1   4  german 612\n613    2    2    3    3  9.741397   1   4  german 613\n616    3    3    2    2  8.498451   0   4  german 616\n617    1    2    3    3 10.447842   0   4  german 617\n618    3    3    3    3  6.916193   0   4  german 618\n619    3    2    3    3  7.967729   0   4  german 619\n620    2    2    3    3 10.971877   0   4  german 620\n621    1    2    3    3 10.036674   1   4  german 621\n622    4    4    1    2 11.171656   0   4  german 622\n623    2    2    3    3  9.809559   1   4  german 623\n624    3    2    2    2  8.970928   0   4  german 624\n625    2    2    4    4 10.715082   0   4  german 625\n626    3    3    3    2  7.928970   1   4  german 626\n627    2    3    3    3  6.909529   1   4  german 627\n628    2    3    3    2 10.799244   0   4  german 628\n630    2    2    2    1 12.505498   0   4  german 630\n631    4    4    1    1  9.779263   1   4  german 631\n632    3    3    2    3  9.474470   0   4  german 632\n633    2    2    3    3 12.139497   0   4  german 633\n634    3    3    3    2 11.067315   0   4  german 634\n635    3    4    2    3  8.320202   0   4  german 635\n636    3    2    2    2  7.182648   1   4  german 636\n637    2    2    4    4 10.130177   0   4  german 637\n638    3    3    3    3 12.496180   0   4  german 638\n639    2    2    3    3 12.592766   0   4  german 639\n640    2    2    2    3  9.907003   0   4  german 640\n641    3    2    3    3 11.737818   1   4  german 641\n642    3    2    2    1  8.821091   0   4  german 642\n643    2    3    3    2  6.860783   0   4  german 643\n644    3    2    3    3 10.268927   1   4  german 644\n645    3    3    2    2 10.266885   1   4  german 645\n646    3    3    2    2  5.763412   0   4  german 646\n647    3    2    2    2  7.066767   1   4  german 647\n648    3    3    3    2  9.180560   0   4  german 648\n649    3    3    2    2 12.972046   1   4  german 649\n651    3    3    2    2 11.411023   1   4     ger 651\n652    2    2    2    3 10.049973   0   4     ger 652\n653    2    2    3    2 11.337266   0   4     ger 653\n654    3    3    3    3 13.679508   0   4     ger 654\n655    2    3    3    3  8.168574   1   4     ger 655\n657    2    3    3    3  9.269406   0   4     ger 657\n659    3    3    2    2  8.932260   1   4     ger 659\n660    3    3    1    2  7.922082   0   4     ger 660\n661    2    2    3    3 11.825439   0   4     ger 661\n663    2    1    3    3 13.418967   0   4     ger 663\n664    3    2    3    3 12.795091   0   4     ger 664\n665    2    3    3    3  9.076854   0   4     ger 665\n666    2    2    2    2  9.791845   1   4     ger 666\n667    2    3    2    2  7.201118   0   4     ger 667\n669    3    3    3    3 11.357964   1   4     ger 669\n670    3    3    2    2 10.881354   0   4     ger 670\n671    2    1    3    3 10.379563   0   4     ger 671\n674    3    3    3    2  8.146615   1   4     ger 674\n675    2    3    2    2  9.175585   0   4     ger 675\n676    2    2    4    4 12.131668   1   4     ger 676\n678    1    2    3    3 11.473233   1   4     ger 678\n679    3    3    2    3  9.506655   1   4     ger 679\n680    2    3    2    2 10.030170   0   4     ger 680\n682    1    1    3    4 10.668823   0   4     ger 682\n683    2    3    3    3  9.386863   1   4     ger 683\n684    2    2    3    3  7.093356   1   4     ger 684\n685    2    2    3    3 12.640182   1   4     ger 685\n686    1    2    3    3  8.807493   1   4     ger 686\n687    3    3    3    3 14.291764   0   4     ger 687\n689    3    3    2    3  5.439760   0   4     ger 689\n691    2    2    3    3  8.718412   1   4     ger 691\n692    3    3    2    2  8.041810   1   4     ger 692\n694    3    2    3    3 10.982985   1   4     ger 694\n695    1    2    2    3 10.007353   0   4     ger 695\n696    3    2    2    2  8.467930   0   4     ger 696\n698    2    2    3    3 10.826550   1   4     ger 698\n699    3    2    2    2  9.543067   1   4     ger 699\n700    3    3    1    2 10.025428   1   4   germn 700\n701    2    3    3    3 10.668717   1   4 italian 701\n702    3    3    3    3 10.518729   1   4 italian 702\n703    3    3    2    2 10.808743   1   4 italian 703\n704    2    2    2    2  7.725368   1   4 italian 704\n705    3    3    2    3 10.498354   1   4 italian 705\n707    3    4    2    2 11.808316   1   4 italian 707\n708    2    2    4    4  9.354355   0   4 italian 708\n709    1    1    4    4  6.893923   0   4 italian 709\n710    2    3    2    3 10.715373   1   4 italian 710\n712    2    3    2    3 10.579138   1   4  french 712\n713    3    2    3    3  7.743470   1   4  french 713\n715    3    3    1    2 11.443266   1   4  french 715\n716    3    2    3    3 10.739886   0   4  french 716\n719    4    3    2    2  9.963483   1   4  french 719\n720    3    3    3    3 12.146356   0   4  french 720\n741    3    4    2    3  8.657699   1   4         741\n742    2    2    3    3 12.724873   1   4         742\n743    1    1    3    3  9.056560   1   4         743\n744    2    1    3    3 10.776392   1   4         744\n745    3    2    2    3 11.332372   0   4         745\n746    3    3    2    2  9.605044   0   4         746\n747    3    3    2    2 12.553403   0   4         747\n748    3    3    3    2  8.607291   1   4         748\n750    3    3    3    2 12.253184   1   4         750"
  },
  {
    "objectID": "data-cleaning.html#plaus-checks",
    "href": "data-cleaning.html#plaus-checks",
    "title": "\n7  Data cleaning\n",
    "section": "\n7.6 Plausibility checks",
    "text": "7.6 Plausibility checks\nSo-called plausibility checks are performed in order to detect:\n\nstructural errors → e.g., the range of a lickert scale is from 1 to 4, but the value 5 occurs\n\ntheoretical inconsistencies → e.g., 30 years of age in sample of primary students\n\n(statistical) outliers → see Excursus on outlier below\n\n\n\n\n\n\n\n\nExcursus: Outliers\n\n\n\n\n\nAccording to wikipedia, outliers can be defined as a data point that differs significantly from other observations.\nOutliers may occur due to different reasons:\n\ndata entry errors\nmeasurement error\n“true” extreme values\n\nOutliers must be detected, because they may introduce bias into parameter estimates of statistical models and hence, compromise the validity of the results.\nDifferent ways of detecting outliers:\n\nZ-score (e.g., above or below \\(3SD\\))\nVisualization (e.g., box plots, histograms, or scatter plot)\nMahalanobis distance\n…\n\n\n\n\nPlausibility checks can be performed both analytically and graphically. Graphics can be created with base R (R Core Team, 2023), or packages such as lattice (Sarkar, 2021) and ggplot2 (Wickham, Chang, et al., 2023) that are specifically designed for data visualization. Although base R graphics are useful (especially for creating simple plots), ggplot2 more powerful and flexible for creating complex visualizations. You may load the package via:\n\nlibrary(ggplot2)\n\nNote that ggplot2 package (Wickham, Chang, et al., 2023) is part of the tidyverse and it nicely works with the dplyr package (Wickham, François, et al., 2023). For an introduction see the tidyverse documentation of ggplot2.\nTo perform plausibility checks analytically, the range function is a useful starting point to quickly examine the minimum and maximum of variables that are no characters/string variables (i.e., !is.character).\n\n\nBase R\ndplyr package\n\n\n\n\nIdentify all non-character variables using the !is.character function within a lapply loop. Because lapply returns a list, we need to unlist the output to get a logical vector.\n\n\nnChrV &lt;- unlist(lapply(exDatMis,\n                         function(x) !is.character(x)),\n                use.names = FALSE)\n#class(nChrV)\n\n\nThen we can apply the range function to the respective variable within the exDatMis.\n\n\n\n\n\n\n\nTip: The apply function\n\n\n\n\n\nThe apply function is designed to apply functions (e.g., range) over array margins (e.g., rows or columns) and needs the following arguments (copied from the function description):\n\n\nX: an array, including a matrix.\n\nMARGIN: a vector giving the subscripts which the function will be applied over. E.g., for a matrix 1 indicates rows, 2 indicates columns, c(1, 2) indicates rows and columns. Where X has named dimnames, it can be a character vector selecting dimension names.\n\nFUN: the function to be applied: see ‘Details’.\n\n\n\n\n\napply(exDatMis[,nChrV],\n      2,\n      FUN = range, na.rm=TRUE)\n\n     msc1 msc2 msc3 msc4      age sex edu  id\n[1,]    1    1    1    1  5.43976   0   0   1\n[2,]    4    4    4    4 30.00000   1   4 750\n\n\n\n\nIn the dplyr package we first use the select function (i.e., to select the variables) in combination with where function to identify all non-character variables by stating !is.character. Then applying the range function on very variable in the data set.\n\nexDatMis |&gt;\n  dplyr::select(\n    dplyr::where(~!is.character(.))\n    ) |&gt;\n  dplyr::summarise_all(\"range\", na.rm = TRUE)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the dplyr package.\n  Please report the issue at &lt;https://github.com/tidyverse/dplyr/issues&gt;.\n\n\n  msc1 msc2 msc3 msc4      age sex edu  id\n1    1    1    1    1  5.43976   0   0   1\n2    4    4    4    4 30.00000   1   4 750\n\n\n\n\n\n\n\n\n\n\n\nExercise: Set the value 30 of the age variable to NA.\n\n\n\n\n\n\nIdentify the observation with age == 30, using the which function.\n\n\nexDat[which(exDat$age == 30),c(\"id\", \"age\")]\n\n     id age\n600 600  30\n\n\n\nSet the value 30 to NA\n\n\n\nexDat[which(exDat$age == 30),\"age\"] &lt;- NA\n\n\n\n\n\n7.6.1 Categorical variables\n\n7.6.1.1 Frequencies/Counts\nTo do further plausibility checks on categorical variables, we may examine counts (at each combination) of factor levels (e.g., examine extreme responses in one category).\n\n\nBase R\ndplyr package\n\n\n\nThe table function builds a contingency table of the counts at each combination of factor levels.\n\n\n\n\n\n\nNote that by default, NAs are not included in the table function. To include NAs, we need to change the useNA argument to \"ifany\" (only if the count is positive) or \"always\" (even for zero counts).\n\n\n\n\ntable(exDatMis$edu, useNA = \"always\")\n\n\n   0    1    2    3    4 &lt;NA&gt; \n  46  100  150  200  250    4 \n\n\n\n\nThe dplyr approach is using the count function that counts the unique values of one or more variables.\n\nexDatMis |&gt;\n  dplyr::count(edu) \n\n  edu   n\n1   0  46\n2   1 100\n3   2 150\n4   3 200\n5   4 250\n6  NA   4\n\n\n\n\n\n\n7.6.1.2 Graphical inspection using bar charts\nBar charts are one way of graphically checking the plausibility of discrete variables.\n\n\nBase R\nggplot2 package\n\n\n\n\nbarplot(\n  height = table(exDat$edu, useNA = \"always\"),\n  names.arg = c(0:4, \"NA\"),\n  #main = \"Education in example data set (barplot)\", # plot title\n  xlab = \"edu\", # x-axis label\n  ylab = \"Count\",  # y-axis label\n  ylim = c(0, 300) # y-axis range\n  )\n\n\n\nFigure 7.2: Frequencies of the variable education in the example data set (barplot)\n\n\n\n\n\n\n\nexDat |&gt;\n  dplyr::count(edu) |&gt;\n  ggplot(aes(x = edu, y = n)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"lightgrey\") +\n  geom_text(aes(label=paste(\"n = \", n)), vjust=1.6, color=\"black\", size=3.5)+\n  labs(x = \"edu\", y = \"Count\") +\n  theme_classic()\n\n\n\nFigure 7.3: Frequencies of the variable education in the example data set (ggplot2)\n\n\n\n\n\n\n\n\n7.6.2 Continuous variables\nContinuous variables are checked by examining the distribution of the variables. It is reasonable to start checking the range (i.e., minimum & maximum) of the variable (using the range function, see e.g., above).\n\n7.6.2.1 Distribution parameters/measures\nFurthermore, the following Distribution parameters/measures might be informative:\n\nlocation: mean, median → base::mean, stats::median\n\ndispersion: standard deviation, variance → stats::sd, stats::var\n\nshape (asymmetry): skewness → moments::skewness\n\nshape (tailedness): kurtosis → moments::kurtosis\n\n\nIn the following, we show how to examine the skewness and kurtosis. The calculation of the other parameters is introduced in the section on Descriptive statistics and item analysis.\n\n\n\nmoments::skewness(exDat$age,\n                  na.rm = T)\n\n[1] -0.06354551\n\n\n\n\n\n\nmoments::kurtosis(exDat$age,\n                  na.rm = T)\n\n[1] 3.085664\n\n\n\n\nWhat are the cutoffs for skewness and kurtosis? It depends on the specific context…\n\nSkewness: 0 (perfect symmetry) → cutoff: 1-2\n\n\n\\(&gt; 0\\): right-skewed distributions\n\n\\(&lt; 0\\): left-skewed distributions\n\n\nKurtosis: 3 (perfect normal distribution) → cutoff: 6-7\n\n\n\\(&gt; 3\\): more peaked distribution\n\n\\(&lt; 3\\): a flatter distribution\n\n\n\n(Reference needed)\n\n7.6.2.2 Graphical inspection using histogram\nHistograms are graphical representations of frequency (or relative frequency) distributions of variables and are used to visualize the shape of a distribution.\n\n\nBase R\nggplot2 package\n\n\n\n\nhist(exDat$age,\n     main = \"Age in example data set\",\n     breaks = 20,\n     xlim = c(min(round(exDat$age), na.rm = T) - 1,\n              max(round(exDat$age), na.rm = T) + 1),\n     ylim = c(0, 100)\n     )\n\n\n\nFigure 7.4: Frequency distribution of age in example data set\n\n\n\n\n\n\n\nggplot(data = exDat, #na.omit\n       aes(x = age)) +\n  geom_histogram(bins = 100,\n                 binwidth = .5,\n                 color = \"black\",\n                 fill = \"white\") +\n  geom_vline(data = exDat, aes(xintercept = mean(age, na.rm = T)),\n             linetype=\"dashed\",\n             color=\"red\") +\n  scale_x_continuous(limits = c(\n    min(exDat$age,\n        na.rm = T)-1,\n    max(exDat$age,\n        na.rm = T)+1)) +\n  theme_minimal()\n\n\n\nFigure 7.5: Frequency distribution of age in example data set (ggplot2)\n\n\n\n\n\n\n\n\n7.6.2.3 Graphical inspection using boxplots\nBoxplots allow visualization of the most important robust measures of location and dispersion.\n\n\nBase R\nggplot2 package\n\n\n\n\nboxplot(exDat$age,\n        #main = \"plot title\",  \n        xlab = \"Variables\", # x-axis label\n        ylab = \"Range\" # y-axis label\n        )\n\n\n\nFigure 7.6: Boxplot of variable age in the example data set\n\n\n\n\n\n\n\nggplot(data = exDat, #na.omit\n       aes(y = age, x = factor(0))) +\n  geom_boxplot(width=.5, outlier.color = \"red\") +\n  #geom_jitter(width = .25, color = \"grey\", alpha = .2) +\n  scale_x_discrete(breaks = NULL) +\n  xlab(NULL) +\n  theme_bw()\n\n\n\nFigure 7.7: Boxplot of variable age in the example data set (ggplot2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnders, C. K. (2010). Applied missing data analysis. Guilford Press.\n\n\nEnders, C. K. (2023). Missing data: An update on the state of the art. Psychological Methods. https://doi.org/10.1037/met0000563\n\n\nR Core Team. (2023). R: A language and environment for statistical computing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRosseel, Y., Jorgensen, T. D., & Rockwood, N. (2023). Lavaan: Latent variable analysis. https://lavaan.ugent.be\n\n\nSarkar, D. (2021). Lattice: Trellis graphics for r. http://lattice.r-forge.r-project.org/\n\n\nSchafer, J. L., & Graham, J. W. (2002). Missing data: Our view of the state of the art. Psychological Methods, 7(2), 147–177. https://doi.org/10.1037/1082-989X.7.2.147\n\n\nvan Buuren, S., & Groothuis-Oudshoorn, K. (2021). Mice: Multivariate imputation by chained equations. https://CRAN.R-project.org/package=mice\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., & Dunnington, D. (2023). ggplot2: Create elegant data visualisations using the grammar of graphics. https://CRAN.R-project.org/package=ggplot2\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D. (2023). Dplyr: A grammar of data manipulation. https://CRAN.R-project.org/package=dplyr"
  },
  {
    "objectID": "data-cleaning.html#footnotes",
    "href": "data-cleaning.html#footnotes",
    "title": "\n7  Data cleaning\n",
    "section": "",
    "text": "Note that this is also recommended when designing a codebook, see here: https://datawizkb.leibniz-psychology.org↩︎"
  },
  {
    "objectID": "data-transform.html#build-var",
    "href": "data-transform.html#build-var",
    "title": "\n8  Data transformation\n",
    "section": "\n8.1 Building new variables",
    "text": "8.1 Building new variables\nTo build new variables and add them to a data set, we can use all functions and operators that R offers.\n\n\n\n\n\n\nCreate and delete objects.\n\n\n\n\n\nIn R, you can create objects (from existing ones) and store them as new objects using functions and operators. In the following example, we create the objects x and y and assign them numbers.\n\nx &lt;- 5\ny &lt;- 4\n\nThen we sum them up:\n\nxy &lt;- x+y\nxy\n\n[1] 9\n\n\nThis is the same as:\n\nsum(c(x,y)) == xy\n\n[1] TRUE\n\n\nFinally, we may delete all objects using the rm function.\n\nrm(x,y,xy)\n\n\n\n\nFor example, we might want to sum up item indicators to a so-called scale score (for now only the first 2; for a more detailed examination see the section Descriptive statistics and item analysis) and add them as a new column to the example data set exDat.\n\n\nBase R\ndplyr package\n\n\n\nThere are several ways to do that, for example:\n\nexDat$mscSum1 &lt;- exDat$msc1+exDat$msc2\nexDat$mscSum2 &lt;- with(exDat, msc1 + msc2)\nexDat[,\"mscSum3\"] &lt;- with(exDat, msc1 + msc2)\n\nmscSum4 &lt;- exDat$msc1+exDat$msc2\nexDat &lt;- cbind(exDat, mscSum4)\n\nexDat$mscSum5 &lt;- rowSums(exDat[,c(\"msc1\",\"msc2\")], na.rm = T)\n\nTo delete variables, you can use the NULL statement.\n\nexDat[,c(paste0(\"mscSum\", 1:5))] &lt;- NULL\n\n\n\nTo add a variable to a data set, we may use mutate function from the dplyr package.\nFrom the function description: dplyr::mutate creates new columns that are functions of existing variables. It can also modify (if the name is the same as an existing column) and delete columns (by setting their value to NULL).\nAdd the new variable mscSum6.\n\nexDat &lt;- exDat |&gt;\n  dplyr::mutate(mscSum6 = msc1 + msc2)\n\nDelete the variable mscSum6.\n\nexDat &lt;- exDat |&gt;\n  dplyr::mutate(mscSum6 = NULL)"
  },
  {
    "objectID": "data-transform.html#rec-var",
    "href": "data-transform.html#rec-var",
    "title": "\n8  Data transformation\n",
    "section": "\n8.2 Recoding variables",
    "text": "8.2 Recoding variables\nRecoding is the process of reassigning values (old → new) for a variable in a dataset.\nThe old values can either be overwritten by the new values or saved as a new variable.\n\n\n\n\n\n\nWe always create a new variable when we recode a variable!\n\n\n\n\n\n\nold values are not lost\n\nerrors during recoding can be reproduced\n\n\n\n\nA common approach to recode variables is to use the base::ifelse function. It requires 3 input arguments:\n\n\ntest: which is an object that can be coerced to logical mode\n\nyes: return values for true elements of test\n\nno: return values for false elements of test\n\nThe function returns a value with the same shape as test which is filled with elements selected from either yes or no depending on whether the element of test is TRUE or FALSE.\n\nShow/hide codeifelse(1 == 1,\n       yes = \"That is correct!\",\n       no = FALSE)\n\n[1] \"That is correct!\"\n\nShow/hide codeifelse(1 == c(1,2,3,1),\n       yes = \"That is correct!\",\n       no = FALSE)\n\n[1] \"That is correct!\" \"FALSE\"            \"FALSE\"            \"That is correct!\"\n\n\nTo apply the function in a more “meaningful” setting. Lets transform (i.e., recode) the variable age to a categorical variable (here: ageCat) with the categories: old and young. All units that are older than 10 are getting the value \"old\", otherwise they get the value \"young\".\n\nexDat$ageCat &lt;- ifelse (exDat$age &gt; 10, \"old\", \"young\")\ntable(exDat$ageCat)\n\n\n  old young \n  342   328 \n\n\nPsychological instruments often contain items that are designed to measure the opposite of the actual construct (e.g., “I am good at math.” vs. “I am bad at math.”). These items are called reverse-scored or negatively-keyed items. In the example data set exDat the variables msc3 and msc4 are (simulated as) reverse-scored and thus, need to be recoded.\nThe first step is to check the response categories.\n\ntable(exDat$msc3, useNA = \"always\")\n\n\n   1    2    3    4 &lt;NA&gt; \n  60  320  314   56    0 \n\n\n\n\nBase R\ncar package\ndplyr package\n\n\n\nIn this approach, we subtract the item from the sum of the maximum and minimum of the item (here is maximum = 4 minimum = 1).\n\nexDat$msc3r1 &lt;- sum(max(exDat$msc3,na.rm=T),\n                    min(exDat$msc3,na.rm=T)) - exDat$msc3 \n\n\n\n\n\n\n\nNote that this approach is not very robust across different recoding strategies. Also, when sample size is small and the categories are not used completely.\n\n\n\nIt is important to evaluate the result.\n\nwith(exDat, table(msc3, msc3r1))\n\n    msc3r1\nmsc3   1   2   3   4\n   1   0   0   0  60\n   2   0   0 320   0\n   3   0 314   0   0\n   4  56   0   0   0\n\n\n\n\nIn this approach, we use the recode function of the car package (Fox et al., 2022). This function needs at least 2 inputs (copied from the package description):\n\n\nvar: numeric vector, character vector, or factor.\n\nrecodes: character string of recode specifications\n\nThere are further additional arguments such as as.factor and as.numeric which direct the class of the output.\n\nexDat$msc3r2 &lt;- car::recode(var = exDat$msc3,\n                            recodes = \"\n                            1 = 4;\n                            2 = 3;\n                            3 = 2;\n                            4 = 1;\n                            NA = NA\",\n                            as.factor = FALSE,\n                            as.numeric = TRUE)\n\nAgain, evaluating the result.\n\nwith(exDat, table(msc3, msc3r2))\n\n    msc3r2\nmsc3   1   2   3   4\n   1   0   0   0  60\n   2   0   0 320   0\n   3   0 314   0   0\n   4  56   0   0   0\n\n\n\n\n\nexDat &lt;- exDat |&gt;\n  dplyr::mutate(\n    msc3r3 = dplyr::case_when(\n      msc3 == 1 ~ 4,\n      msc3 == 2 ~ 3,\n      msc3 == 3 ~ 2,\n      msc3 == 4 ~ 1\n      ))\n\nEvaluating the result.\n\nwith(exDat, table(msc3, msc3r3))\n\n    msc3r3\nmsc3   1   2   3   4\n   1   0   0   0  60\n   2   0   0 320   0\n   3   0 314   0   0\n   4  56   0   0   0\n\n\n\n\n\n\n\n\n(copied from the ?dplyr::recode function description)\ndplyr::recode is superseded in favor of dplyr::case_match, which handles the most important cases of dplyr::recode with a more elegant interface. dplyr::recode_factor is also superseded, however, its direct replacement is not currently available but will eventually live in forcats. For creating new variables based on logical vectors, use dplyr::if_else(). For even more complicated criteria, use dplyr::case_match."
  },
  {
    "objectID": "data-transform.html#working-with-stringscharacters",
    "href": "data-transform.html#working-with-stringscharacters",
    "title": "\n8  Data transformation\n",
    "section": "\n8.3 Working with strings/characters",
    "text": "8.3 Working with strings/characters\nadd cleanstring function\n\n\n\n\n\n\nFox, J., Weisberg, S., & Price, B. (2022). Car: Companion to applied regression. https://CRAN.R-project.org/package=car"
  },
  {
    "objectID": "item-analy-descr.html#descriptive-statistics",
    "href": "item-analy-descr.html#descriptive-statistics",
    "title": "9  Descriptive statistics and item analysis",
    "section": "\n9.1 Descriptive statistics",
    "text": "9.1 Descriptive statistics\nTypical descriptive statistics are:\n\nmean\nstandard deviation\nminimum and maximum\nabsolute and relative frequencies\n\nR provides functions to calculate the statistics: mean, sd, min, max, table, …\nIn addition, there are packages such as the psych package (Revelle, 2023) that offer additional functionality.\n\n\nBase R\npsych package\n\n\n\nFor example, if we want to calculate the mean and the standard deviation of the variable age, we can use the respective functions (i.e., mean & sd):\n\n\n\nmean(exDat$age, na.rm = T)\n\n[1] 10.03468\n\n\n\n\n\n\nsd(exDat$age, na.rm = T)\n\n[1] 1.756173\n\n\n\n\nOr, if you are interested in absolute and/or relative frequencies, we can use the table function:\n\n\n\ntable(exDat$sex)\n\n\n  0   1 \n357 354 \n\n\n\n\n\n\ntable(exDat$sex,\n      useNA = \"always\")/length(exDat$sex)*100\n\n\n   0    1 &lt;NA&gt; \n47.6 47.2  5.2 \n\n\n\n\nHowever, often you need to calculate the descriptive statistics not only for a single variable, but for many variables. Again, in R this can be done in many different ways. Here we depict a base R solution using the apply function (for more on the apply function see the Tip on the apply function).\nIn order to better retrace the calculation procedure, we present it in a two-step1 approach:\n\n\nTwo-step approach\nOne-step approach\n\n\n\n\nUsing the apply function and save the output in an object (here: exDescr):\n\nInput X is the example data set: exDat\n\nSet MARGIN value to 2, because we want to apply the function over columns of exDat\n\n\nFUN: Here we define a function2 that calculates the mean, standard deviation, minimum and maximum (combined through the c function). Within the braces { you can state several (consecutive) arguments. Finally, we return the object (fOut) of the function. Note the fOut object is not saved in the workspace.\n\n\n\n\nexDescr &lt;- apply(X = exDat[,1:5],\n                 MARGIN = 2,\n                 FUN = function(x) {\n                   fOut &lt;- c(\n                     mean(x, na.rm = T),\n                     sd(x, na.rm = T),\n                     min(x, na.rm = T),\n                     max(x, na.rm = T)\n                     )\n                   return(fOut)\n                   })\n\n\nIn the second step, we first transpose (t function) the returned matrix, transform it then to a data.frame3 object and provide the column names.\n\n\nexDescr &lt;- as.data.frame(\n  t(exDescr)\n  )\ncolnames(exDescr) &lt;- c(\"Mean\", \"SD\", \"Min\", \"Max\")\nexDescr\n\n          Mean        SD     Min Max\nmsc1  2.518667 0.7373668 1.00000   4\nmsc2  2.544118 0.7186516 1.00000   4\nmsc3  2.488000 0.7482887 1.00000   4\nmsc4  2.480000 0.7463306 1.00000   4\nage  10.034684 1.7561728 5.43976  30\n\n\n(3. Finally, if you need an formatted table, the kbl function from the kableExtra package (Zhu, 2021) transforms matrices or data frames into nice tables.)\n\nkableExtra::kbl(exDescr,\n                digits = 2,\n                caption = \"Descriptive Statistics of the example data set\") |&gt;\n  kableExtra::kable_classic() |&gt;\n  kableExtra::footnote(general = \"This is a nice formatted table using the kableExtra package [@R-kableExtra].\")\n\n\nDescriptive Statistics of the example data set\n\n\nMean\nSD\nMin\nMax\n\n\n\nmsc1\n2.52\n0.74\n1.00\n4\n\n\nmsc2\n2.54\n0.72\n1.00\n4\n\n\nmsc3\n2.49\n0.75\n1.00\n4\n\n\nmsc4\n2.48\n0.75\n1.00\n4\n\n\nage\n10.03\n1.76\n5.44\n30\n\n\n\n\nNote: \n\n\n\n\n\n\n\n This is a nice formatted table using the kableExtra package [@R-kableExtra].\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAlthough it is probably a matter of coding taste, we do not recommend such a “nesting” approach, because it is difficult to read and comprehend. We like it neat. See also the note on What is the pipe operator?.\n\n\n\nkableExtra::kbl(x = t(\n  apply(exDat[,1:5],\n        MARGIN = 2,\n        FUN = function(x) {\n          fOut &lt;- c(\n            mean(x, na.rm = T),\n            sd(x, na.rm = T),\n            min(x, na.rm = T),\n            max(x, na.rm = T)\n            )\n          return(fOut)\n          })\n  ),\n  digits = 2,\n  col.names = c(\"Mean\", \"SD\", \"Min\", \"Max\"),\n  caption = \"Descriptive Statistics of the example data set\") |&gt;\n  kableExtra::kable_classic() |&gt;\n  kableExtra::footnote(general = \"This is a nice formated table using the kableExtra package [@R-kableExtra].\")\n\n\nDescriptive Statistics of the example data set\n\n\nMean\nSD\nMin\nMax\n\n\n\nmsc1\n2.52\n0.74\n1.00\n4\n\n\nmsc2\n2.54\n0.72\n1.00\n4\n\n\nmsc3\n2.49\n0.75\n1.00\n4\n\n\nmsc4\n2.48\n0.75\n1.00\n4\n\n\nage\n10.03\n1.76\n5.44\n30\n\n\n\n\nNote: \n\n\n\n\n\n\n\n This is a nice formated table using the kableExtra package [@R-kableExtra].\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the function description (see ?psych::describe):\n\nThe describe function in the psych package is meant to produce the most frequently requested stats in psychometric and psychology studies, and to produce them in an easy to read data.frame. If a grouping variable is called for in formula mode, it will also call describeBy to the processing.\n\nThe function has many input argument (see again ?psych::describe), but requires only x: A data frame or matrix\n\npsych::describe(x = exDat)\n\n       vars   n   mean     sd median trimmed    mad  min max  range  skew\nmsc1      1 750   2.52   0.74   3.00    2.52   1.48 1.00   4   3.00 -0.02\nmsc2      2 680   2.54   0.72   3.00    2.53   1.48 1.00   4   3.00 -0.02\nmsc3      3 750   2.49   0.75   2.00    2.49   1.48 1.00   4   3.00  0.00\nmsc4      4 750   2.48   0.75   2.00    2.48   1.48 1.00   4   3.00  0.06\nage       5 670  10.03   1.76  10.03   10.02   1.46 5.44  30  24.56  2.11\nsex       6 711   0.50   0.50   0.00    0.50   0.00 0.00   1   1.00  0.01\nedu       7 750   2.67   1.25   3.00    2.79   1.48 0.00   4   4.00 -0.59\nfLang*    8 730   4.89   0.58   5.00    5.00   0.00 1.00   7   6.00 -2.93\nid        9 750 375.50 216.65 375.50  375.50 277.99 1.00 750 749.00  0.00\nmsc3r    10 750   2.51   0.75   3.00    2.51   1.48 1.00   4   3.00  0.00\nmsc4r    11 750   2.52   0.75   3.00    2.52   1.48 1.00   4   3.00 -0.06\nmsc      12 680   2.53   0.61   2.50    2.53   0.74 1.00   4   3.00 -0.07\n       kurtosis   se\nmsc1      -0.31 0.03\nmsc2      -0.27 0.03\nmsc3      -0.34 0.03\nmsc4      -0.33 0.03\nage       23.94 0.07\nsex       -2.00 0.02\nedu       -0.73 0.05\nfLang*    19.28 0.02\nid        -1.20 7.91\nmsc3r     -0.34 0.03\nmsc4r     -0.33 0.03\nmsc       -0.35 0.02\n\n\nThe describe output is easily transformed into a data.frame which then can be passed to the kbl function from the kableExtra package (Zhu, 2021).\n\nkableExtra::kbl(x = as.data.frame(psych::describe(x = exDat))[c(\"n\", \"mean\", \"sd\")],\n                caption = \"Descriptive Statistics of the example data set calculated by the psych package [@R-psych]\",\n                digits = 2) |&gt;\n  kableExtra::kable_paper()\n\n\nDescriptive Statistics of the example data set calculated by the psych package [@R-psych]\n\n\nn\nmean\nsd\n\n\n\nmsc1\n750\n2.52\n0.74\n\n\nmsc2\n680\n2.54\n0.72\n\n\nmsc3\n750\n2.49\n0.75\n\n\nmsc4\n750\n2.48\n0.75\n\n\nage\n670\n10.03\n1.76\n\n\nsex\n711\n0.50\n0.50\n\n\nedu\n750\n2.67\n1.25\n\n\nfLang*\n730\n4.89\n0.58\n\n\nid\n750\n375.50\n216.65\n\n\nmsc3r\n750\n2.51\n0.75\n\n\nmsc4r\n750\n2.52\n0.75\n\n\nmsc\n680\n2.53\n0.61\n\n\n\n\n\nIf you need to calculate the descriptive statistics separate for groups, there is the describeBy function. Use the group argument.\n\npsych::describeBy(x = exDat, group =\"sex\")\n\n\n Descriptive statistics by group \nsex: 0\n       vars   n   mean     sd median trimmed    mad  min max  range  skew\nmsc1      1 357   2.48   0.72   2.00    2.48   1.48 1.00   4   3.00  0.01\nmsc2      2 323   2.53   0.71   3.00    2.54   1.48 1.00   4   3.00 -0.10\nmsc3      3 357   2.52   0.71   3.00    2.53   1.48 1.00   4   3.00 -0.10\nmsc4      4 357   2.50   0.73   2.00    2.47   1.48 1.00   4   3.00  0.18\nage       5 320  10.13   1.96  10.07   10.11   1.51 5.44  30  24.56  3.11\nsex       6 357   0.00   0.00   0.00    0.00   0.00 0.00   0   0.00   NaN\nedu       7 357   2.71   1.26   3.00    2.85   1.48 0.00   4   4.00 -0.65\nfLang*    8 347   4.88   0.51   5.00    5.00   0.00 1.00   6   5.00 -4.99\nid        9 357 381.09 214.74 390.00  383.46 272.80 1.00 749 748.00 -0.08\nmsc3r    10 357   2.48   0.71   2.00    2.47   1.48 1.00   4   3.00  0.10\nmsc4r    11 357   2.50   0.73   3.00    2.53   1.48 1.00   4   3.00 -0.18\nmsc      12 323   2.50   0.59   2.50    2.50   0.74 1.00   4   3.00 -0.04\n       kurtosis    se\nmsc1      -0.28  0.04\nmsc2      -0.25  0.04\nmsc3      -0.26  0.04\nmsc4      -0.30  0.04\nage       31.40  0.11\nsex         NaN  0.00\nedu       -0.67  0.07\nfLang*    31.23  0.03\nid        -1.20 11.37\nmsc3r     -0.26  0.04\nmsc4r     -0.30  0.04\nmsc       -0.20  0.03\n------------------------------------------------------------ \nsex: 1\n       vars   n   mean     sd median trimmed    mad min    max  range  skew\nmsc1      1 354   2.55   0.76   3.00    2.54   1.48 1.0   4.00   3.00 -0.06\nmsc2      2 321   2.56   0.73   3.00    2.54   1.48 1.0   4.00   3.00 -0.01\nmsc3      3 354   2.46   0.79   2.00    2.46   1.48 1.0   4.00   3.00  0.08\nmsc4      4 354   2.47   0.76   2.00    2.49   1.48 1.0   4.00   3.00 -0.02\nage       5 313   9.94   1.53  10.02    9.94   1.45 5.7  14.76   9.06  0.03\nsex       6 354   1.00   0.00   1.00    1.00   0.00 1.0   1.00   0.00   NaN\nedu       7 354   2.62   1.25   3.00    2.73   1.48 0.0   4.00   4.00 -0.51\nfLang*    8 344   4.89   0.63   5.00    5.00   0.00 1.0   7.00   6.00 -2.30\nid        9 354 369.27 220.29 357.50  366.72 285.40 2.0 750.00 748.00  0.08\nmsc3r    10 354   2.54   0.79   3.00    2.54   1.48 1.0   4.00   3.00 -0.08\nmsc4r    11 354   2.53   0.76   3.00    2.51   1.48 1.0   4.00   3.00  0.02\nmsc      12 321   2.55   0.63   2.50    2.57   0.74 1.0   4.00   3.00 -0.13\n       kurtosis    se\nmsc1      -0.36  0.04\nmsc2      -0.31  0.04\nmsc3      -0.43  0.04\nmsc4      -0.38  0.04\nage        0.16  0.09\nsex         NaN  0.00\nedu       -0.85  0.07\nfLang*    14.41  0.03\nid        -1.23 11.71\nmsc3r     -0.43  0.04\nmsc4r     -0.38  0.04\nmsc       -0.42  0.04"
  },
  {
    "objectID": "item-analy-descr.html#cronbachs-alpha-and-item-statistics",
    "href": "item-analy-descr.html#cronbachs-alpha-and-item-statistics",
    "title": "9  Descriptive statistics and item analysis",
    "section": "\n9.2 Cronbachs \\(\\alpha\\) and item statistics",
    "text": "9.2 Cronbachs \\(\\alpha\\) and item statistics\n\nCoefficient \\(\\alpha\\) is often called an internal consistency reliability coefficient, as it is based on covariances among scale items and thus internal consistency among items. But internal consistency should not be conflated with homogeneity, where homogeneity implies that a single dimension underlies the set of items (Widaman & Revelle, 2022).\n\n\n\n\n\n\n\nCoefficient \\(\\alpha\\) debate\n\n\n\nSome interesting reads: Cronbach (1951);Revelle & Zinbarg (2009); Sijtsma (2009); McNeish (2017); Savalei & Reise (2019)\n\n\nFollowing again the description and notation of Widaman & Revelle (2022):\nCoefficient alpha, or \\(\\alpha\\) can be written as\n\\[\n\\alpha = (\\frac{p}{p-1})\\left(\\frac{\\sigma_Y^2-\\sum\\limits_{j=1}^p\\sigma_j^2}{\\sigma_Y^2}\\right) = (\\frac{p}{p-1})\\left(1- \\frac{\\sum\\limits_{j=1}^p\\sigma_j^2}{\\sigma_Y^2}\\right)\n\\tag{9.1}\\]\nwhere \\(p\\) is the number of items on the scale, \\(\\sigma_j^2\\) (\\(j=1,...,p\\)) is the variance of item \\(j\\), […]. \\(\\sigma_Y^2\\) is the variance of the sum score.\nNow lets calculate Cronbachs \\(\\alpha\\). We use the variables msc1,msc2,msc3r, & msc4r from the example data set (exDat).\n\n\n\n\n\n\nMissing values and Cronbachs \\(\\alpha\\)\n\n\n\n\n\nThere are many different packages which implemented the calculation of Cronbachs \\(\\alpha\\). For example:\n\nalpha function from the psych package (Revelle, 2023)\nitemstats function from the mirt package (Chalmers, 2022)\ncronbach function from the psy package (Falissard, 2022)\ncronbach.alpha function from the ltm package (Rizopoulos, 2022)\n\nInterestingly, these package implemented different approaches (and options) in how they deal with missing values which (may) lead to (slightly) different results.\n\nShow/hide codeexDatmiss &lt;- exDat\n\n# add some more missing data, this adds up when calculating the sum score\n\nexDatmiss$msc3r &lt;- ifelse (\n  rbinom(\n    nrow(exDatmiss),\n    size = 1,\n    .25) == 1,\n  NA,\n  exDatmiss$msc3r\n  )\n\nexDatmiss$msc1 &lt;- ifelse (\n  rbinom(\n    nrow(exDatmiss),\n    size = 1,\n    .15) == 1,\n  NA,\n  exDatmiss$msc1\n  )\n\n\n\nShow/hide codealphaOver &lt;- data.frame(\n  \"alpha\" = rbind(\n    psych::alpha(exDatmiss[,names(mscItems)])$total$raw_alpha,\n    psy::cronbach(exDatmiss[,names(mscItems)])$alpha,\n    mirt::itemstats(exDatmiss[,names(mscItems)])$overall$alpha,\n    ltm::cronbach.alpha(exDatmiss[,names(mscItems)], na.rm = T)$alpha\n    )\n  )\n    \nalphaOver$Package &lt;- c(\"psych\", \"psy\", \"mirt\", \"ltm\")\n\nkableExtra::kbl(alphaOver[,c(\"Package\", \"alpha\")],\n                col.names = c(\"Package\", \"Cronbachs $\\\\alpha$\"),\n                digits = 5,\n                centering = TRUE) |&gt;\n  kableExtra::kable_styling(full_width = FALSE,\n                            bootstrap_options = c(\"hover\", \"responsive\"))\n\n\n\n\nTable 9.1: Overview of different Cronbach \\(\\alpha\\) calculations\n\nPackage\nCronbachs $\\alpha$\n\n\n\npsych\n0.84687\n\n\npsy\n0.84429\n\n\nmirt\n0.84429\n\n\nltm\n0.83658\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCronbachs \\(\\alpha\\) and item statistics with base R\nCronbachs \\(\\alpha\\) and item statistics with psych\n\n\n\n\nBefore we calculate Cronbachs \\(\\alpha\\), we remove (using the na.omit function) all incomplete cases from the data set.\n\n\nitemDF &lt;- na.omit(exDat[names(mscItems)])\n\n\nGet the number of items (\\(p\\))\n\n\np &lt;- length(mscItems)\n\n\nCalculate the sum (i.e., sum function) of \\(\\sigma_j^2\\) of all items using the apply function (see also above) and \\(\\sigma_Y^2\\) of the total score (that is calculated by the rowSums function; see below for a detailed description of the function).\n\n\nsigmaInd &lt;- sum(apply(itemDF, 2, sd)^2)\nsigmaTot &lt;- var(rowSums(itemDF))\n\n\nApply Equation 9.1\n\n\n\nalpha &lt;- (p/(p - 1)) * (1 - sigmaInd/ sigmaTot )\nalpha\n\n[1] 0.8496289\n\n\nAn important item statistics is the so-called Item whole correlation for this item against the scale without this item (in the alpha function from the psych package (Revelle, 2023) this is called: r.drop).\n\nRecall, the names of the items are stored in the named list object (i.e., mscItems).\n\n\nnames(mscItems)\n\n[1] \"msc1\"  \"msc2\"  \"msc3r\" \"msc4r\"\n\n\n\nTo correlate the first item with the sum score, we use the cor function. To ignore the item when calculating the sum score, we state [-1] after the names call of the named list.\n\n\ncor(x = exDat[,\"msc1\"],\n    y = rowSums(exDat[names(mscItems)[-1]]),\n    use = \"pairwise.complete.obs\")\n\n[1] 0.6657391\n\n\n\nNow, we do it for all items. Therefore, we may use the sapply function. More specifically, we iterate through the item names (or to be precise, through the length of the item names)4. In the input argument x we (only) use the respective item [itemNr], while we ignore it [-itemNr] when calculating the sum score in the second input argument y.\n\n\nsapply(1:length(names(mscItems)),\n       function(itemNr) cor(x = exDat[,names(mscItems)[itemNr]],\n                            y = rowSums(exDat[names(mscItems)[-itemNr]]),\n                            use = \"pairwise.complete.obs\"))\n\n[1] 0.6657391 0.6269790 0.7422577 0.7205174\n\n\n\n\nIn the psych package (Revelle, 2023), the alpha function is designed to calculate Cronbachs \\(\\alpha\\). The function has several input arguments (see ?psych::alpha), but requires only x: A data.frame or matrix of data, or a covariance or correlation matrix.\nThe function returns a couple of lists, including:\n\ndifferent \\(\\alpha\\) estimates (i.e., raw_alpha, std.alpha)\nitem statistics (e.g., item whole correlation corrected for item overlap and scale reliability, item whole correlation for this item against the scale without this item, …)\nresponse frequencies\ncalculated mean- or sum score (depending on the cumulative argument)\n…\n\n\npsych::alpha(x = exDat[names(mscItems)])\n\n\nReliability analysis   \nCall: psych::alpha(x = exDat[names(mscItems)])\n\n  raw_alpha std.alpha G6(smc) average_r S/N    ase mean   sd median_r\n      0.85      0.85    0.82      0.59 5.7 0.0089  2.5 0.62     0.57\n\n    95% confidence boundaries \n         lower alpha upper\nFeldt     0.83  0.85  0.87\nDuhachek  0.83  0.85  0.87\n\n Reliability if an item is dropped:\n      raw_alpha std.alpha G6(smc) average_r S/N alpha se   var.r med.r\nmsc1       0.82      0.82    0.76      0.60 4.5    0.012 0.01145  0.55\nmsc2       0.84      0.84    0.78      0.63 5.2    0.010 0.00617  0.59\nmsc3r      0.79      0.79    0.71      0.55 3.7    0.013 0.00080  0.55\nmsc4r      0.79      0.79    0.72      0.56 3.9    0.013 0.00063  0.55\n\n Item statistics \n        n raw.r std.r r.cor r.drop mean   sd\nmsc1  750  0.82  0.82  0.72   0.67  2.5 0.74\nmsc2  680  0.79  0.79  0.67   0.62  2.5 0.72\nmsc3r 750  0.87  0.86  0.82   0.74  2.5 0.75\nmsc4r 750  0.86  0.85  0.80   0.73  2.5 0.75\n\nNon missing response frequency for each item\n         1    2    3    4 miss\nmsc1  0.07 0.42 0.44 0.08 0.00\nmsc2  0.06 0.41 0.45 0.07 0.09\nmsc3r 0.07 0.42 0.43 0.08 0.00\nmsc4r 0.08 0.41 0.44 0.08 0.00"
  },
  {
    "objectID": "item-analy-descr.html#calculating-scale-scores",
    "href": "item-analy-descr.html#calculating-scale-scores",
    "title": "9  Descriptive statistics and item analysis",
    "section": "\n9.3 Calculating scale scores",
    "text": "9.3 Calculating scale scores\nNow, we calculate scale scores (i.e., \\(msc_{sum}\\), \\(msc_{avg}\\)) of the items \\(msc_1,msc_2,msc_3r,msc_{4r}\\).\n\n\n\n\n\n\nScale scores\n\n\n\nSome interesting reads: Widaman & Revelle (2022); McNeish & Wolf (2020); Rose et al. (2019)\n\n\n\n\nrowSums from base R\nscoreItems from psych\n\n\n\nThe rowSums function needs one input (copied from the function description):\n\n\nx: an array of two or more dimensions, containing numeric, complex, integer or logical values, or a numeric data frame.\n\nBut the na.rm argument needs special attention:\n\n\nna.rm: logical. Should missing values (including NaN) be omitted from the calculations?\n\nThis argument is important when some items have missing data. The question is: Should the scores be build based on the available items (this procedure is called person mean imputation) or discarded?\nEnders (2010) summarizes it as follows (p.51):\n\nUntil more research accumulates, you should use person mean imputation with caution and should perhaps avoid it altogether, particularly if there are high rates of item nonresponse.\n\nThis means, we set na.rm = FALSE. It is important to note, that there are options to circumvent this issue, such as a model-based estimation of composite scores (Rose et al., 2019) or multiple imputation (Enders, 2010; see e.g., Schafer & Graham, 2002)\n\nCalculation of the sum score\n\n\nexDat$mscsum &lt;- rowSums(x = exDat[,names(mscItems)],\n                        na.rm = FALSE)\n\n\nCalculation of the average score\n\n\nexDat$mscavg &lt;- rowSums(x = exDat[,names(mscItems)],\n                        na.rm = FALSE)/length(names(mscItems))\n\n\n\nTo calculate scale scores, you can also use the scoreItems function from the psych package (Revelle, 2023).\nThe scoreItems function needs at least two inputs (copied from the package description):\n\n\nkeys: list of scoring keys or a matrix or data.frame of -1, 0, or 1 weights for each item on each scale which may be created by hand […]. Here we assign an equal weight (=1) for all items\n\nitems: Matrix or data.frame of raw item scores\n\nHowever, there a more input arguments that are important:\n\n\ntotals: if TRUE find total scores (!aka sum scores), if FALSE (default), find average scores\n\nmissing: missing = TRUE is the normal case and data are imputed according to the impute option. missing = FALSE, only complete cases are scored.\n\nIt is recommended to use missing = FALSE (see Approach 1: rowSums).\nBecause the function calculates several other statistics (e.g., Cronbachs \\(\\alpha\\), average correlation within a scale, …), we do it in two-step approach. Executing the function and save the information in an object, and then extracting (with the $ operator) the scores from the object (i.e., MscsumPsych$scores) while merging the scores with the example data set (i.e., by rownames via by = 0) . Merging is necessary because of missing = FALSE.\n\nCalculation of the sum score\n\n\nMscsumPsych &lt;- psych::scoreItems(keys = rep(1, length(names(mscItems))),\n                                 items = exDat[,names(mscItems)],\n                                 totals = TRUE,\n                                 missing = FALSE,\n                                 min = 1,\n                                 max = 4)\n\n\ncolnames(MscsumPsych$scores) &lt;- \"mscsum2\"\n\nexDat &lt;- merge(exDat, MscsumPsych$scores,\n               by = 0,\n               all.x = T)\nexDat$Row.names &lt;- NULL\n\n\nCalculation of the average score\n\n\nMscavgPsych &lt;- psych::scoreItems(keys = rep(1, length(names(mscItems))),\n                                 items = exDat[,names(mscItems)],\n                                 totals = FALSE,\n                                 missing = FALSE,\n                                 min = 1,\n                                 max = 4)\n\n\ncolnames(MscavgPsych$scores) &lt;- \"mscavg2\"\n\nexDat &lt;- merge(exDat, MscavgPsych$scores,\n               by = 0,\n               all.x = T)\nexDat$Row.names &lt;- NULL\n\n\n\n\n\n9.3.1 Calculating many scale scores\n\n\n#names(scaleList)\n\nThen using the sapply function to iterate through the list elements and applying the rowSums function. Note we calculate average scores, because we divide through the total score through the number of items.\n\nexDat[,names(scaleList)] &lt;- sapply(scaleList,\n                                     function(s) rowSums(x = exDat[,s],\n                                                         na.rm = FALSE)/length(s),\n                                     simplify = FALSE)\n\n\n\n\n\n\n\nChalmers, P. (2022). Mirt: Multidimensional item response theory. https://CRAN.R-project.org/package=mirt\n\n\nCronbach, L. J. (1951). Coefficient alpha and the internal structure of tests. Psychometrika, 16(3), 297–334. https://doi.org/10.1007/BF02310555\n\n\nEnders, C. K. (2010). Applied missing data analysis. Guilford Press.\n\n\nFalissard, B. (2022). Psy: Various procedures used in psychometrics. https://CRAN.R-project.org/package=psy\n\n\nMcNeish, D. (2017). Thanks coefficient alpha, we’ll take it from here. Psychological Methods. https://doi.org/10.1037/met0000144\n\n\nMcNeish, D., & Wolf, M. G. (2020). Thinking twice about sum scores. Behavior Research Methods, 52(6), 2287–2305. https://doi.org/10.3758/s13428-020-01398-0\n\n\nRevelle, W. (2023). Psych: Procedures for psychological, psychometric, and personality research. https://personality-project.org/r/psych/ https://personality-project.org/r/psych-manual.pdf\n\n\nRevelle, W., & Zinbarg, R. E. (2009). Coefficients alpha, beta, omega, and the glb: Comments on sijtsma. Psychometrika, 74(1), 145–154. https://doi.org/10.1007/s11336-008-9102-z\n\n\nRizopoulos, D. (2022). Ltm: Latent trait models under IRT. https://github.com/drizopoulos/ltm\n\n\nRose, N., Wagner, W., Mayer, A., & Nagengast, B. (2019). Model-based manifest and latent composite scores in structural equation models. Collabra: Psychology, 5(1), 243. https://doi.org/10.1525/collabra.143\n\n\nSavalei, V., & Reise, S. P. (2019). Don’t forget the model in your model-based reliability coefficients: A reply to McNeish (2018). Collabra: Psychology, 5(1), 36. https://doi.org/10.1525/collabra.247\n\n\nSchafer, J. L., & Graham, J. W. (2002). Missing data: Our view of the state of the art. Psychological Methods, 7(2), 147–177. https://doi.org/10.1037/1082-989X.7.2.147\n\n\nSijtsma, K. (2009). On the use, the misuse, and the very limited usefulness of cronbach’s alpha. Psychometrika, 74(1), 107–120. https://doi.org/10.1007/s11336-008-9101-0\n\n\nWidaman, K. F., & Revelle, W. (2022). Thinking thrice about sum scores, and then some more about measurement and analysis. Behavior Research Methods. https://doi.org/10.3758/s13428-022-01849-w\n\n\nZhu, H. (2021). kableExtra: Construct complex table with kable and pipe syntax. https://CRAN.R-project.org/package=kableExtra"
  },
  {
    "objectID": "item-analy-descr.html#footnotes",
    "href": "item-analy-descr.html#footnotes",
    "title": "9  Descriptive statistics and item analysis",
    "section": "",
    "text": "That is actually a three-step approach.↩︎\nIt is also possible to write a function in advance and use them in this argument. A short introduction how to write function can be found here.↩︎\nNote that this is actually not necessary.↩︎\nCheck it by writing: 1:length(names(mscItems))↩︎"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Aden-Buie, G., Schloerke, B., Allaire, J., & Rossell Hayes, A.\n(2023). Learnr: Interactive tutorials for r. https://CRAN.R-project.org/package=learnr\n\n\nAllaire, J. (2022). Quarto: R interface to quarto markdown\npublishing system. https://github.com/quarto-dev/quarto-r\n\n\nAllaire, J., Xie, Y., Dervieux, C., McPherson, J., Luraschi, J., Ushey,\nK., Atkins, A., Wickham, H., Cheng, J., Chang, W., & Iannone, R.\n(2023). Rmarkdown: Dynamic documents for r. https://CRAN.R-project.org/package=rmarkdown\n\n\nBache, S. M., & Wickham, H. (2022). Magrittr: A forward-pipe\noperator for r. https://CRAN.R-project.org/package=magrittr\n\n\nChalmers, P. (2022). Mirt: Multidimensional item response\ntheory. https://CRAN.R-project.org/package=mirt\n\n\nCronbach, L. J. (1951). Coefficient alpha and the internal structure of\ntests. Psychometrika, 16(3), 297–334. https://doi.org/10.1007/BF02310555\n\n\nDowle, M., & Srinivasan, A. (2023). Data.table: Extension of\n‘data.frame‘. https://CRAN.R-project.org/package=data.table\n\n\nEnders, C. K. (2010). Applied missing data analysis.\nGuilford Press.\n\n\nEnders, C. K. (2023). Missing data: An update on the state of the art.\nPsychological Methods. https://doi.org/10.1037/met0000563\n\n\nFalissard, B. (2022). Psy: Various procedures used in\npsychometrics. https://CRAN.R-project.org/package=psy\n\n\nFox, J., Weisberg, S., & Price, B. (2022). Car: Companion to\napplied regression. https://CRAN.R-project.org/package=car\n\n\nKomsta, L., & Novomestky, F. (2022). Moments: Moments,\ncumulants, skewness, kurtosis and related tests. https://CRAN.R-project.org/package=moments\n\n\nMcNeish, D. (2017). Thanks coefficient alpha, we’ll take it from here.\nPsychological Methods. https://doi.org/10.1037/met0000144\n\n\nMcNeish, D., & Wolf, M. G. (2020). Thinking twice about sum scores.\nBehavior Research Methods, 52(6), 2287–2305. https://doi.org/10.3758/s13428-020-01398-0\n\n\nMüller, K., & Wickham, H. (2023). Tibble: Simple data\nframes. https://CRAN.R-project.org/package=tibble\n\n\nPosit team. (2023). RStudio: Integrated development environment for\nr. Posit Software, PBC. http://www.posit.co/\n\n\nR Core Team. (2022). Foreign: Read data stored by minitab, s, SAS,\nSPSS, stata, systat, weka, dBase, ... https://svn.r-project.org/R-packages/trunk/foreign/\n\n\nR Core Team. (2023). R: A language and environment for statistical\ncomputing. R Foundation for Statistical Computing. https://www.R-project.org/\n\n\nRevelle, W. (2023). Psych: Procedures for psychological,\npsychometric, and personality research. https://personality-project.org/r/psych/\nhttps://personality-project.org/r/psych-manual.pdf\n\n\nRevelle, W., & Zinbarg, R. E. (2009). Coefficients alpha, beta,\nomega, and the glb: Comments on sijtsma. Psychometrika,\n74(1), 145–154. https://doi.org/10.1007/s11336-008-9102-z\n\n\nRizopoulos, D. (2022). Ltm: Latent trait models under IRT. https://github.com/drizopoulos/ltm\n\n\nRose, N., Wagner, W., Mayer, A., & Nagengast, B. (2019). Model-based\nmanifest and latent composite scores in structural equation models.\nCollabra: Psychology, 5(1), 243. https://doi.org/10.1525/collabra.143\n\n\nRosseel, Y., Jorgensen, T. D., & Rockwood, N. (2023). Lavaan:\nLatent variable analysis. https://lavaan.ugent.be\n\n\nSarkar, D. (2021). Lattice: Trellis graphics for r. http://lattice.r-forge.r-project.org/\n\n\nSavalei, V., & Reise, S. P. (2019). Don’t forget the model in your\nmodel-based reliability coefficients: A reply to McNeish (2018).\nCollabra: Psychology, 5(1), 36. https://doi.org/10.1525/collabra.247\n\n\nSchafer, J. L., & Graham, J. W. (2002). Missing data: Our view of\nthe state of the art. Psychological Methods, 7(2),\n147–177. https://doi.org/10.1037/1082-989X.7.2.147\n\n\nSijtsma, K. (2009). On the use, the misuse, and the very limited\nusefulness of cronbach’s alpha. Psychometrika, 74(1),\n107–120. https://doi.org/10.1007/s11336-008-9101-0\n\n\nvan Buuren, S., & Groothuis-Oudshoorn, K. (2021). Mice:\nMultivariate imputation by chained equations. https://CRAN.R-project.org/package=mice\n\n\nWickham, H. (2023). Tidyverse: Easily install and load the\ntidyverse. https://CRAN.R-project.org/package=tidyverse\n\n\nWickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K.,\nWilke, C., Woo, K., Yutani, H., & Dunnington, D. (2023).\nggplot2: Create elegant data visualisations using the grammar of\ngraphics. https://CRAN.R-project.org/package=ggplot2\n\n\nWickham, H., François, R., Henry, L., Müller, K., & Vaughan, D.\n(2023). Dplyr: A grammar of data manipulation. https://CRAN.R-project.org/package=dplyr\n\n\nWickham, H., Miller, E., & Smith, D. (2022). Haven: Import and\nexport SPSS, stata and SAS files. https://CRAN.R-project.org/package=haven\n\n\nWidaman, K. F., & Revelle, W. (2022). Thinking thrice about sum\nscores, and then some more about measurement and analysis. Behavior\nResearch Methods. https://doi.org/10.3758/s13428-022-01849-w\n\n\nWissik, T., & Ďurčo, M. (2015). Research data workflows: From\nresearch data lifecycle models to institutional solutions. http://www.ep.liu.se/ecp/123/008/ecp15123008.pdf\n\n\nXie, Y. (2023). Knitr: A general-purpose package for dynamic report\ngeneration in r. https://yihui.org/knitr/\n\n\nZhu, H. (2021). kableExtra: Construct complex table with kable and\npipe syntax. https://CRAN.R-project.org/package=kableExtra"
  }
]